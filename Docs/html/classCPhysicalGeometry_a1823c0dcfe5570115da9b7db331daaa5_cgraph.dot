digraph "CPhysicalGeometry::DetermineFEMConstantJacobiansAndLenScale"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CPhysicalGeometry::\lDetermineFEMConstantJacobians\lAndLenScale",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Determine whether or not the Jacobians of the elements and faces are constant and a length scale of t..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="dot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$util_8hpp.html#a67fa0c6906ccf410ef038dede765af81",tooltip="Dot product."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#af7297d861dca86b45cf561b6ab642e8f",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CBlasStructure::gemm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBlasStructure.html#ad282634317e0a32bce7896e2ddc40043",tooltip="Function, which carries out a dense matrix product. It is a limited version of the BLAS gemm function..."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CConfig::GEMM_Tick",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a2843524e5245c2c6128acdd20e746f4a",tooltip="Start the timer for profiling subroutines."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CBaseMPIWrapper::Wtime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#adcf32aa628d4b515e8835bc5c56fbf08",tooltip=" "];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="omp_get_wtime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a649bd48ab038a72108f11f5a85316266",tooltip="Return the wall time."];
  Node5 -> Node9 [id="edge8_Node000005_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CConfig::GEMM_Tock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a695fe18134532a43b328845dd0cce3bb",tooltip="Stop the timer for the GEMM profiling and store results."];
  Node9 -> Node7 [id="edge9_Node000009_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CPoint::GetCoord",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#ab16c29dd03911529cd73bf467c313179",tooltip="Get the coordinates dor the control volume."];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CPrimalGrid::GetCornerPoints\lAllFaces",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#ac443fe58e9f5e11cfa78ae9d0fa2afd9",tooltip="Virtual function, that must be overwritten by the derived class, if needed."];
  Node1 -> Node12 [id="edge12_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CPoint::GetGlobalIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#a8a53865a92d645b1b74c4d817b4aae10",tooltip="Get the global index in a parallel computation."];
  Node1 -> Node13 [id="edge13_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CPrimalGrid::GetNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#a6353b89f5a8a3948cd475da6152bf077",tooltip="Get the nodes shared by the primal grid element."];
  Node1 -> Node14 [id="edge14_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CPrimalGrid::GetNPolyGrid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#abc26f8822bb8200280541e75838c6597",tooltip="Virtual function to make available the polynomial degree of the grid."];
  Node1 -> Node15 [id="edge15_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CPrimalGrid::GetVTK_Type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#ad506ad8f97dd70d71c1ee6f407df4cf5",tooltip="Get VTK type."];
  Node1 -> Node16 [id="edge16_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CPrimalGrid::ResetJacobian\lConstantFaces",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#adee49719961eb08b5fb0affeec7386ab",tooltip="Reset the array, which stores whether or not the faces have a constant Jacobian, to false."];
  Node1 -> Node17 [id="edge17_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CPrimalGrid::SetJacobian\lConsideredConstant",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#ad00ccc196e8f4b758e11bd56b6bc77a5",tooltip="Virtual function to set the value of JacobianConsideredConstant."];
  Node1 -> Node18 [id="edge18_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CPrimalGrid::SetJacobian\lConstantFace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#a0c4ca6939b880fa7383024cea5a2026e",tooltip="Set whether or not the Jacobian of the given face is considered constant."];
  Node1 -> Node19 [id="edge19_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CPrimalGrid::SetLengthScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#a194a88b52edf52db26f10911124c923a",tooltip="Set the length scale of the element."];
  Node1 -> Node20 [id="edge20_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="sqrt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__SIMD.html#ga54a1925ab40fb4249ea255072520de35",tooltip=" "];
}
