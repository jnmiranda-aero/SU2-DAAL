digraph "CConfig::GetContinuous_Adjoint"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="CConfig::GetContinuous\l_Adjoint",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Determines if problem is adjoint."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CEulerSolver::CEulerSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCEulerSolver.html#acb987947b2e76a9900605cb5fee72460",tooltip="Main constructor of this class."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CFlowVariable::CFlowVariable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFlowVariable.html#a60f5b74c097bd87fe008b9d1671868e8",tooltip="Constructor of the class."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CIncEulerSolver::CIncEuler\lSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCIncEulerSolver.html#a2a0c72c1d1d79e45c69da03e01f6281a",tooltip="Constructor of the class."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CNEMOEulerSolver::CNEMOEuler\lSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerSolver.html#a192d56e184ee19ad0b0dd3282b74f1e6",tooltip="Contructor of the class."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CEulerSolver::CommonPreprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCEulerSolver.html#a0d6f93feba8d6aad18edf3594213042b",tooltip="Preprocessing actions common to the Euler and NS solvers."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CEulerSolver::Preprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCEulerSolver.html#ab08b6aa95648e7ab973f9f247fe54b31",tooltip="Compute primitive variables and their gradients."];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CNSSolver::Preprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNSSolver.html#af83e7cb773797239cdc98fc4d202d32f",tooltip="Restart residual and compute gradients."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CFVMFlowSolverBase\l::CompleteImplicitIteration_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#a3eb0fbabf1ce42ccc0fe626473800e09",tooltip="Generic implementation to complete an implicit iteration, i.e. update the solution."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CFVMFlowSolverBase\l::Explicit_Iteration_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#ac30c9255150f29da2915a85264a1676c",tooltip="Generic implementation of explicit iterations with a preconditioner."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CPoint::FullAllocation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#aab6cc5a097e6be90c54c30fc6438761b",tooltip="Allocate the variables not covered by the minimal constructor."];
  Node11 -> Node12 [id="edge11_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CPoint::CPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#a6cb9acc7bf4554e4bd13f1d30478836e",tooltip="\"Full\" constructor of the class."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CFluidIteration::Iterate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFluidIteration.html#a9ce0d8765aff42207afcd2c9ab6f71d8",tooltip="Perform a single iteration of the fluid system."];
  Node13 -> Node14 [id="edge13_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CFluidIteration::Solve",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFluidIteration.html#ae4c454356af70246063fdcba4accb068",tooltip="Iterate the fluid system for a number of Inner_Iter iterations."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CBaselineSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaselineSolver.html#aa5fad3af8c5b48950679d5c5a3a91ec4",tooltip="Load a solution from a restart file."];
  Node1 -> Node16 [id="edge15_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CBaselineSolver::LoadRestart_FSI",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaselineSolver.html#ad3404f10c41c7bffbd682cb650476689",tooltip="Load a FSI solution from a restart file."];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CDriver::PreprocessInlet",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDriver.html#acb98c972bfd29fc1bab737d7c117544a",tooltip="Preprocess the inlets via file input for all solvers."];
  Node17 -> Node18 [id="edge17_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CDriver::InitializeSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDriver.html#ae57e1a2eb7e8f19259176afdab83e840",tooltip="Definition and allocation of all solution classes."];
  Node18 -> Node19 [id="edge18_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CDriver::CDriver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDriver.html#a3fca4a013a6efa9bbb38fe78a86b5f3d",tooltip="Constructor of the class."];
  Node1 -> Node20 [id="edge19_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CDriver::RestartSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDriver.html#aebfaa7d180ed13e44f71fed2f6d5b128",tooltip="Restart of the solvers from the restart files."];
  Node20 -> Node19 [id="edge20_Node000020_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node18 [id="edge21_Node000020_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge22_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CVolumetricMovement\l::Rigid_Pitching",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a9806afa50b53c60376844053db15420c",tooltip="Unsteady pitching grid movement using rigid mesh motion."];
  Node21 -> Node22 [id="edge23_Node000021_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CIteration::SetGrid\l_Movement",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCIteration.html#a7b36785762f6b0c214569b185b858b6c",tooltip="Updates the positions and grid velocities for dynamic meshes between physical time steps."];
  Node22 -> Node23 [id="edge24_Node000022_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CFluidDriver::DynamicMesh\lUpdate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFluidDriver.html#a169667db03c0f4e2511d23a8a29280f6",tooltip="Perform a dynamic mesh deformation, included grid velocity computation and the update of the multi-gr..."];
  Node23 -> Node24 [id="edge25_Node000023_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CFluidDriver::StartSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFluidDriver.html#aa0139a1e26f43f0154854c9f99ded978",tooltip="Launch the computation for all zones and all physics."];
  Node22 -> Node25 [id="edge26_Node000022_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="CMultizoneDriver::Dynamic\lMeshUpdate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#a53ec5acb13bb0e897515e098b11b10ac",tooltip="Perform a dynamic mesh deformation, included grid velocity computation and the update of the multigri..."];
  Node22 -> Node26 [id="edge27_Node000022_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="CSinglezoneDriver::\lDynamicMeshUpdate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSinglezoneDriver.html#a2f88f82c3b958d60452d5513daf5c128",tooltip="Perform a dynamic mesh deformation, included grid velocity computation and the update of the multigri..."];
  Node26 -> Node27 [id="edge28_Node000026_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="CSinglezoneDriver::\lPreprocess",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSinglezoneDriver.html#a0b2c8c9b257915d6b19d72014f3bb82a",tooltip="Preprocess the single-zone iteration."];
  Node27 -> Node28 [id="edge29_Node000027_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="CSinglezoneDriver::\lStartSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSinglezoneDriver.html#ac98c6acfe034381fb3b77c6753c4d734",tooltip="[Overload] Launch the computation for single-zone problems."];
  Node26 -> Node29 [id="edge30_Node000026_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CSinglezoneDriver::\lSetInitialMesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSinglezoneDriver.html#aec7315f833718d3f1ac6c2fb2b2a661b",tooltip="Perform a mesh deformation as initial condition."];
  Node22 -> Node30 [id="edge31_Node000022_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CMultizoneDriver::Dynamic\lMeshUpdate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#a9369ae70a2e529fa81cef90c3857f1c7",tooltip="Perform a dynamic mesh deformation, including grid velocity computation and update of the multigrid s..."];
  Node30 -> Node31 [id="edge32_Node000030_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CDiscAdjMultizoneDriver\l::HandleDataTransfer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDiscAdjMultizoneDriver.html#ab33de05a7a1f77dcf60014a4a35dd4f1",tooltip="Transfer data between zones and update grids when required."];
  Node31 -> Node32 [id="edge33_Node000031_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CDiscAdjMultizoneDriver\l::SetRecording",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCDiscAdjMultizoneDriver.html#a6858d2798084ac58973760b98cbc268d",tooltip="Record one iteration of the primal problem within each zone."];
  Node30 -> Node37 [id="edge34_Node000030_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="CMultizoneDriver::Preprocess",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCMultizoneDriver.html#a92c39c3bdad3f83c17e7bdf8acbfe0f7",tooltip="Preprocess the multizone iteration."];
  Node30 -> Node39 [id="edge35_Node000030_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="CMultizoneDriver::RunGauss\lSeidel",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCMultizoneDriver.html#a264bb90660193f4c197a3b64df8ccb22",tooltip="Run a Block Gauss-Seidel iteration in all physical zones."];
  Node30 -> Node41 [id="edge36_Node000030_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="CMultizoneDriver::RunJacobi",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCMultizoneDriver.html#a6a3c67903b810b5cd8c392691ff2e86e",tooltip="Run a Block-Jacobi iteration in all physical zones."];
  Node30 -> Node42 [id="edge37_Node000030_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="CMultizoneDriver::Update",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCMultizoneDriver.html#a0bb9caf0b5fea8d01e714577b0974466",tooltip="Update the dual-time solution within multiple zones."];
  Node22 -> Node13 [id="edge38_Node000022_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node43 [id="edge39_Node000022_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="CDriver::PreprocessDynamicMesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDriver.html#a1c1a52f57d73376cd2e95e730274a6ae",tooltip="GridMovement_Preprocessing."];
  Node43 -> Node19 [id="edge40_Node000043_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node44 [id="edge41_Node000001_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="CVolumetricMovement\l::Rigid_Plunging",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a886e5096f246aec19af2b98bad3e39b2",tooltip="Unsteady plunging grid movement using rigid mesh motion."];
  Node44 -> Node22 [id="edge42_Node000044_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node45 [id="edge43_Node000001_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="CVolumetricMovement\l::Rigid_Rotation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a316597f05a787ca1b683aba66214110b",tooltip="Unsteady grid movement using rigid mesh rotation."];
  Node45 -> Node22 [id="edge44_Node000045_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node46 [id="edge45_Node000001_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="CVolumetricMovement\l::Rigid_Translation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a00368e3044dd07d74e1fafdc11980644",tooltip="Unsteady translational grid movement using rigid mesh motion."];
  Node46 -> Node22 [id="edge46_Node000046_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node47 [id="edge47_Node000001_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="CSurfaceMovement::SetBoundary\l_Flutter3D",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSurfaceMovement.html#adc0f0df29bc1f6c9dad2c37d202d7879",tooltip="Deforms a 3-D flutter/pitching surface during an unsteady simulation."];
  Node1 -> Node48 [id="edge48_Node000001_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="CSurfaceMovement::SetExternal\l_Deformation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSurfaceMovement.html#a575ff545fe6de6e84fb8fed8e1615edb",tooltip="Set any surface deformationsbased on an input file."];
  Node48 -> Node22 [id="edge49_Node000048_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node49 [id="edge50_Node000048_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="CSurfaceMovement::SetSurface\l_Deformation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSurfaceMovement.html#af8da279141f7e64121f3d15019fee45e",tooltip="Set the surface/boundary deformation."];
  Node49 -> Node50 [id="edge51_Node000049_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="CDeformationDriver\l::DeformLegacy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDeformationDriver.html#a3a78157ae57334880516fa9b84b81c0a",tooltip="Mesh deformation based on legacy implementation."];
  Node50 -> Node51 [id="edge52_Node000050_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="CDeformationDriver\l::DeformMesh",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCDeformationDriver.html#a65c57fd20981a9d24e54421f381e0570",tooltip="Mesh deformation based on linear elasticity solver (CMeshSolver)."];
  Node49 -> Node54 [id="edge53_Node000049_Node000054",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="CDiscAdjDeformationDriver\l::SetProjection_AD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDiscAdjDeformationDriver.html#a6cb4f362b649e12ef2afad764de6d70a",tooltip="Projection of the surface sensitivity using algorithmic differentiation (AD)."];
  Node54 -> Node55 [id="edge54_Node000054_Node000055",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="CDiscAdjDeformationDriver::Run",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCDiscAdjDeformationDriver.html#adb51f9096356607d6f48c05891dec0cb",tooltip="Launch the driver computation."];
  Node49 -> Node57 [id="edge55_Node000049_Node000057",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="CSurfaceMovement::SetSurface\l_Derivative",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSurfaceMovement.html#af6aac73d04565bf6e9b81305b66e97e7",tooltip="Set derivatives of the surface/boundary deformation."];
  Node57 -> Node43 [id="edge56_Node000057_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node22 [id="edge57_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node58 [id="edge58_Node000001_Node000058",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="CBaselineSolver::SetOutput\lVariables",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaselineSolver.html#ab8e4b1b71d637dd0adee324d4a7a6315",tooltip="Set the number of variables and string names from the restart file."];
  Node58 -> Node59 [id="edge59_Node000058_Node000059",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="CBaselineSolver::CBaseline\lSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaselineSolver.html#a996d9c6ee613b5b45a25a765f3c5e2cd",tooltip=" "];
}
