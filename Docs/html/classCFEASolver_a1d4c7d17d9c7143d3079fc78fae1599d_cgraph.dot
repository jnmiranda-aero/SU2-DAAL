digraph "CFEASolver::CFEASolver"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CFEASolver::CFEASolver",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CConfig::GetDE_Effects",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a62ca95c832d0e3492d1a55320b0c06e8",tooltip="Decide whether to apply DE effects to the model."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CConfig::GetDelta_UnstTime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a95f12a968f4553caf9bea4576fbf5812",tooltip="If we are prforming an unsteady simulation, there is only one value of the time step for the complete..."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetMarker\l_All_KindBC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ae003cd8f406eaaa91849a774c9a20730",tooltip="Get the kind of boundary for each marker."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetMultizone\l_Residual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a146929508ca21f46fd0adcbc578b17f7",tooltip="Check if the mesh read supports multiple zones."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CConfig::GetnMarker_All",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a459dee039e618d21a5d78db61c221240",tooltip="Get the total number of boundary markers of the local process including send/receive domains."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CConfig::GetPrestretch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1cb01724397ce2448f6d3836577a16de",tooltip="Decide whether it's necessary to read a reference geometry."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CConfig::GetRefGeom",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#abd9f331e86fcfa1d6984761ae767b719",tooltip="Decide whether it's necessary to read a reference geometry."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CConfig::GetTime_Domain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a85d2e3cf43b77c63642c40c235b853f3",tooltip="Check if the multizone problem is solved for time domain."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CPoint::GetVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#aa23a2b42b38e6d611038eeafdb7051d0",tooltip="Get the vertex that compose the control volume for a marker."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CFEASolver::HybridParallel\lInitialization",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEASolver.html#abcef9eb21dd43cbf8598bdfea0f9fef8",tooltip="Actions required to initialize the supporting variables for hybrid parallel execution."];
  Node11 -> Node12 [id="edge11_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="computeStaticChunkSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a6a308c63005823370a2ffd6a82f3868f",tooltip="Compute a chunk size based on totalWork and number of threads such that all threads get the same numb..."];
  Node12 -> Node13 [id="edge12_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="roundUpDiv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a1c00281f52b615b111a4990b2d2a5157",tooltip="Integer division rounding up."];
  Node11 -> Node14 [id="edge13_Node000011_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node11 -> Node15 [id="edge14_Node000011_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CGeometry::GetElementColor\lGroupSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a90214a4a5c07eb87f9b7175549b8615f",tooltip="Get the group size used in element coloring."];
  Node11 -> Node16 [id="edge15_Node000011_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CGeometry::GetElementColoring",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a0958106e0ba545db5ff7fdcf7a8583ba",tooltip="Get the element coloring."];
  Node16 -> Node24 [id="edge16_Node000016_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="omp_get_max_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a2f7befecc7b1a4eaade8d81fa6524225",tooltip="Maximum number of threads available."];
  Node16 -> Node25 [id="edge17_Node000016_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="CGeometry::SetNaturalElement\lColoring",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a150d5535645653c34a0da93e7b959090",tooltip="Force the natural (sequential) element coloring."];
  Node25 -> Node24 [id="edge18_Node000025_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node24 [id="edge19_Node000011_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node26 [id="edge20_Node000011_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="omp_init_lock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a3813cb266202aaf2950db02d93a2b00b",tooltip=" "];
  Node11 -> Node27 [id="edge21_Node000011_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="CBaseMPIWrapper::Reduce",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBaseMPIWrapper.html#adfe0cc3203ae26745e12fb885af0629b",tooltip=" "];
  Node11 -> Node25 [id="edge22_Node000011_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node31 [id="edge23_Node000001_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CSysMatrix::Initialize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#ae17220ac30c2abcc7fdd3c5dc8f04571",tooltip="Initializes the sparse matrix."];
  Node31 -> Node12 [id="edge24_Node000031_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node20 [id="edge25_Node000031_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="container_details::\lAccessorImpl::data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcontainer__details_1_1AccessorImpl.html#a25b798e6041a085aa19399d0047b6a91",tooltip=" "];
  Node31 -> Node29 [id="edge26_Node000031_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node31 -> Node32 [id="edge27_Node000031_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CConfig::GetDiscrete\l_Adjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab3928c4e6debcf50dcd0d38985f6980c",tooltip="Get the indicator whether we are solving an discrete adjoint problem."];
  Node31 -> Node33 [id="edge28_Node000031_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="CGeometry::GetEdgeToSparse\lPatternMap",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a23b0c8683a48437d049bdfd8ca05a216",tooltip="Get the edge to sparse pattern map."];
  Node31 -> Node40 [id="edge29_Node000031_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="CConfig::GetKind_Deform\l_Linear_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a8b36810235437e0319ccab9d7e0e5db0",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node31 -> Node41 [id="edge30_Node000031_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="CConfig::GetKind_DiscAdj\l_Linear_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a968a1fa9afc1e0df8bd1b5c9f6359ea8",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node31 -> Node42 [id="edge31_Node000031_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="CConfig::GetKind_Grad\l_Linear_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aaca6df27a6a89d5795c1ea514f67dfe8",tooltip="Get the kind of preconditioner for the gradient smoothing."];
  Node31 -> Node43 [id="edge32_Node000031_Node000043",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="CConfig::GetKind_Linear\l_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa3e3027bc3231172777ee296694d5e63",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node31 -> Node44 [id="edge33_Node000031_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="CConfig::GetKind_SU2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a8a176b0a0c34db4d6dcc9e55e240e37b",tooltip="Get the kind of SU2 software component."];
  Node31 -> Node45 [id="edge34_Node000031_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="CConfig::GetLinear\l_Solver_ILU_n",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a5bfe7f8f9c3ab60aa2f7b33027dc8690",tooltip="Get the ILU fill-in level for the linear solver."];
  Node31 -> Node46 [id="edge35_Node000031_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="CConfig::GetLinear\l_Solver_Prec_Threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa5becd94866dc4463a2600bac129ce7a",tooltip="Get the number of threads per rank to use for ILU and LU_SGS preconditioners."];
  Node31 -> Node47 [id="edge36_Node000031_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="CGeometry::GetnEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#aba89cceede61b33426b2783385431f5b",tooltip="Get number of edges."];
  Node31 -> Node48 [id="edge37_Node000031_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="CCompressedSparsePattern\l::getNumNonZeros",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCCompressedSparsePattern.html#abbca9e2c2e9f3d3f568772f9edf0c0aa",tooltip=" "];
  Node31 -> Node49 [id="edge38_Node000031_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="CConfig::GetSmoothGradient",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab95541bd4f7a07fa46e26ea0638a656e",tooltip="Check if the gradient smoothing is active."];
  Node31 -> Node50 [id="edge39_Node000031_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="CGeometry::GetSparsePattern",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#ae9384368c5032d69b68a389fef8ded4b",tooltip="Get the sparse pattern of \"type\" with given level of fill."];
  Node31 -> Node54 [id="edge40_Node000031_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="CConfig::GetStructuralProblem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa89d8d244474c95cd3137adcbfafb1da",tooltip="Return true if a structural solver is in use."];
  Node31 -> Node55 [id="edge41_Node000031_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="CGeometry::GetTransposeSparse\lPatternMap",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a93838f0e718dd1c69b1a39e30083ad88",tooltip="Get the transpose of the (main, i.e 0 fill) sparse pattern (e.g. CSR becomes CSC)."];
  Node55 -> Node50 [id="edge42_Node000055_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node24 [id="edge43_Node000031_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node57 [id="edge44_Node000031_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="omp_get_thread_num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#aad63dd7e34961dbbd2e8774e7f6bc2d0",tooltip="Index of current thread, akin to MPI rank."];
  Node31 -> Node58 [id="edge45_Node000031_Node000058",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="CCompressedSparsePattern\l::outerPtr",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCCompressedSparsePattern.html#afad476085646cd0bd3354ab94ec74439",tooltip=" "];
  Node58 -> Node20 [id="edge46_Node000058_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node13 [id="edge47_Node000031_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node57 [id="edge48_Node000001_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node59 [id="edge49_Node000001_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="CFEASolver::OutputForward\lModeGradient",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEASolver.html#aa120d6891f9ef66d26aec221dc221b55",tooltip="Write the forward mode gradient to file."];
  Node59 -> Node9 [id="edge50_Node000059_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node53 [id="edge51_Node000001_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="C2DContainer::resize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC2DContainer.html#a39929b060c72565b4ab19c3a391bb8e6",tooltip="Request a change of size."];
  Node1 -> Node61 [id="edge52_Node000001_Node000061",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="CFEASolver::Set_ElementProperties",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEASolver.html#a30646a552a50f0361d80ba99149eeff1",tooltip="Set container of element properties."];
  Node61 -> Node29 [id="edge53_Node000061_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node73 [id="edge54_Node000001_Node000073",color="steelblue1",style="solid",tooltip=" "];
  Node73 [id="Node000073",label="CVariable::Set_isVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVariable.html#a21e8d2e42c9a6d885066ee9dad5bd11d",tooltip="A virtual member."];
  Node1 -> Node74 [id="edge55_Node000001_Node000074",color="steelblue1",style="solid",tooltip=" "];
  Node74 [id="Node000074",label="CFEASolver::Set_Prestretch",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEASolver.html#a97415c38a336c1bb03a74a61be0c3568",tooltip="Set a reference geometry for prestretched conditions."];
  Node74 -> Node29 [id="edge56_Node000074_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node78 [id="edge57_Node000001_Node000078",color="steelblue1",style="solid",tooltip=" "];
  Node78 [id="Node000078",label="CFEASolver::Set_Reference\lGeometry",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEASolver.html#ae7d8e55f2ec6a53af24eec6d096e9953",tooltip="Set a reference geometry for ."];
  Node78 -> Node29 [id="edge58_Node000078_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node85 [id="edge59_Node000001_Node000085",color="steelblue1",style="solid",tooltip=" "];
  Node85 [id="Node000085",label="CFEASolver::Set_VertexElimination\lSchedule",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEASolver.html#aa4832285a942f3b7f1fe21bbbfa53090",tooltip="Mitigation for an issue with Dirichlet boundary conditions and MPI, some ranks do not get enough of t..."];
  Node1 -> Node90 [id="edge60_Node000001_Node000090",color="steelblue1",style="solid",tooltip=" "];
  Node90 [id="Node000090",label="CSolver::SetBaseClassPointer\lToNodes",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSolver.html#ad982896202dae6e41bfd3568f597cf46",tooltip="Call this method to set \"base_nodes\" after the \"nodes\" variable of the derived solver is instantiated..."];
  Node1 -> Node92 [id="edge61_Node000001_Node000092",color="steelblue1",style="solid",tooltip=" "];
  Node92 [id="Node000092",label="CConfig::SetDelta_UnstTimeND",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a9d3085d222e6ab0b658d79c52b6477fc",tooltip="Set the value of the unsteadty time step using the CFL number."];
  Node1 -> Node93 [id="edge62_Node000001_Node000093",color="steelblue1",style="solid",tooltip=" "];
  Node93 [id="Node000093",label="CFEASolver::SetFSI\l_ConvValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEASolver.html#abdc104723bf1c77680269e7fed79b715",tooltip="Get the value of the FSI convergence."];
}
