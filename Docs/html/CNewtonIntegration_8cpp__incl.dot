digraph "SU2_CFD/src/integration/CNewtonIntegration.cpp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="SU2_CFD/src/integration\l/CNewtonIntegration.cpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Newton-Krylov integration."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="../../include/integration\l/CNewtonIntegration.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CNewtonIntegration_8hpp.html",tooltip="Newton-Krylov integration."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CIntegration.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CIntegration_8hpp.html",tooltip="Declaration of the main routines to orchestrate space and time integration."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="cmath",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="iostream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node3 -> Node6 [id="edge5_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="cstdlib",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node3 -> Node7 [id="edge6_Node000003_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="../solvers/CSolver.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CSolver_8hpp.html",tooltip="Headers of the CSolver class which is inherited by all of the other solvers."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="../../../Common/include\l/parallelization/mpi_structure.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$mpi__structure_8hpp.html",tooltip="Headers of the mpi interface for generalized datatypes. The subroutines and functions are in the mpi_..."];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="stdlib.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node8 -> Node16 [id="edge9_Node000008_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="../parallelization\l/omp_structure.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html",tooltip="OpenMP interface header, provides compatibility functions if the code is built without OpenMP support..."];
  Node16 -> Node17 [id="edge10_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="cstddef",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node16 -> Node13 [id="edge11_Node000016_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="../code_config.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$code__config_8hpp.html",tooltip="Header file for collecting common macros, definitions and type configurations."];
  Node16 -> Node18 [id="edge12_Node000016_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="ctime",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node7 -> Node4 [id="edge13_Node000007_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node17 [id="edge14_Node000007_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node20 [id="edge15_Node000007_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="string",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node7 -> Node21 [id="edge16_Node000007_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="fstream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node7 -> Node22 [id="edge17_Node000007_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="sstream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node7 -> Node23 [id="edge18_Node000007_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="algorithm",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node7 -> Node5 [id="edge19_Node000007_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node9 [id="edge20_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node57 [id="edge21_Node000007_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="../geometry/CGeometry.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CGeometry_8hpp.html",tooltip="Headers of the main subroutines for creating the geometrical structure. The subroutines and functions..."];
  Node57 -> Node52 [id="edge22_Node000057_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="limits",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node57 -> Node8 [id="edge23_Node000057_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node20 [id="edge24_Node000057_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node21 [id="edge25_Node000057_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node22 [id="edge26_Node000057_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node4 [id="edge27_Node000057_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node23 [id="edge28_Node000057_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node29 [id="edge29_Node000057_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="cstring",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node57 -> Node12 [id="edge30_Node000057_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="cstdio",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node57 -> Node6 [id="edge31_Node000057_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node58 [id="edge32_Node000057_Node000058",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="climits",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node57 -> Node27 [id="edge33_Node000057_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="memory",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node57 -> Node59 [id="edge34_Node000057_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="unordered_map",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node57 -> Node60 [id="edge35_Node000057_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="primal_grid/CPrimalGrid.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CPrimalGrid_8hpp.html",tooltip="Headers of the main subroutines for storing the primal grid structure. The subroutines and functions ..."];
  Node60 -> Node5 [id="edge36_Node000060_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node30 [id="edge37_Node000060_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="vector",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node60 -> Node52 [id="edge38_Node000060_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node6 [id="edge39_Node000060_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node27 [id="edge40_Node000060_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node34 [id="edge41_Node000060_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="option_structure.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$option__structure_8hpp.html",tooltip="Defines classes for referencing options for easy input in CConfig."];
  Node34 -> Node8 [id="edge42_Node000034_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node5 [id="edge43_Node000034_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node22 [id="edge44_Node000034_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node20 [id="edge45_Node000034_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node30 [id="edge46_Node000034_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node32 [id="edge47_Node000034_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="map",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node34 -> Node6 [id="edge48_Node000034_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node23 [id="edge49_Node000034_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node61 [id="edge50_Node000057_Node000061",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="dual_grid/CDualGrid.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CDualGrid_8hpp.html",tooltip="Headers of the main subroutines for doing the complete dual grid structure. The subroutines and funct..."];
  Node61 -> Node4 [id="edge51_Node000061_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node5 [id="edge52_Node000061_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node6 [id="edge53_Node000061_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node30 [id="edge54_Node000061_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node28 [id="edge55_Node000061_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="../../../Common/include\l/CConfig.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CConfig_8hpp.html",tooltip="All the information about the definition of the physical problem. The subroutines and functions are i..."];
  Node28 -> Node8 [id="edge56_Node000028_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node5 [id="edge57_Node000028_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node6 [id="edge58_Node000028_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node21 [id="edge59_Node000028_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node22 [id="edge60_Node000028_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node20 [id="edge61_Node000028_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node29 [id="edge62_Node000028_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node30 [id="edge63_Node000028_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node31 [id="edge64_Node000028_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="array",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node28 -> Node9 [id="edge65_Node000028_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node4 [id="edge66_Node000028_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node32 [id="edge67_Node000028_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node33 [id="edge68_Node000028_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="assert.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node28 -> Node34 [id="edge69_Node000028_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node36 [id="edge70_Node000028_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="containers/container\l_decorators.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$container__decorators_8hpp.html",tooltip="Collection of small classes that decorate C2DContainer to augment its functionality,..."];
  Node36 -> Node37 [id="edge71_Node000036_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="C2DContainer.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$C2DContainer_8hpp.html",tooltip="A templated vector/matrix object."];
  Node37 -> Node39 [id="edge72_Node000037_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="../parallelization\l/vectorization.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$vectorization_8hpp.html",tooltip="Implementation of a portable SIMD type."];
  Node39 -> Node40 [id="edge73_Node000039_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="../linear_algebra/vector\l_expressions.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$vector__expressions_8hpp.html",tooltip="Expression templates for vector types with coefficient-wise operations."];
  Node40 -> Node23 [id="edge74_Node000040_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node40 -> Node6 [id="edge75_Node000040_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node40 -> Node4 [id="edge76_Node000040_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node16 [id="edge77_Node000039_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node23 [id="edge78_Node000039_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node4 [id="edge79_Node000039_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node62 [id="edge80_Node000057_Node000062",color="steelblue1",style="solid",tooltip=" "];
  Node62 [id="Node000062",label="dual_grid/CPoint.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CPoint_8hpp.html",tooltip="Declaration of the point class that stores geometric and adjacency information for dual control volum..."];
  Node62 -> Node37 [id="edge81_Node000062_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node62 -> Node36 [id="edge82_Node000062_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node62 -> Node63 [id="edge83_Node000062_Node000063",color="steelblue1",style="solid",tooltip=" "];
  Node63 [id="Node000063",label="../../toolboxes/graph\l_toolbox.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$graph__toolbox_8hpp.html",tooltip="Functions and classes to build/represent sparse graphs or sparse patterns."];
  Node63 -> Node37 [id="edge84_Node000063_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node63 -> Node16 [id="edge85_Node000063_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node63 -> Node30 [id="edge86_Node000063_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node63 -> Node52 [id="edge87_Node000063_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node63 -> Node23 [id="edge88_Node000063_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node62 -> Node30 [id="edge89_Node000062_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node66 [id="edge90_Node000057_Node000066",color="steelblue1",style="solid",tooltip=" "];
  Node66 [id="Node000066",label="dual_grid/CEdge.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CEdge_8hpp.html",tooltip="Declaration of the edge class CEdge.cpp file."];
  Node66 -> Node37 [id="edge91_Node000066_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node67 [id="edge92_Node000057_Node000067",color="steelblue1",style="solid",tooltip=" "];
  Node67 [id="Node000067",label="dual_grid/CVertex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CVertex_8hpp.html",tooltip="Headers of the main subroutines for doing the complete dual grid structure. The subroutines and funct..."];
  Node67 -> Node61 [id="edge93_Node000067_Node000061",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node68 [id="edge94_Node000057_Node000068",color="steelblue1",style="solid",tooltip=" "];
  Node68 [id="Node000068",label="dual_grid/CTurboVertex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CTurboVertex_8hpp.html",tooltip="Headers of the main subroutines for doing the complete dual grid structure. The subroutines and funct..."];
  Node68 -> Node67 [id="edge95_Node000068_Node000067",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node28 [id="edge96_Node000057_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node69 [id="edge97_Node000057_Node000069",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="../fem/geometry_structure\l_fem_part.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$geometry__structure__fem__part_8hpp.html",tooltip="Helper classes for the Fluid FEM solver."];
  Node69 -> Node30 [id="edge98_Node000069_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node69 -> Node23 [id="edge99_Node000069_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node63 [id="edge100_Node000057_Node000063",color="steelblue1",style="solid",tooltip=" "];
  Node57 -> Node70 [id="edge101_Node000057_Node000070",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="../adt/CADTElemClass.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CADTElemClass_8hpp.html",tooltip="Class for storing an ADT of (linear) elements in an arbitrary number of dimensions."];
  Node70 -> Node16 [id="edge102_Node000070_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node28 [id="edge103_Node000007_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node76 [id="edge104_Node000007_Node000076",color="steelblue1",style="solid",tooltip=" "];
  Node76 [id="Node000076",label="../../../Common/include\l/linear_algebra/CSysMatrix.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CSysMatrix_8hpp.html",tooltip="Declaration of the block-sparse matrix class. The implemtation is in CSysMatrix.cpp."];
  Node76 -> Node28 [id="edge105_Node000076_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node76 -> Node77 [id="edge106_Node000076_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node77 [id="Node000077",label="CSysVector.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CSysVector_8hpp.html",tooltip="Declararion and inlines of the vector class used in the solution of large, distributed,..."];
  Node77 -> Node8 [id="edge107_Node000077_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node77 -> Node16 [id="edge108_Node000077_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node77 -> Node39 [id="edge109_Node000077_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node77 -> Node40 [id="edge110_Node000077_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node76 -> Node78 [id="edge111_Node000076_Node000078",color="steelblue1",style="solid",tooltip=" "];
  Node78 [id="Node000078",label="CPastixWrapper.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CPastixWrapper_8hpp.html",tooltip="An interface to the INRIA solver PaStiX (http://pastix.gforge.inria.fr/files/README-txt...."];
  Node78 -> Node30 [id="edge112_Node000078_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node76 -> Node6 [id="edge113_Node000076_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node76 -> Node30 [id="edge114_Node000076_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node77 [id="edge115_Node000007_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node80 [id="edge116_Node000007_Node000080",color="steelblue1",style="solid",tooltip=" "];
  Node80 [id="Node000080",label="../../../Common/include\l/linear_algebra/CSysSolve.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CSysSolve_8hpp.html",tooltip="Headers for the classes related to linear solvers (CG, FGMRES, etc) The subroutines and functions are..."];
  Node80 -> Node37 [id="edge117_Node000080_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node4 [id="edge118_Node000080_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node30 [id="edge119_Node000080_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node5 [id="edge120_Node000080_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node6 [id="edge121_Node000080_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node81 [id="edge122_Node000080_Node000081",color="steelblue1",style="solid",tooltip=" "];
  Node81 [id="Node000081",label="iomanip",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node80 -> Node20 [id="edge123_Node000080_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node77 [id="edge124_Node000080_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node34 [id="edge125_Node000080_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node57 [id="edge126_Node000003_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node28 [id="edge127_Node000003_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node16 [id="edge128_Node000002_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node90 [id="edge129_Node000002_Node000090",color="steelblue1",style="solid",tooltip=" "];
  Node90 [id="Node000090",label="../../../Common/include\l/linear_algebra/CPreconditioner.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CPreconditioner_8hpp.html",tooltip="Classes related to linear preconditioner wrappers. The actual operations are currently implemented mo..."];
  Node90 -> Node28 [id="edge130_Node000090_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node90 -> Node57 [id="edge131_Node000090_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node90 -> Node77 [id="edge132_Node000090_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node90 -> Node76 [id="edge133_Node000090_Node000076",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node91 [id="edge134_Node000002_Node000091",color="steelblue1",style="solid",tooltip=" "];
  Node91 [id="Node000091",label="../../../Common/include\l/linear_algebra/CMatrixVector\lProduct.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CMatrixVectorProduct_8hpp.html",tooltip="Headers for the classes related to sparse matrix-vector product wrappers. The actual operations are c..."];
  Node91 -> Node28 [id="edge135_Node000091_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node91 -> Node57 [id="edge136_Node000091_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node91 -> Node77 [id="edge137_Node000091_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node91 -> Node76 [id="edge138_Node000091_Node000076",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node80 [id="edge139_Node000002_Node000080",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node91 [id="edge140_Node000001_Node000091",color="steelblue1",style="solid",tooltip=" "];
}
