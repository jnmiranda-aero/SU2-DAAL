digraph "CScalarSolver::CScalarSolver"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CScalarSolver::CScalarSolver",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Constructor of the class."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="computeStaticChunkSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a6a308c63005823370a2ffd6a82f3868f",tooltip="Compute a chunk size based on totalWork and number of threads such that all threads get the same numb..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="roundUpDiv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a1c00281f52b615b111a4990b2d2a5157",tooltip="Integer division rounding up."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetDynamic_Grid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a6352cd90308195b5fc1ba7eab02d46c1",tooltip="Get information about dynamic grids."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetGrid_Movement",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a9182d3dbb0b3bfa2ebb944f18795f5ca",tooltip="Get information about the grid movement."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CGeometry::GetEdgeColorGroupSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a0c61a2af07ace36722db4c6c79004fdc",tooltip="Get the group size used in edge coloring."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CGeometry::GetEdgeColoring",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a1918f1d5fd5404f35ab64407242b5d24",tooltip="Get the edge coloring."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="coloringEfficiency",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__Graph.html#gaea8c9d7c72288411a5bc2c8dc14c7086",tooltip="Computes the efficiency of a grid coloring for given number of threads and chunk size."];
  Node8 -> Node3 [id="edge8_Node000008_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node9 [id="edge9_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="colorSparsePattern",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__Graph.html#ga527868d0180e46647d482ad97bba6b32",tooltip="Color contiguous groups of outer indices of a sparse pattern such that within each color,..."];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="createNaturalColoring",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__Graph.html#gaa96cec8c2a59051ef7562b474f7ca0a1",tooltip="Create the natural coloring (equivalent to the normal sequential loop order) for a given number of in..."];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="container_details::\lAccessorImpl::data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcontainer__details_1_1AccessorImpl.html#a25b798e6041a085aa19399d0047b6a91",tooltip=" "];
  Node7 -> Node12 [id="edge12_Node000007_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CCompressedSparsePattern\l::empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCCompressedSparsePattern.html#a1e38e3a6aba12be3be4804b1c132721d",tooltip=" "];
  Node12 -> Node13 [id="edge13_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="container_details::\lAccessorImpl::empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcontainer__details_1_1AccessorImpl.html#a7b309031025a2ca25e938c3536494ece",tooltip=" "];
  Node7 -> Node14 [id="edge14_Node000007_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CEdge::GetNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCEdge.html#a5cd6f283cb2f3e4dfc037c0db6ae1055",tooltip="Get left/right node index defining the edge."];
  Node7 -> Node15 [id="edge15_Node000007_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="omp_get_max_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a2f7befecc7b1a4eaade8d81fa6524225",tooltip="Maximum number of threads available."];
  Node7 -> Node16 [id="edge16_Node000007_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CGeometry::SetNaturalEdge\lColoring",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a44e61cae2c9f90993e25988f794acb9f",tooltip="Force the natural (sequential) edge coloring."];
  Node16 -> Node10 [id="edge17_Node000016_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node15 [id="edge18_Node000016_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge19_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CConfig::GetEdgeColoring\lRelaxDiscAdj",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ae487871acd67079866136abf87200b14",tooltip="Check if the discrete adjoint is allowed to relax the coloring, that is, allow smaller edge color gro..."];
  Node1 -> Node18 [id="edge20_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CGeometry::GetnEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#aba89cceede61b33426b2783385431f5b",tooltip="Get number of edges."];
  Node1 -> Node19 [id="edge21_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CConfig::GetnMarker_All",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a459dee039e618d21a5d78db61c221240",tooltip="Get the total number of boundary markers of the local process including send/receive domains."];
  Node1 -> Node20 [id="edge22_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CGeometry::GetnPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a275fb07cd99ab79d7a04b4862280169d",tooltip="Get number of points."];
  Node1 -> Node15 [id="edge23_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge24_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
}
