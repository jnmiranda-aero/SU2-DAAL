digraph "CMultizoneDriver::Run"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CMultizoneDriver::Run",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Solves one time iteration."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CConfig::GetKind_MZSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a7882956df15914a2b3a7d4ffc3015cbe",tooltip="Kind of Multizone Solver."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CMultizoneDriver::RunGauss\lSeidel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#a264bb90660193f4c197a3b64df8ccb22",tooltip="Run a Block Gauss-Seidel iteration in all physical zones."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CMultizoneDriver::Corrector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#a3641918e7a3a4bd46f079a02ab37c3ca",tooltip="Use a corrector step to prevent convergence issues."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CIteration::Relaxation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCIteration.html#adccb8642ef9b0a8fa4ddceb03ea83b23",tooltip="A virtual member."];
  Node3 -> Node6 [id="edge5_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CMultizoneDriver::Dynamic\lMeshUpdate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#a9369ae70a2e529fa81cef90c3857f1c7",tooltip="Perform a dynamic mesh deformation, including grid velocity computation and update of the multigrid s..."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CGeometry::ComputeWallDistance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a284247f13458eb39bc678dff5e0c7112",tooltip="Compute the distances to the closest vertex on viscous walls over the entire domain."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CGeometry::ComputeViscous\lWallADT",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ab6cdb13f2a66a34caccc70c4b3841cec",tooltip="Compute an ADT including the coordinates of all viscous markers."];
  Node7 -> Node9 [id="edge8_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CConfig::GetKind_Solver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a77312cf52a5ba2cc1239b7cee6fce7a7",tooltip="Governing equations of the flow (it can be different from the run time equation)."];
  Node7 -> Node10 [id="edge9_Node000007_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CConfig::GetMarker\l_All_TagBound",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab8c9c1f45950a29355be4ff357049440",tooltip="Get the index of the surface defined in the geometry file."];
  Node7 -> Node11 [id="edge10_Node000007_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CGeometry::GetnMarker",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ad2f9fe832b72d5a032d709d25879bbd2",tooltip="Get number of markers."];
  Node7 -> Node12 [id="edge11_Node000007_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CConfig::GetnTimeInstances",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a6ae9111090db52de2f8f07f77d6416d5",tooltip="Retrieves the number of periodic time instances for Harmonic Balance."];
  Node7 -> Node13 [id="edge12_Node000007_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CConfig::GetnZone",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCConfig.html#a39ff50a0f3deda9134f1c44b4d5053b7",tooltip="Gets the number of zones in the mesh file."];
  Node7 -> Node16 [id="edge13_Node000007_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CConfig::GetWallRoughness\lProperties",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a894eb084ee6db70a6e274ac071c2a194",tooltip="Get the type of wall and roughness height on a wall boundary (Heatflux or Isothermal)."];
  Node7 -> Node17 [id="edge14_Node000007_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CGeometry::SetWallDistance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#aff06dccf3d6d20b51c62ff13443e23e3",tooltip="Reduce the wall distance based on an previously constructed ADT."];
  Node7 -> Node18 [id="edge15_Node000007_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CPoint::SetWallRoughness",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCPoint.html#a36442ada0dbc716be6e3c9222f9721df",tooltip="Set wall roughnesses according to stored closest wall information."];
  Node6 -> Node21 [id="edge16_Node000006_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CIteration::SetGrid\l_Movement",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCIteration.html#a7b36785762f6b0c214569b185b858b6c",tooltip="Updates the positions and grid velocities for dynamic meshes between physical time steps."];
  Node21 -> Node22 [id="edge17_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CSolver::Aeroelastic",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSolver.html#af130046f03f282501efef2c117af6ced",tooltip="Prepares and solves the aeroelastic equations."];
  Node22 -> Node26 [id="edge18_Node000022_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="CConfig::GetKind_GridMovement",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a050c7389c2d16a111890bb44dd7cbcea",tooltip="Get the type of dynamic mesh motion. Each zone gets a config file."];
  Node22 -> Node10 [id="edge19_Node000022_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node63 [id="edge20_Node000021_Node000063",color="steelblue1",style="solid",tooltip=" "];
  Node63 [id="Node000063",label="CConfig::GetAeroelasticIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a366bae67ff4380e178c4dc5dc50fcaad",tooltip="Aeroelastic solve every x inner iteration."];
  Node21 -> Node64 [id="edge21_Node000021_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node64 [id="Node000064",label="CConfig::GetContinuous\l_Adjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1eb754aa86fb8154bc9eefea616b7cf9",tooltip="Determines if problem is adjoint."];
  Node21 -> Node65 [id="edge22_Node000021_Node000065",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="CConfig::GetiZone",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1d6335b8fdef6fbcd9a08f7503d73ec1",tooltip="Provides the number of varaibles."];
  Node21 -> Node26 [id="edge23_Node000021_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node66 [id="edge24_Node000021_Node000066",color="steelblue1",style="solid",tooltip=" "];
  Node66 [id="Node000066",label="CConfig::GetnMGLevels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a15a61a6f9a1d415c3509018f4916c5c1",tooltip="Get the number of multigrid levels."];
  Node21 -> Node67 [id="edge25_Node000021_Node000067",color="steelblue1",style="solid",tooltip=" "];
  Node67 [id="Node000067",label="CConfig::GetSurface\l_Movement",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a7da84ee925f437bd635bead56d822df9",tooltip="Get information about deforming markers."];
  Node21 -> Node68 [id="edge26_Node000021_Node000068",color="steelblue1",style="solid",tooltip=" "];
  Node68 [id="Node000068",label="CVolumetricMovement\l::Rigid_Pitching",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a9806afa50b53c60376844053db15420c",tooltip="Unsteady pitching grid movement using rigid mesh motion."];
  Node68 -> Node64 [id="edge27_Node000068_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node68 -> Node12 [id="edge28_Node000068_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node86 [id="edge29_Node000021_Node000086",color="steelblue1",style="solid",tooltip=" "];
  Node86 [id="Node000086",label="CVolumetricMovement\l::Rigid_Plunging",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a886e5096f246aec19af2b98bad3e39b2",tooltip="Unsteady plunging grid movement using rigid mesh motion."];
  Node86 -> Node64 [id="edge30_Node000086_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node86 -> Node12 [id="edge31_Node000086_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node92 [id="edge32_Node000021_Node000092",color="steelblue1",style="solid",tooltip=" "];
  Node92 [id="Node000092",label="CVolumetricMovement\l::Rigid_Rotation",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a316597f05a787ca1b683aba66214110b",tooltip="Unsteady grid movement using rigid mesh rotation."];
  Node92 -> Node64 [id="edge33_Node000092_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node92 -> Node12 [id="edge34_Node000092_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node93 [id="edge35_Node000021_Node000093",color="steelblue1",style="solid",tooltip=" "];
  Node93 [id="Node000093",label="CVolumetricMovement\l::Rigid_Translation",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a00368e3044dd07d74e1fafdc11980644",tooltip="Unsteady translational grid movement using rigid mesh motion."];
  Node93 -> Node64 [id="edge36_Node000093_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node93 -> Node12 [id="edge37_Node000093_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node97 [id="edge38_Node000021_Node000097",color="steelblue1",style="solid",tooltip=" "];
  Node97 [id="Node000097",label="CSurfaceMovement::SetExternal\l_Deformation",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSurfaceMovement.html#a575ff545fe6de6e84fb8fed8e1615edb",tooltip="Set any surface deformationsbased on an input file."];
  Node97 -> Node64 [id="edge39_Node000097_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node97 -> Node26 [id="edge40_Node000097_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node106 [id="edge41_Node000021_Node000106",color="steelblue1",style="solid",tooltip=" "];
  Node106 [id="Node000106",label="CGeometry::SetGridVelocity",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a028f9dcd1a8095e668f6ae461eb8887b",tooltip="Set the grid velocity via finite differencing at each node."];
  Node3 -> Node243 [id="edge42_Node000003_Node000243",color="steelblue1",style="solid",tooltip=" "];
  Node243 [id="Node000243",label="CConfig::GetnOuter_Iter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a898cd36650fcc3a639c12e9b8ab8373a",tooltip="Get the number of outer iterations."];
  Node3 -> Node244 [id="edge43_Node000003_Node000244",color="steelblue1",style="solid",tooltip=" "];
  Node244 [id="Node000244",label="CMultizoneDriver::OuterConvergence",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#ae72bb40195e4066bc4be4adfb0df29e9",tooltip="Check the convergence at the outer level."];
  Node244 -> Node245 [id="edge44_Node000244_Node000245",color="steelblue1",style="solid",tooltip=" "];
  Node245 [id="Node000245",label="CSolver::ComputeResidual\l_Multizone",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSolver.html#a58839dc01d8caf2d729382d282481083",tooltip="Set the value of the max residual and RMS residual."];
  Node244 -> Node254 [id="edge45_Node000244_Node000254",color="steelblue1",style="solid",tooltip=" "];
  Node254 [id="Node000254",label="COutput::GetConvergence",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCOutput.html#a585498dfa05e2c633f5e556220ce1fa2",tooltip="Get convergence of the problem."];
  Node244 -> Node255 [id="edge46_Node000244_Node000255",color="steelblue1",style="solid",tooltip=" "];
  Node255 [id="Node000255",label="CConfig::GetOuterIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a9acc5e98315125a6343cefcbf177bffc",tooltip="Get the current FSI iteration number."];
  Node244 -> Node256 [id="edge47_Node000244_Node000256",color="steelblue1",style="solid",tooltip=" "];
  Node256 [id="Node000256",label="CConfig::GetTimeIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aec6051895c2e4f593a5c245104548b78",tooltip="Get the current time iteration number."];
  Node244 -> Node257 [id="edge48_Node000244_Node000257",color="steelblue1",style="solid",tooltip=" "];
  Node257 [id="Node000257",label="COutput::SetHistoryOutput",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCOutput.html#a3a35f6e09eaf499f1f709088cb80e702",tooltip="Collects history data from the solvers, monitors the convergence and writes to screen and history fil..."];
  Node244 -> Node298 [id="edge49_Node000244_Node000298",color="steelblue1",style="solid",tooltip=" "];
  Node298 [id="Node000298",label="COutput::SetMultizoneHistory\lOutput",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCOutput.html#adab3a546cdcbe8f7123063b5489d9d2d",tooltip=" "];
  Node3 -> Node300 [id="edge50_Node000003_Node000300",color="steelblue1",style="solid",tooltip=" "];
  Node300 [id="Node000300",label="CConfig::Set_StartTime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aedf3896a475f7729d217dfe27f6da3e8",tooltip="Set the start time to track a phase of the code (preprocessing, compute, output)."];
  Node3 -> Node301 [id="edge51_Node000003_Node000301",color="steelblue1",style="solid",tooltip=" "];
  Node301 [id="Node000301",label="CConfig::SetOuterIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a83b944512ee75c2997399e9ab39bd2db",tooltip="Set the current FSI iteration number."];
  Node3 -> Node302 [id="edge52_Node000003_Node000302",color="steelblue1",style="solid",tooltip=" "];
  Node302 [id="Node000302",label="CIteration::Solve",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCIteration.html#a7a488d5abc45605b48e728cebe446bfa",tooltip="A virtual member."];
  Node3 -> Node303 [id="edge53_Node000003_Node000303",color="steelblue1",style="solid",tooltip=" "];
  Node303 [id="Node000303",label="CMultizoneDriver::TransferData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#ac25d737397546e3a311a6c286a9ce773",tooltip="Routine to provide all the desired physical transfers between the different zones during one iteratio..."];
  Node303 -> Node304 [id="edge54_Node000303_Node000304",color="steelblue1",style="solid",tooltip=" "];
  Node304 [id="Node000304",label="CInterface::AllgatherAverage",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCInterface.html#a10f9026b7a38a20c9b7c54ff199e7e8d",tooltip="Interpolate data and scatter it into different processors, for matching meshes."];
  Node304 -> Node11 [id="edge55_Node000304_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node303 -> Node309 [id="edge56_Node000303_Node000309",color="steelblue1",style="solid",tooltip=" "];
  Node309 [id="Node000309",label="CInterface::BroadcastData",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCInterface.html#ae96b2c6b2dda67461705d7ef160c289d",tooltip="Interpolate data and broadcast it into all processors, for nonmatching meshes."];
  Node303 -> Node317 [id="edge57_Node000303_Node000317",color="steelblue1",style="solid",tooltip=" "];
  Node317 [id="Node000317",label="CInterface::GatherAverage\lValues",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCInterface.html#ae4c7e8855cd35cc5c7e54bcbb8b67cea",tooltip="Interpolate data and scatter it into different processors, for matching meshes."];
  Node303 -> Node319 [id="edge58_Node000303_Node000319",color="steelblue1",style="solid",tooltip=" "];
  Node319 [id="Node000319",label="CConfig::GetnMarker\l_MixingPlaneInterface",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a38277e9b0c9252428b03869b4c3c9ca6",tooltip="number mixing plane interface specified from config file."];
  Node303 -> Node320 [id="edge59_Node000303_Node000320",color="steelblue1",style="solid",tooltip=" "];
  Node320 [id="Node000320",label="CGeometry::SetAvgTurboGeo\lValues",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#acfca152d8de902a7e8bf9e9a56db865c",tooltip="Store all the turboperformance in the solver in ZONE_0."];
  Node3 -> Node266 [id="edge60_Node000003_Node000266",color="steelblue1",style="solid",tooltip=" "];
  Node266 [id="Node000266",label="CBaseMPIWrapper::Wtime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#adcf32aa628d4b515e8835bc5c56fbf08",tooltip=" "];
  Node266 -> Node267 [id="edge61_Node000266_Node000267",color="steelblue1",style="solid",tooltip=" "];
  Node267 [id="Node000267",label="omp_get_wtime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a649bd48ab038a72108f11f5a85316266",tooltip="Return the wall time."];
  Node1 -> Node321 [id="edge62_Node000001_Node000321",color="steelblue1",style="solid",tooltip=" "];
  Node321 [id="Node000321",label="CMultizoneDriver::RunJacobi",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#a6a3c67903b810b5cd8c392691ff2e86e",tooltip="Run a Block-Jacobi iteration in all physical zones."];
  Node321 -> Node4 [id="edge63_Node000321_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node321 -> Node6 [id="edge64_Node000321_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node321 -> Node243 [id="edge65_Node000321_Node000243",color="steelblue1",style="solid",tooltip=" "];
  Node321 -> Node244 [id="edge66_Node000321_Node000244",color="steelblue1",style="solid",tooltip=" "];
  Node321 -> Node300 [id="edge67_Node000321_Node000300",color="steelblue1",style="solid",tooltip=" "];
  Node321 -> Node301 [id="edge68_Node000321_Node000301",color="steelblue1",style="solid",tooltip=" "];
  Node321 -> Node302 [id="edge69_Node000321_Node000302",color="steelblue1",style="solid",tooltip=" "];
  Node321 -> Node303 [id="edge70_Node000321_Node000303",color="steelblue1",style="solid",tooltip=" "];
  Node321 -> Node266 [id="edge71_Node000321_Node000266",color="steelblue1",style="solid",tooltip=" "];
}
