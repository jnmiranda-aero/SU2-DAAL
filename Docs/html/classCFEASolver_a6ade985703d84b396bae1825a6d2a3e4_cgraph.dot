digraph "CFEASolver::Solve_System"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CFEASolver::Solve_System",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Routine to solve the Jacobian-Residual linearized system."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CSysMatrixComms::Complete",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structCSysMatrixComms.html#a672e72a89fc1ae7345d0ce91bd81972b",tooltip="Routine to complete the set of non-blocking communications launched by Initiate() and unpacking of th..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CSysVector::GetNVar",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#ac0b4bcd823f7905143430a7bbdcad6f2",tooltip="return the number of variables at each block (typically number per node)"];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CSysMatrix::EnforceSolution\lAtNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#a1bfdb06825f0165504b84aa68e918208",tooltip="Modifies this matrix (A) and a rhs vector (b) such that (A^-1 * b)_i = x_i."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CSysVector::SetBlock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#acceb60ca98fa7ede9520adde322009eb",tooltip="Set \"block\" to the vector."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CSysVector::GetBlock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#a7c44ba3d52f199c303747e7469e712ca",tooltip="Get pointer to a block."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CSysSolve::GetResidual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysSolve.html#a8309f4c3819dc3462a1ec6fc7a94bccc",tooltip="Get the final residual."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CSysMatrixComms::Initiate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structCSysMatrixComms.html#abaab86d2a9c3a43ef4ed2de79d4e905a",tooltip="Routine to load a vector quantity into the data structures for MPI point-to-point communication and t..."];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CGeometry::AllocateP2PComms",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ab8d78a9f4017431b7542e154f58a7e63",tooltip="Routine to allocate buffers for point-to-point MPI communications. Also called to dynamically realloc..."];
  Node8 -> Node10 [id="edge9_Node000008_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#af7297d861dca86b45cf561b6ab642e8f",tooltip=" "];
  Node8 -> Node3 [id="edge11_Node000008_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node12 [id="edge12_Node000008_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CGeometry::PostP2PRecvs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a0951357cde88070db559d6d2511a515d",tooltip="Routine to launch non-blocking recvs only for all point-to-point communication with neighboring parti..."];
  Node12 -> Node10 [id="edge13_Node000012_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node13 [id="edge14_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node12 -> Node14 [id="edge15_Node000012_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CBaseMPIWrapper::Irecv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a672b3e2ba61a86f9a157e7623389c000",tooltip=" "];
  Node8 -> Node15 [id="edge16_Node000008_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CGeometry::PostP2PSends",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a3fd5ef26d01c258616c8bd5f83e345f5",tooltip="Routine to launch a single non-blocking send once the buffer is loaded for a point-to-point commucati..."];
  Node15 -> Node10 [id="edge17_Node000015_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node13 [id="edge18_Node000015_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node16 [id="edge19_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CBaseMPIWrapper::Isend",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a4009cae40f1e050b3635a8d803dbfa3d",tooltip=" "];
  Node1 -> Node17 [id="edge20_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CSolver::SetIterLinSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#a4f948638416cf63651bfa204f286e00c",tooltip="Set number of linear solver iterations."];
  Node1 -> Node18 [id="edge21_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CSolver::SetResLinSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#a57f38545147844c9c53bd419a9487904",tooltip="Set the final linear solver residual."];
  Node1 -> Node19 [id="edge22_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CSysSolve::Solve",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysSolve.html#a8b6b6ec9a70f8207cbf0b7a5c37eaef8",tooltip="Solve the linear system using a Krylov subspace method."];
  Node19 -> Node20 [id="edge23_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CPreconditioner::Build",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPreconditioner.html#a4107c7c58d894d1067b91a5e6e140946",tooltip="Generic \"preprocessing\" hook derived classes may implement to build the preconditioner."];
  Node19 -> Node21 [id="edge24_Node000019_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CSysMatrix::BuildILUPreconditioner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#a27391a0111dc4d14b545f4a62c9a3a77",tooltip="Build the ILU preconditioner."];
  Node19 -> Node22 [id="edge25_Node000019_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CSysMatrix::BuildJacobiPreconditioner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#abc966e8b6437ff465572b0e07cd6f92d",tooltip="Build the Jacobi preconditioner."];
  Node19 -> Node23 [id="edge26_Node000019_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CSysMatrix::BuildPastixPreconditioner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#abdf7a58389d487eb22127304c4ba595f",tooltip="Factorize matrix using PaStiX."];
  Node23 -> Node10 [id="edge27_Node000023_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node24 [id="edge28_Node000019_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CSysMatrix::ComputePastix\lPreconditioner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#a7012e3d084d285dab57634a6e8158fb8",tooltip="Apply the PaStiX factorization to CSysVec."];
  Node24 -> Node2 [id="edge29_Node000024_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node10 [id="edge30_Node000024_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node8 [id="edge31_Node000024_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node25 [id="edge32_Node000019_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="CPreconditioner::Create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__SpLinSys.html#ga5c5c0e2edeab83bfee2969cad5d4d519",tooltip="Factory method."];
  Node19 -> Node10 [id="edge33_Node000019_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node26 [id="edge34_Node000019_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="CConfig::GetDeform\l_Linear_Solver_Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a72f2aab79e3cc692ced26fe5db90668b",tooltip="Get min error of the linear solver for the implicit formulation."];
  Node19 -> Node27 [id="edge35_Node000019_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="CConfig::GetDeform\l_Linear_Solver_Iter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aef69111ba779655f29385b4b936030be",tooltip="Get max number of iterations of the linear solver for the implicit formulation."];
  Node19 -> Node28 [id="edge36_Node000019_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="CConfig::GetDeform\l_Output",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#addf46fdb73c59de82d7a559c3588582a",tooltip="Get information about writing grid deformation residuals to the console."];
  Node19 -> Node29 [id="edge37_Node000019_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CConfig::GetDiscrete\l_Adjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab3928c4e6debcf50dcd0d38985f6980c",tooltip="Get the indicator whether we are solving an discrete adjoint problem."];
  Node19 -> Node30 [id="edge38_Node000019_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CConfig::GetGrad_Linear\l_Solver_Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ac222d6626ca90e8e99978b40cc0585dd",tooltip="Get min error of the linear solver for the gradient smoothing."];
  Node19 -> Node31 [id="edge39_Node000019_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CConfig::GetGrad_Linear\l_Solver_Iter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a9b6bfffa7f5731430eb0fc0f82576109",tooltip="Get max number of iterations of the for the gradient smoothing."];
  Node19 -> Node32 [id="edge40_Node000019_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CConfig::GetKind_Deform\l_Linear_Solver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa64b20bc3a90fc311fc6c01ebbefaf65",tooltip="Get the kind of solver for the implicit solver."];
  Node19 -> Node33 [id="edge41_Node000019_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="CConfig::GetKind_Deform\l_Linear_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a8b36810235437e0319ccab9d7e0e5db0",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node19 -> Node34 [id="edge42_Node000019_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="CConfig::GetKind_DiscAdj\l_Linear_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a968a1fa9afc1e0df8bd1b5c9f6359ea8",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node19 -> Node35 [id="edge43_Node000019_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="CConfig::GetKind_Grad\l_Linear_Solver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a5db6f90b7b7fdae015dc1b1a1fd4a15d",tooltip="Get the kind of solver for the gradient smoothing."];
  Node19 -> Node36 [id="edge44_Node000019_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="CConfig::GetKind_Grad\l_Linear_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aaca6df27a6a89d5795c1ea514f67dfe8",tooltip="Get the kind of preconditioner for the gradient smoothing."];
  Node19 -> Node37 [id="edge45_Node000019_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="CConfig::GetKind_Linear\l_Solver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ac87e0c3461e4b921598382c9f7afdce6",tooltip="Get the kind of solver for the implicit solver."];
  Node19 -> Node38 [id="edge46_Node000019_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="CConfig::GetKind_Linear\l_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa3e3027bc3231172777ee296694d5e63",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node19 -> Node39 [id="edge47_Node000019_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="CConfig::GetKind_SU2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a8a176b0a0c34db4d6dcc9e55e240e37b",tooltip="Get the kind of SU2 software component."];
  Node19 -> Node40 [id="edge48_Node000019_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="CConfig::GetLinear\l_Solver_Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ac34b0c8953978c88e8d6a80b0ad18412",tooltip="Get min error of the linear solver for the implicit formulation."];
  Node19 -> Node41 [id="edge49_Node000019_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="CConfig::GetLinear\l_Solver_Iter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a4af66b9b4150ce7bb3fea03a553a5e75",tooltip="Get max number of iterations of the linear solver for the implicit formulation."];
  Node19 -> Node42 [id="edge50_Node000019_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="CSysVector::GetLocSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#a8350bcd4cff50b455ee26898ebb66afd",tooltip="return the number of local elements in the CSysVector"];
  Node19 -> Node43 [id="edge51_Node000019_Node000043",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="SU2_TYPE::GetValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceSU2__TYPE.html#adf52a59d6f4e578f7915ec9abbf7cb22",tooltip="Get the (primitive) value of the datatype (needs to be specialized for active types)."];
  Node19 -> Node44 [id="edge52_Node000019_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="AD::SetExtFuncIn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceAD.html#a01d324fa97f57e1dfca30343d3a9e642",tooltip="Sets the scalar input of a externally differentiated function."];
  Node19 -> Node45 [id="edge53_Node000019_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="AD::SetExtFuncOut",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceAD.html#a2eff40aae09c84eec216a3f04768527f",tooltip="Sets the scalar output of a externally differentiated function."];
  Node19 -> Node46 [id="edge54_Node000019_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="AD::TapeActive",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceAD.html#ae36087cd7b6b57c78d7baf0357a19d10",tooltip="Check if the tape is active."];
  Node19 -> Node47 [id="edge55_Node000019_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="CSysMatrix::TransposeInPlace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#a4e65e1080ad7f20aebf7543f2229249d",tooltip="Transposes the matrix, any preconditioner that was computed may be invalid."];
}
