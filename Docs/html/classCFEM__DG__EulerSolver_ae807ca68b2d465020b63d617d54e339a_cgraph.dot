digraph "CFEM_DG_EulerSolver::ProcessTaskList_DG"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CFEM_DG_EulerSolver\l::ProcessTaskList_DG",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Function, which processes the list of tasks to be executed by the DG solver."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CFEM_DG_EulerSolver\l::AccumulateSpaceTimeResidual\lADERHaloElem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#ad69d3dd7fafb9203abbc9e876cbcd7a8",tooltip="Function, which accumulates the space time residual of the ADER-DG time integration scheme for the ha..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CConfig::GetnLevels\l_TimeAccurateLTS",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a27dc07a71d7798a849c68eda017144c8",tooltip="Get the number of time levels for time accurate local time stepping."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetWeightsIntegration\lADER_DG",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aceea745ef5daad4ecafc7147880f8071",tooltip="Get the weights of the time integration points for ADER-DG."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CFEM_DG_EulerSolver\l::AccumulateSpaceTimeResidual\lADEROwnedElem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a0a18dfd035e17379824d2a3a032d3ab3",tooltip="Function, which accumulates the space time residual of the ADER-DG time integration scheme for the ow..."];
  Node5 -> Node3 [id="edge5_Node000005_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node4 [id="edge6_Node000005_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge7_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CFEM_DG_EulerSolver\l::ADER_DG_Iteration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#ad581ff9821dc607597049b9d52ce5fdf",tooltip="Update the solution for the ADER-DG scheme for the given range of elements."];
  Node1 -> Node7 [id="edge8_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CFEM_DG_EulerSolver\l::ADER_DG_PredictorStep",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a53f3bd445632823baa18657a29553842",tooltip="Function, carries out the predictor step of the ADER-DG time integration."];
  Node7 -> Node8 [id="edge9_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CBlasStructure::gemm",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBlasStructure.html#ad282634317e0a32bce7896e2ddc40043",tooltip="Function, which carries out a dense matrix product. It is a limited version of the BLAS gemm function..."];
  Node7 -> Node13 [id="edge10_Node000007_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CConfig::GetKind_ADER\l_Predictor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a130d8db7462654c06ef802d98a223f3f",tooltip="Get the kind of scheme (aliased or non-aliased) to be used in the predictor step of ADER-DG."];
  Node7 -> Node14 [id="edge11_Node000007_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CConfig::GetnTimeDOFsADER_DG",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aafef6383db26beffe0b0379d349cdf1b",tooltip="Get the number time DOFs for ADER-DG."];
  Node7 -> Node15 [id="edge12_Node000007_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CConfig::GetnTimeIntegration\lADER_DG",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa432bc27281cf5258b0a7ad68c814f4f",tooltip="Get the number time integration points for ADER-DG."];
  Node7 -> Node16 [id="edge13_Node000007_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CConfig::GetSizeMatMulPadding",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a82d3faf3154d13bf694af4d818ef91c7",tooltip="Function to make available the matrix size in vectorization in order to optimize the gemm performance..."];
  Node7 -> Node4 [id="edge14_Node000007_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge15_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CFEM_DG_EulerSolver\l::ADER_DG_TimeInterpolatePredictorSol",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a541316bc7d1623f16e839578dc9a4aa9",tooltip="Function, which interpolates the predictor solution of ADER-DG to the time value that corresponds to ..."];
  Node17 -> Node14 [id="edge16_Node000017_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node15 [id="edge17_Node000017_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node18 [id="edge18_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CFEM_DG_EulerSolver\l::Boundary_Conditions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#ae37f8eba6d7793bc4edb5de6e26f992d",tooltip="Function, which computes the spatial residual for the DG discretization."];
  Node18 -> Node19 [id="edge19_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CFEM_DG_EulerSolver\l::BC_Custom",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#a0e63fc77fc810025d45bfd8e0bf4d6dd",tooltip="Impose the user customized boundary condition. It is a virtual function, because for Navier-Stokes it..."];
  Node19 -> Node20 [id="edge20_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node19 -> Node23 [id="edge21_Node000019_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CFEMStandardElementBase\l::GetNIntegration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardElementBase.html#aa5ad06a05a1d7b66bccca65521168a3b",tooltip="Function, which makes available the number of integration points for this standard element."];
  Node19 -> Node16 [id="edge22_Node000019_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node29 [id="edge23_Node000019_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CFEM_DG_EulerSolver\l::MetaDataChunkOfElem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#ad358fa06c0e5b2762ad3258eb2c677e2",tooltip="Template function, which determines some meta data for the chunk of elements/faces that must be treat..."];
  Node18 -> Node30 [id="edge24_Node000018_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CFEM_DG_EulerSolver\l::BC_Euler_Wall",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#a8f81a6011b17cbb65c8be69d517e8faf",tooltip="Impose via the residual the Euler wall boundary condition. It is a virtual function,..."];
  Node30 -> Node23 [id="edge25_Node000030_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node16 [id="edge26_Node000030_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node29 [id="edge27_Node000030_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node32 [id="edge28_Node000018_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CFEM_DG_EulerSolver\l::BC_Far_Field",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#a48b8a50d3e9deee07bd02a30249f6f6d",tooltip="Impose the far-field boundary condition. It is a virtual function, because for Navier-Stokes it is ov..."];
  Node32 -> Node23 [id="edge29_Node000032_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node16 [id="edge30_Node000032_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node29 [id="edge31_Node000032_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node33 [id="edge32_Node000018_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="CFEM_DG_EulerSolver\l::BC_HeatFlux_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a6f991975a83d5c0fb62123b9ec4de9fa",tooltip="Impose a constant heat-flux condition at the wall. It is a virtual function, such that it can be over..."];
  Node18 -> Node34 [id="edge33_Node000018_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="CFEM_DG_EulerSolver\l::BC_Inlet",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#ade8441a575543603f4e4218fb52e33a2",tooltip="Impose the subsonic inlet boundary condition. It is a virtual function, because for Navier-Stokes it ..."];
  Node34 -> Node23 [id="edge34_Node000034_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node16 [id="edge35_Node000034_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node29 [id="edge36_Node000034_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node48 [id="edge37_Node000018_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="CFEM_DG_EulerSolver\l::BC_Isothermal_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#af947e988a9f640814aa27653eae31f63",tooltip="Impose an isothermal condition at the wall. It is a virtual function, such that it can be overwritten..."];
  Node18 -> Node49 [id="edge38_Node000018_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="CFEM_DG_EulerSolver\l::BC_Outlet",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#a869796e928f7618ea7f47d9ebc80cf76",tooltip="Impose the outlet boundary condition.It is a virtual function, because for Navier-Stokes it is overwr..."];
  Node49 -> Node23 [id="edge39_Node000049_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node16 [id="edge40_Node000049_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node29 [id="edge41_Node000049_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node52 [id="edge42_Node000018_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="CFEM_DG_EulerSolver\l::BC_Riemann",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#aaff04081aba8d9e24f0e615161e8020f",tooltip="Impose the boundary condition using characteristic reconstruction. It is a virtual function,..."];
  Node52 -> Node23 [id="edge43_Node000052_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node52 -> Node16 [id="edge44_Node000052_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node52 -> Node29 [id="edge45_Node000052_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node67 [id="edge46_Node000018_Node000067",color="steelblue1",style="solid",tooltip=" "];
  Node67 [id="Node000067",label="CFEM_DG_EulerSolver\l::BC_Supersonic_Outlet",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#a99232a4f053e949762b0919a6c288c73",tooltip="Impose the supersonic outlet boundary condition. It is a virtual function, because for Navier-Stokes ..."];
  Node67 -> Node23 [id="edge47_Node000067_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node67 -> Node16 [id="edge48_Node000067_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node67 -> Node29 [id="edge49_Node000067_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node68 [id="edge50_Node000018_Node000068",color="steelblue1",style="solid",tooltip=" "];
  Node68 [id="Node000068",label="CFEM_DG_EulerSolver\l::BC_Sym_Plane",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#a002d30c9052117b77a33d1f290b1195b",tooltip="Impose the symmetry boundary condition. It is a virtual function, because for Navier-Stokes it is ove..."];
  Node68 -> Node23 [id="edge51_Node000068_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node68 -> Node16 [id="edge52_Node000068_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node68 -> Node29 [id="edge53_Node000068_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node20 [id="edge54_Node000018_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node69 [id="edge55_Node000018_Node000069",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="CConfig::GetMarker\l_All_KindBC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ae003cd8f406eaaa91849a774c9a20730",tooltip="Get the kind of boundary for each marker."];
  Node18 -> Node70 [id="edge56_Node000018_Node000070",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="CConfig::GetnMarker_All",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a459dee039e618d21a5d78db61c221240",tooltip="Get the total number of boundary markers of the local process including send/receive domains."];
  Node1 -> Node71 [id="edge57_Node000001_Node000071",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="CFEM_DG_EulerSolver\l::Complete_MPI_Communication",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#ad3428a192cfff4925a3ce854866119de",tooltip="Routine that completes the non-blocking communication between ranks."];
  Node71 -> Node72 [id="edge58_Node000071_Node000072",color="steelblue1",style="solid",tooltip=" "];
  Node72 [id="Node000072",label="CConfig::GetKind_TimeInt\lScheme_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a568405f750ddcd4f702197e66b477ff9",tooltip="Get the kind of integration scheme (explicit or implicit) for the flow equations."];
  Node71 -> Node14 [id="edge59_Node000071_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node73 [id="edge60_Node000071_Node000073",color="steelblue1",style="solid",tooltip=" "];
  Node73 [id="Node000073",label="CBaseMPIWrapper::Waitall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a01c02f8c0c799ccd15023f0c2c3cae27",tooltip=" "];
  Node1 -> Node74 [id="edge61_Node000001_Node000074",color="steelblue1",style="solid",tooltip=" "];
  Node74 [id="Node000074",label="CFEM_DG_EulerSolver\l::Complete_MPI_ReverseCommunication",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#af5891c1fd8de49fe774a68cd7bc0b6ec",tooltip="Routine that completes the reverse non-blocking communication between ranks."];
  Node74 -> Node72 [id="edge62_Node000074_Node000072",color="steelblue1",style="solid",tooltip=" "];
  Node74 -> Node73 [id="edge63_Node000074_Node000073",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node75 [id="edge64_Node000001_Node000075",color="steelblue1",style="solid",tooltip=" "];
  Node75 [id="Node000075",label="CConfig::GetKind_TimeInt\lScheme",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ad16f71356f146b530fb1fbb45444525c",tooltip="Get the kind of time integration method."];
  Node1 -> Node3 [id="edge65_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node76 [id="edge66_Node000001_Node000076",color="steelblue1",style="solid",tooltip=" "];
  Node76 [id="Node000076",label="CFEM_DG_EulerSolver\l::Initiate_MPI_Communication",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#aef4dade05b74d3e36f5b2c91d0a6fa46",tooltip="Routine that initiates the non-blocking communication between ranks for the givem time level."];
  Node76 -> Node77 [id="edge67_Node000076_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node77 [id="Node000077",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node76 -> Node72 [id="edge68_Node000076_Node000072",color="steelblue1",style="solid",tooltip=" "];
  Node76 -> Node14 [id="edge69_Node000076_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node76 -> Node78 [id="edge70_Node000076_Node000078",color="steelblue1",style="solid",tooltip=" "];
  Node78 [id="Node000078",label="CBaseMPIWrapper::Irecv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a672b3e2ba61a86f9a157e7623389c000",tooltip=" "];
  Node76 -> Node79 [id="edge71_Node000076_Node000079",color="steelblue1",style="solid",tooltip=" "];
  Node79 [id="Node000079",label="CBaseMPIWrapper::Isend",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a4009cae40f1e050b3635a8d803dbfa3d",tooltip=" "];
  Node1 -> Node80 [id="edge72_Node000001_Node000080",color="steelblue1",style="solid",tooltip=" "];
  Node80 [id="Node000080",label="CFEM_DG_EulerSolver\l::Initiate_MPI_ReverseCommunication",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a59148852103da2fb75a30e40f7ea4eb4",tooltip="Routine that initiates the reverse non-blocking communication between ranks."];
  Node80 -> Node77 [id="edge73_Node000080_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node72 [id="edge74_Node000080_Node000072",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node78 [id="edge75_Node000080_Node000078",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node79 [id="edge76_Node000080_Node000079",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node81 [id="edge77_Node000001_Node000081",color="steelblue1",style="solid",tooltip=" "];
  Node81 [id="Node000081",label="CFEM_DG_EulerSolver\l::ResidualFaces",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a8875e58364f55e735fc3732f545d5f29",tooltip="Compute the spatial residual for the given range of faces. It is a virtual function,..."];
  Node81 -> Node8 [id="edge78_Node000081_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node81 -> Node82 [id="edge79_Node000081_Node000082",color="steelblue1",style="solid",tooltip=" "];
  Node82 [id="Node000082",label="CFEMStandardInternalFace\l::GetBasisFaceIntegrationTransposeSide0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardInternalFace.html#a5dec1874e302623d6c8fb57e7e34e960",tooltip="Function, which makes available transpose matrix of the face basis functions of side 0 in the integra..."];
  Node81 -> Node83 [id="edge80_Node000081_Node000083",color="steelblue1",style="solid",tooltip=" "];
  Node83 [id="Node000083",label="CFEMStandardInternalFace\l::GetBasisFaceIntegrationTransposeSide1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardInternalFace.html#a90446ea5444c214ece32dc39dc40a2ae",tooltip="Function, which makes available transpose matrix of the face basis functions of side 1 in the integra..."];
  Node81 -> Node84 [id="edge81_Node000081_Node000084",color="steelblue1",style="solid",tooltip=" "];
  Node84 [id="Node000084",label="CFEMStandardInternalFace\l::GetNDOFsFaceSide0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardInternalFace.html#acd4208ae47226c5917479d6a232b7584",tooltip="Function, which makes available the number of DOFs on side 0 of the face."];
  Node81 -> Node85 [id="edge82_Node000081_Node000085",color="steelblue1",style="solid",tooltip=" "];
  Node85 [id="Node000085",label="CFEMStandardInternalFace\l::GetNDOFsFaceSide1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardInternalFace.html#a0e3ff97b8c11ca92ede562565eec7041",tooltip="Function, which makes available the number of DOFs on side 1 of the face."];
  Node81 -> Node23 [id="edge83_Node000081_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node81 -> Node16 [id="edge84_Node000081_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node81 -> Node86 [id="edge85_Node000081_Node000086",color="steelblue1",style="solid",tooltip=" "];
  Node86 [id="Node000086",label="CFEMStandardElementBase\l::GetWeightsIntegration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardElementBase.html#abf33578c3a19de596dc704d3d4d00039",tooltip="Function, which makes available the weights in the integration points."];
  Node81 -> Node87 [id="edge86_Node000081_Node000087",color="steelblue1",style="solid",tooltip=" "];
  Node87 [id="Node000087",label="CFEM_DG_EulerSolver\l::InviscidFluxesInternalMatchingFace",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#ab7546cb31b73191bbac2b338c88cfbc4",tooltip="Function, which computes the inviscid fluxes in the face integration points of a chunk of matching in..."];
  Node87 -> Node20 [id="edge87_Node000087_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node87 -> Node8 [id="edge88_Node000087_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node87 -> Node84 [id="edge89_Node000087_Node000084",color="steelblue1",style="solid",tooltip=" "];
  Node87 -> Node85 [id="edge90_Node000087_Node000085",color="steelblue1",style="solid",tooltip=" "];
  Node87 -> Node23 [id="edge91_Node000087_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node81 -> Node29 [id="edge92_Node000081_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node99 [id="edge93_Node000001_Node000099",color="steelblue1",style="solid",tooltip=" "];
  Node99 [id="Node000099",label="CFEM_DG_EulerSolver\l::Shock_Capturing_DG",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a8811f2fe9d2efb93b2fcdedf228083d1",tooltip="Compute the artificial viscosity for shock capturing in DG. It is a virtual function,..."];
  Node99 -> Node100 [id="edge94_Node000099_Node000100",color="steelblue1",style="solid",tooltip=" "];
  Node100 [id="Node000100",label="CConfig::GetKind_FEM\l_DG_Shock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#afa721d24bb2ffcb31bc0743f64dd33ee",tooltip="Get the kind of shock capturing method in FEM DG solver."];
  Node1 -> Node101 [id="edge95_Node000001_Node000101",color="steelblue1",style="solid",tooltip=" "];
  Node101 [id="Node000101",label="CFEM_DG_EulerSolver\l::Volume_Residual",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEM__DG__EulerSolver.html#ae6c2fff0649a4d8fd723ee9776778003",tooltip="Compute the volume contributions to the spatial residual. It is a virtual function,..."];
  Node101 -> Node8 [id="edge96_Node000101_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node101 -> Node102 [id="edge97_Node000101_Node000102",color="steelblue1",style="solid",tooltip=" "];
  Node102 [id="Node000102",label="CFEMStandardElement\l::GetBasisFunctionsIntegration\lTrans",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardElement.html#a0d8111ae54b825086ea24a9241a361f1",tooltip="Function, which makes available the transpose of the basis functions in the integration points."];
  Node101 -> Node23 [id="edge98_Node000101_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node101 -> Node16 [id="edge99_Node000101_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node101 -> Node86 [id="edge100_Node000101_Node000086",color="steelblue1",style="solid",tooltip=" "];
  Node101 -> Node29 [id="edge101_Node000101_Node000029",color="steelblue1",style="solid",tooltip=" "];
}
