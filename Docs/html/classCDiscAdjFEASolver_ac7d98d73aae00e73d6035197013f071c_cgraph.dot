digraph "CDiscAdjFEASolver::SetAdjoint_Output"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CDiscAdjFEASolver::\lSetAdjoint_Output",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Sets the adjoint values of the output of the flow (+turb.) iteration before evaluation of the tape."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CDiscAdjVariable::GetDual\l_Time_Derivative",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDiscAdjVariable.html#a1659f83fe65636a9c2b08a791891ebf1",tooltip="Return the dual time contributions to the adjoint variable. Contains sum of contributions from 2 time..."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CConfig::GetMultizone\l_Problem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#abafdda03255a7f71a9701ded02f6d231",tooltip="Get whether the simulation we are running is a multizone simulation."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetnMarker\l_Deform_Mesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ae9e63e7375bcfe425f6362038aa04c99",tooltip="Get the total number of deformable markers at the boundary."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CSolver::GetNodes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#adb28ae3845a6b61cf764a8e9fe4b794e",tooltip="Allow outside access to the nodes of the solver, containing conservatives, primitives,..."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CVariable::GetSolution",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVariable.html#a261483e39c23c1de7cb9aea7e917c121",tooltip="Get the solution."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CDiscAdjFEABoundVariable\l::GetSourceTerm_DispAdjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDiscAdjFEABoundVariable.html#a4024b6541ea8de59eb6dd18990c86b67",tooltip="Get the source term applied into the displacement adjoint coming from external solvers."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CVertexMap::GetVertexIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVertexMap.html#ae62665f7065cb9e31c2aec1ec90c0afc",tooltip="Convert a point index to vertex index."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CDiscAdjFEABoundVariable\l::GetSourceTerm_VelAdjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDiscAdjFEABoundVariable.html#a381a35fda3ac11410e0d6d7fbf3dd4ca",tooltip=" "];
  Node9 -> Node8 [id="edge9_Node000009_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CConfig::GetTime_Domain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a85d2e3cf43b77c63642c40c235b853f3",tooltip="Check if the multizone problem is solved for time domain."];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CVariable::SetAdjointSolution",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVariable.html#a7c98cdf8cb0799eb03e3cb8a9ca45f92",tooltip="Set the adjoint values of the solution."];
  Node11 -> Node12 [id="edge12_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="SU2_TYPE::GetValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceSU2__TYPE.html#adf52a59d6f4e578f7915ec9abbf7cb22",tooltip="Get the (primitive) value of the datatype (needs to be specialized for active types)."];
  Node11 -> Node13 [id="edge13_Node000011_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="AD::SetDerivative",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceAD.html#a49a954dc442cd06cc43cd61a451d76e5",tooltip="Sets the adjoint value at index to val."];
}
