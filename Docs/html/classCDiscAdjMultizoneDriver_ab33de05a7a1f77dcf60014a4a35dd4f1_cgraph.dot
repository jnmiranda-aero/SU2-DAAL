digraph "CDiscAdjMultizoneDriver::HandleDataTransfer"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CDiscAdjMultizoneDriver\l::HandleDataTransfer",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Transfer data between zones and update grids when required."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CMultizoneDriver::Dynamic\lMeshUpdate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#a9369ae70a2e529fa81cef90c3857f1c7",tooltip="Perform a dynamic mesh deformation, including grid velocity computation and update of the multigrid s..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CGeometry::ComputeWallDistance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a284247f13458eb39bc678dff5e0c7112",tooltip="Compute the distances to the closest vertex on viscous walls over the entire domain."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CGeometry::ComputeViscous\lWallADT",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ab6cdb13f2a66a34caccc70c4b3841cec",tooltip="Compute an ADT including the coordinates of all viscous markers."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetKind_Solver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a77312cf52a5ba2cc1239b7cee6fce7a7",tooltip="Governing equations of the flow (it can be different from the run time equation)."];
  Node3 -> Node6 [id="edge5_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CConfig::GetMarker\l_All_TagBound",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab8c9c1f45950a29355be4ff357049440",tooltip="Get the index of the surface defined in the geometry file."];
  Node3 -> Node7 [id="edge6_Node000003_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CGeometry::GetnMarker",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ad2f9fe832b72d5a032d709d25879bbd2",tooltip="Get number of markers."];
  Node3 -> Node8 [id="edge7_Node000003_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CConfig::GetnTimeInstances",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a6ae9111090db52de2f8f07f77d6416d5",tooltip="Retrieves the number of periodic time instances for Harmonic Balance."];
  Node3 -> Node9 [id="edge8_Node000003_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CConfig::GetnZone",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCConfig.html#a39ff50a0f3deda9134f1c44b4d5053b7",tooltip="Gets the number of zones in the mesh file."];
  Node3 -> Node12 [id="edge9_Node000003_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CConfig::GetWallRoughness\lProperties",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a894eb084ee6db70a6e274ac071c2a194",tooltip="Get the type of wall and roughness height on a wall boundary (Heatflux or Isothermal)."];
  Node3 -> Node13 [id="edge10_Node000003_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CGeometry::SetWallDistance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#aff06dccf3d6d20b51c62ff13443e23e3",tooltip="Reduce the wall distance based on an previously constructed ADT."];
  Node3 -> Node14 [id="edge11_Node000003_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CPoint::SetWallRoughness",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCPoint.html#a36442ada0dbc716be6e3c9222f9721df",tooltip="Set wall roughnesses according to stored closest wall information."];
  Node2 -> Node17 [id="edge12_Node000002_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CIteration::SetGrid\l_Movement",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCIteration.html#a7b36785762f6b0c214569b185b858b6c",tooltip="Updates the positions and grid velocities for dynamic meshes between physical time steps."];
  Node17 -> Node18 [id="edge13_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CSolver::Aeroelastic",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSolver.html#af130046f03f282501efef2c117af6ced",tooltip="Prepares and solves the aeroelastic equations."];
  Node18 -> Node22 [id="edge14_Node000018_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CConfig::GetKind_GridMovement",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a050c7389c2d16a111890bb44dd7cbcea",tooltip="Get the type of dynamic mesh motion. Each zone gets a config file."];
  Node18 -> Node6 [id="edge15_Node000018_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node59 [id="edge16_Node000017_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="CConfig::GetAeroelasticIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a366bae67ff4380e178c4dc5dc50fcaad",tooltip="Aeroelastic solve every x inner iteration."];
  Node17 -> Node60 [id="edge17_Node000017_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="CConfig::GetContinuous\l_Adjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1eb754aa86fb8154bc9eefea616b7cf9",tooltip="Determines if problem is adjoint."];
  Node17 -> Node61 [id="edge18_Node000017_Node000061",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="CConfig::GetiZone",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1d6335b8fdef6fbcd9a08f7503d73ec1",tooltip="Provides the number of varaibles."];
  Node17 -> Node22 [id="edge19_Node000017_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node62 [id="edge20_Node000017_Node000062",color="steelblue1",style="solid",tooltip=" "];
  Node62 [id="Node000062",label="CConfig::GetnMGLevels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a15a61a6f9a1d415c3509018f4916c5c1",tooltip="Get the number of multigrid levels."];
  Node17 -> Node63 [id="edge21_Node000017_Node000063",color="steelblue1",style="solid",tooltip=" "];
  Node63 [id="Node000063",label="CConfig::GetSurface\l_Movement",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a7da84ee925f437bd635bead56d822df9",tooltip="Get information about deforming markers."];
  Node17 -> Node64 [id="edge22_Node000017_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node64 [id="Node000064",label="CVolumetricMovement\l::Rigid_Pitching",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a9806afa50b53c60376844053db15420c",tooltip="Unsteady pitching grid movement using rigid mesh motion."];
  Node64 -> Node60 [id="edge23_Node000064_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node64 -> Node8 [id="edge24_Node000064_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node82 [id="edge25_Node000017_Node000082",color="steelblue1",style="solid",tooltip=" "];
  Node82 [id="Node000082",label="CVolumetricMovement\l::Rigid_Plunging",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a886e5096f246aec19af2b98bad3e39b2",tooltip="Unsteady plunging grid movement using rigid mesh motion."];
  Node82 -> Node60 [id="edge26_Node000082_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node82 -> Node8 [id="edge27_Node000082_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node88 [id="edge28_Node000017_Node000088",color="steelblue1",style="solid",tooltip=" "];
  Node88 [id="Node000088",label="CVolumetricMovement\l::Rigid_Rotation",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a316597f05a787ca1b683aba66214110b",tooltip="Unsteady grid movement using rigid mesh rotation."];
  Node88 -> Node60 [id="edge29_Node000088_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node88 -> Node8 [id="edge30_Node000088_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node89 [id="edge31_Node000017_Node000089",color="steelblue1",style="solid",tooltip=" "];
  Node89 [id="Node000089",label="CVolumetricMovement\l::Rigid_Translation",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a00368e3044dd07d74e1fafdc11980644",tooltip="Unsteady translational grid movement using rigid mesh motion."];
  Node89 -> Node60 [id="edge32_Node000089_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node89 -> Node8 [id="edge33_Node000089_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node93 [id="edge34_Node000017_Node000093",color="steelblue1",style="solid",tooltip=" "];
  Node93 [id="Node000093",label="CSurfaceMovement::SetExternal\l_Deformation",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSurfaceMovement.html#a575ff545fe6de6e84fb8fed8e1615edb",tooltip="Set any surface deformationsbased on an input file."];
  Node93 -> Node60 [id="edge35_Node000093_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node93 -> Node95 [id="edge36_Node000093_Node000095",color="steelblue1",style="solid",tooltip=" "];
  Node95 [id="Node000095",label="CPoint::GetGlobalIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#a8a53865a92d645b1b74c4d817b4aae10",tooltip="Get the global index in a parallel computation."];
  Node93 -> Node22 [id="edge37_Node000093_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node102 [id="edge38_Node000017_Node000102",color="steelblue1",style="solid",tooltip=" "];
  Node102 [id="Node000102",label="CGeometry::SetGridVelocity",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a028f9dcd1a8095e668f6ae461eb8887b",tooltip="Set the grid velocity via finite differencing at each node."];
  Node17 -> Node105 [id="edge39_Node000017_Node000105",color="steelblue1",style="solid",tooltip=" "];
  Node105 [id="Node000105",label="CGeometry::SetRotational\lVelocity",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#aafa0ebc29ceb133ff38f80b9b62d4ea5",tooltip="Set cartesian grid velocity based on rotational speed and axis."];
  Node17 -> Node106 [id="edge40_Node000017_Node000106",color="steelblue1",style="solid",tooltip=" "];
  Node106 [id="Node000106",label="CGeometry::SetShroudVelocity",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a1be6afa2de8b9d2b65e48257f28d069b",tooltip="Set the rotational velocity of the points on the shroud markers to 0."];
  Node106 -> Node6 [id="edge41_Node000106_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node109 [id="edge42_Node000017_Node000109",color="steelblue1",style="solid",tooltip=" "];
  Node109 [id="Node000109",label="CVolumetricMovement\l::SetVolume_Deformation",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a96c9dadafe051a2479ef4ec4b51adb04",tooltip="Grid deformation using the spring analogy method."];
  Node17 -> Node229 [id="edge43_Node000017_Node000229",color="steelblue1",style="solid",tooltip=" "];
  Node229 [id="Node000229",label="CGeometry::SetWallVelocity",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a56af72c0e00cf908f1ce883c4b0c8028",tooltip="Set the translational/rotational velocity for all moving walls."];
  Node229 -> Node6 [id="edge44_Node000229_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node235 [id="edge45_Node000017_Node000235",color="steelblue1",style="solid",tooltip=" "];
  Node235 [id="Node000235",label="CVolumetricMovement\l::UpdateMultiGrid",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCVolumetricMovement.html#a1cb59d54bb326eb7c09729cfac0c398a",tooltip="Update the coarse multigrid levels after the grid movement."];
  Node235 -> Node62 [id="edge46_Node000235_Node000062",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node239 [id="edge47_Node000001_Node000239",color="steelblue1",style="solid",tooltip=" "];
  Node239 [id="Node000239",label="CMultizoneDriver::TransferData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMultizoneDriver.html#ac25d737397546e3a311a6c286a9ce773",tooltip="Routine to provide all the desired physical transfers between the different zones during one iteratio..."];
  Node239 -> Node240 [id="edge48_Node000239_Node000240",color="steelblue1",style="solid",tooltip=" "];
  Node240 [id="Node000240",label="CInterface::AllgatherAverage",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCInterface.html#a10f9026b7a38a20c9b7c54ff199e7e8d",tooltip="Interpolate data and scatter it into different processors, for matching meshes."];
  Node240 -> Node241 [id="edge49_Node000240_Node000241",color="steelblue1",style="solid",tooltip=" "];
  Node241 [id="Node000241",label="CBaseMPIWrapper::Allgather",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBaseMPIWrapper.html#a137ef06ade0c4f94d2a61f9b8817b6a7",tooltip=" "];
  Node240 -> Node115 [id="edge50_Node000240_Node000115",color="steelblue1",style="solid",tooltip=" "];
  Node115 [id="Node000115",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node240 -> Node242 [id="edge51_Node000240_Node000242",color="steelblue1",style="solid",tooltip=" "];
  Node242 [id="Node000242",label="CInterface::GetDonor\l_Variable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCInterface.html#abbdcd48b9802aba655ddc915db8fb2e7",tooltip="A virtual member."];
  Node240 -> Node243 [id="edge52_Node000240_Node000243",color="steelblue1",style="solid",tooltip=" "];
  Node243 [id="Node000243",label="CConfig::GetMarker\l_All_MixingPlaneInterface",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a79a211ef7e741205f476798d1f144910",tooltip="Get the MixingPlane interface information for a marker val_marker."];
  Node240 -> Node7 [id="edge53_Node000240_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node240 -> Node244 [id="edge54_Node000240_Node000244",color="steelblue1",style="solid",tooltip=" "];
  Node244 [id="Node000244",label="CConfig::GetnSpanWiseSections",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a50c6d8787325e09d732ecb9c4af96e93",tooltip="number span-wise sections to compute 3D BC and performance for turbomachinery."];
  Node240 -> Node245 [id="edge55_Node000240_Node000245",color="steelblue1",style="solid",tooltip=" "];
  Node245 [id="Node000245",label="CInterface::SetTarget\l_Variable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCInterface.html#ab0acd2300d065c1f6018f4e516104ca5",tooltip="A virtual member."];
  Node239 -> Node246 [id="edge56_Node000239_Node000246",color="steelblue1",style="solid",tooltip=" "];
  Node246 [id="Node000246",label="CInterface::BroadcastData",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCInterface.html#ae96b2c6b2dda67461705d7ef160c289d",tooltip="Interpolate data and broadcast it into all processors, for nonmatching meshes."];
  Node246 -> Node241 [id="edge57_Node000246_Node000241",color="steelblue1",style="solid",tooltip=" "];
  Node246 -> Node247 [id="edge58_Node000246_Node000247",color="steelblue1",style="solid",tooltip=" "];
  Node247 [id="Node000247",label="CBaseMPIWrapper::Allgatherv",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBaseMPIWrapper.html#a1c8c3f6d23fd0833c8cd8ef23b0beded",tooltip=" "];
  Node246 -> Node248 [id="edge59_Node000246_Node000248",color="steelblue1",style="solid",tooltip=" "];
  Node248 [id="Node000248",label="CInterpolator::CheckInterface\lBoundary",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCInterpolator.html#a9c2a32da64f71f2a572432aea04a74bf",tooltip="Check whether an interface should be processed or not, i.e. if it is part of the zones."];
  Node248 -> Node115 [id="edge60_Node000248_Node000115",color="steelblue1",style="solid",tooltip=" "];
  Node246 -> Node215 [id="edge61_Node000246_Node000215",color="steelblue1",style="solid",tooltip=" "];
  Node215 [id="Node000215",label="container_details::\lAccessorImpl::data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcontainer__details_1_1AccessorImpl.html#a25b798e6041a085aa19399d0047b6a91",tooltip=" "];
  Node246 -> Node249 [id="edge62_Node000246_Node000249",color="steelblue1",style="solid",tooltip=" "];
  Node249 [id="Node000249",label="CConfig::FindInterfaceMarker",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a662505c242a7c84016e6f58467501908",tooltip="Find the marker index (if any) that is part of a given interface pair."];
  Node246 -> Node115 [id="edge63_Node000246_Node000115",color="steelblue1",style="solid",tooltip=" "];
  Node246 -> Node226 [id="edge64_Node000246_Node000226",color="steelblue1",style="solid",tooltip=" "];
  Node226 [id="Node000226",label="CPoint::GetDomain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#aa58a27b602e47ddcad22ae74a5c6bc81",tooltip="For parallel computation, its indicates if a point must be computed or not."];
  Node246 -> Node242 [id="edge65_Node000246_Node000242",color="steelblue1",style="solid",tooltip=" "];
  Node246 -> Node95 [id="edge66_Node000246_Node000095",color="steelblue1",style="solid",tooltip=" "];
  Node246 -> Node250 [id="edge67_Node000246_Node000250",color="steelblue1",style="solid",tooltip=" "];
  Node250 [id="Node000250",label="CConfig::GetMarker\l_n_ZoneInterface",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a7b750ac75536d32d586928e11ba14277",tooltip="Get the number of FSI interface markers val_marker."];
  Node246 -> Node245 [id="edge68_Node000246_Node000245",color="steelblue1",style="solid",tooltip=" "];
  Node239 -> Node254 [id="edge69_Node000239_Node000254",color="steelblue1",style="solid",tooltip=" "];
  Node254 [id="Node000254",label="CInterface::GatherAverage\lValues",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCInterface.html#ae4c7e8855cd35cc5c7e54bcbb8b67cea",tooltip="Interpolate data and scatter it into different processors, for matching meshes."];
  Node239 -> Node256 [id="edge70_Node000239_Node000256",color="steelblue1",style="solid",tooltip=" "];
  Node256 [id="Node000256",label="CConfig::GetnMarker\l_MixingPlaneInterface",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a38277e9b0c9252428b03869b4c3c9ca6",tooltip="number mixing plane interface specified from config file."];
  Node239 -> Node257 [id="edge71_Node000239_Node000257",color="steelblue1",style="solid",tooltip=" "];
  Node257 [id="Node000257",label="CGeometry::SetAvgTurboGeo\lValues",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#acfca152d8de902a7e8bf9e9a56db865c",tooltip="Store all the turboperformance in the solver in ZONE_0."];
}
