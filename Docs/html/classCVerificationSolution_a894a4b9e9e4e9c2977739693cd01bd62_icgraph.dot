digraph "CVerificationSolution::GetLocalError"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="CVerificationSolution\l::GetLocalError",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Get the local error defined as the local solution minus the verification solution."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CFEM_DG_EulerSolver\l::ComputeVerificationError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a141f2b877000daec03e9aeb68ce6aebf",tooltip="Compute the global error measures (L2, Linf) for verification cases."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CFEM_DG_EulerSolver\l::ClassicalRK4_Iteration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a5f05845eb2f1bb8619d7da896e6aa3f3",tooltip="Update the solution using the classical fourth-order Runge-Kutta scheme."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CFEM_DG_EulerSolver\l::ExplicitRK_Iteration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a980de4518bb9a77a25146d56ae072acf",tooltip="Update the solution using a Runge-Kutta scheme."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CFVMFlowSolverBase\l::ComputeVerificationError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#aaad58ddeb885dd666534a526846d0991",tooltip="Compute the global error measures (L2, Linf) for verification cases."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CFVMFlowSolverBase\l::CompleteImplicitIteration_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#a3eb0fbabf1ce42ccc0fe626473800e09",tooltip="Generic implementation to complete an implicit iteration, i.e. update the solution."];
  Node5 -> Node7 [id="edge6_Node000005_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CFVMFlowSolverBase\l::Explicit_Iteration_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#ac30c9255150f29da2915a85264a1676c",tooltip="Generic implementation of explicit iterations with a preconditioner."];
}
