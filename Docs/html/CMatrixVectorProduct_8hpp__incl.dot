digraph "Common/include/linear_algebra/CMatrixVectorProduct.hpp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Common/include/linear\l_algebra/CMatrixVectorProduct.hpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Headers for the classes related to sparse matrix-vector product wrappers. The actual operations are c..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="../CConfig.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CConfig_8hpp.html",tooltip="All the information about the definition of the physical problem. The subroutines and functions are i..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="parallelization/mpi\l_structure.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$mpi__structure_8hpp.html",tooltip="Headers of the mpi interface for generalized datatypes. The subroutines and functions are in the mpi_..."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="stdlib.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="../basic_types/datatype\l_structure.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$datatype__structure_8hpp.html",tooltip="Headers for generalized datatypes, defines an interface for AD types."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="iostream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node5 -> Node8 [id="edge6_Node000005_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="cstdio",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node5 -> Node9 [id="edge7_Node000005_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="../code_config.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$code__config_8hpp.html",tooltip="Header file for collecting common macros, definitions and type configurations."];
  Node3 -> Node15 [id="edge8_Node000003_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="unistd.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node3 -> Node12 [id="edge9_Node000003_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="../parallelization\l/omp_structure.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$omp__structure_8hpp.html",tooltip="OpenMP interface header, provides compatibility functions if the code is built without OpenMP support..."];
  Node12 -> Node13 [id="edge10_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="cstddef",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node12 -> Node9 [id="edge11_Node000012_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node6 [id="edge12_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node16 [id="edge13_Node000002_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="cstdlib",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node17 [id="edge14_Node000002_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="fstream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node18 [id="edge15_Node000002_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="sstream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node19 [id="edge16_Node000002_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="string",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node20 [id="edge17_Node000002_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="cstring",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node21 [id="edge18_Node000002_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="vector",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node22 [id="edge19_Node000002_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="array",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node4 [id="edge20_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node23 [id="edge21_Node000002_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="cmath",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node24 [id="edge22_Node000002_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="map",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node25 [id="edge23_Node000002_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="assert.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node26 [id="edge24_Node000002_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="option_structure.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$option__structure_8hpp.html",tooltip="Defines classes for referencing options for easy input in CConfig."];
  Node26 -> Node3 [id="edge25_Node000026_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node6 [id="edge26_Node000026_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node18 [id="edge27_Node000026_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node19 [id="edge28_Node000026_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node21 [id="edge29_Node000026_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node24 [id="edge30_Node000026_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node16 [id="edge31_Node000026_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node27 [id="edge32_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="algorithm",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node26 -> Node28 [id="edge33_Node000026_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="cassert",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node2 -> Node29 [id="edge34_Node000002_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="containers/container\l_decorators.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$container__decorators_8hpp.html",tooltip="Collection of small classes that decorate C2DContainer to augment its functionality,..."];
  Node29 -> Node30 [id="edge35_Node000029_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="C2DContainer.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$C2DContainer_8hpp.html",tooltip="A templated vector/matrix object."];
  Node30 -> Node5 [id="edge36_Node000030_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node32 [id="edge37_Node000030_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="../parallelization\l/vectorization.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$vectorization_8hpp.html",tooltip="Implementation of a portable SIMD type."];
  Node32 -> Node33 [id="edge38_Node000032_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="../linear_algebra/vector\l_expressions.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$vector__expressions_8hpp.html",tooltip="Expression templates for vector types with coefficient-wise operations."];
  Node33 -> Node5 [id="edge39_Node000033_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node27 [id="edge40_Node000033_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node28 [id="edge41_Node000033_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node16 [id="edge42_Node000033_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node23 [id="edge43_Node000033_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node12 [id="edge44_Node000032_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node27 [id="edge45_Node000032_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node23 [id="edge46_Node000032_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node39 [id="edge47_Node000001_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="../geometry/CGeometry.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CGeometry_8hpp.html",tooltip="Headers of the main subroutines for creating the geometrical structure. The subroutines and functions..."];
  Node39 -> Node40 [id="edge48_Node000039_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="limits",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node39 -> Node3 [id="edge49_Node000039_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node19 [id="edge50_Node000039_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node17 [id="edge51_Node000039_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node18 [id="edge52_Node000039_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node23 [id="edge53_Node000039_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node27 [id="edge54_Node000039_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node20 [id="edge55_Node000039_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node8 [id="edge56_Node000039_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node16 [id="edge57_Node000039_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node41 [id="edge58_Node000039_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="climits",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node39 -> Node42 [id="edge59_Node000039_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="memory",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node39 -> Node43 [id="edge60_Node000039_Node000043",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="unordered_map",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node39 -> Node44 [id="edge61_Node000039_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="primal_grid/CPrimalGrid.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CPrimalGrid_8hpp.html",tooltip="Headers of the main subroutines for storing the primal grid structure. The subroutines and functions ..."];
  Node44 -> Node6 [id="edge62_Node000044_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node21 [id="edge63_Node000044_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node40 [id="edge64_Node000044_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node16 [id="edge65_Node000044_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node42 [id="edge66_Node000044_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node26 [id="edge67_Node000044_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node45 [id="edge68_Node000039_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="dual_grid/CDualGrid.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CDualGrid_8hpp.html",tooltip="Headers of the main subroutines for doing the complete dual grid structure. The subroutines and funct..."];
  Node45 -> Node23 [id="edge69_Node000045_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node6 [id="edge70_Node000045_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node16 [id="edge71_Node000045_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node21 [id="edge72_Node000045_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node2 [id="edge73_Node000045_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node46 [id="edge74_Node000039_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="dual_grid/CPoint.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CPoint_8hpp.html",tooltip="Declaration of the point class that stores geometric and adjacency information for dual control volum..."];
  Node46 -> Node30 [id="edge75_Node000046_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node46 -> Node29 [id="edge76_Node000046_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node46 -> Node47 [id="edge77_Node000046_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="../../toolboxes/graph\l_toolbox.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$graph__toolbox_8hpp.html",tooltip="Functions and classes to build/represent sparse graphs or sparse patterns."];
  Node47 -> Node30 [id="edge78_Node000047_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node12 [id="edge79_Node000047_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node48 [id="edge80_Node000047_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="set",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node47 -> Node21 [id="edge81_Node000047_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node40 [id="edge82_Node000047_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node28 [id="edge83_Node000047_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node27 [id="edge84_Node000047_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node49 [id="edge85_Node000047_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="numeric",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node46 -> Node21 [id="edge86_Node000046_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node46 -> Node50 [id="edge87_Node000046_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="../../toolboxes/ndflattener.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$ndflattener_8hpp.html",tooltip="Flatten pointer-to-pointer-... arrays for MPI communication."];
  Node50 -> Node28 [id="edge88_Node000050_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node6 [id="edge89_Node000050_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node18 [id="edge90_Node000050_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node21 [id="edge91_Node000050_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node30 [id="edge92_Node000050_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node3 [id="edge93_Node000050_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node51 [id="edge94_Node000039_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="dual_grid/CEdge.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CEdge_8hpp.html",tooltip="Declaration of the edge class CEdge.cpp file."];
  Node51 -> Node30 [id="edge95_Node000051_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node52 [id="edge96_Node000039_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="dual_grid/CVertex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CVertex_8hpp.html",tooltip="Headers of the main subroutines for doing the complete dual grid structure. The subroutines and funct..."];
  Node52 -> Node45 [id="edge97_Node000052_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node53 [id="edge98_Node000039_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="dual_grid/CTurboVertex.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CTurboVertex_8hpp.html",tooltip="Headers of the main subroutines for doing the complete dual grid structure. The subroutines and funct..."];
  Node53 -> Node52 [id="edge99_Node000053_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node2 [id="edge100_Node000039_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node54 [id="edge101_Node000039_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="../fem/geometry_structure\l_fem_part.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$geometry__structure__fem__part_8hpp.html",tooltip="Helper classes for the Fluid FEM solver."];
  Node54 -> Node5 [id="edge102_Node000054_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node21 [id="edge103_Node000054_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node27 [id="edge104_Node000054_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node47 [id="edge105_Node000039_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node55 [id="edge106_Node000039_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="../adt/CADTElemClass.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CADTElemClass_8hpp.html",tooltip="Class for storing an ADT of (linear) elements in an arbitrary number of dimensions."];
  Node55 -> Node56 [id="edge107_Node000055_Node000056",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="./CADTBaseClass.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CADTBaseClass_8hpp.html",tooltip="Base class for storing an ADT in an arbitrary number of dimensions."];
  Node56 -> Node21 [id="edge108_Node000056_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node56 -> Node22 [id="edge109_Node000056_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node56 -> Node5 [id="edge110_Node000056_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node56 -> Node12 [id="edge111_Node000056_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node55 -> Node58 [id="edge112_Node000055_Node000058",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="./CBBoxTargetClass.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CBBoxTargetClass_8hpp.html",tooltip="Class for storing the information of a possible bounding box candidate during a minimum distance sear..."];
  Node58 -> Node5 [id="edge113_Node000058_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node55 -> Node12 [id="edge114_Node000055_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node59 [id="edge115_Node000001_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="CSysVector.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CSysVector_8hpp.html",tooltip="Declararion and inlines of the vector class used in the solution of large, distributed,..."];
  Node59 -> Node3 [id="edge116_Node000059_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node59 -> Node12 [id="edge117_Node000059_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node59 -> Node32 [id="edge118_Node000059_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node59 -> Node33 [id="edge119_Node000059_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node60 [id="edge120_Node000001_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="CSysMatrix.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CSysMatrix_8hpp.html",tooltip="Declaration of the block-sparse matrix class. The implemtation is in CSysMatrix.cpp."];
  Node60 -> Node2 [id="edge121_Node000060_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node59 [id="edge122_Node000060_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node61 [id="edge123_Node000060_Node000061",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="CPastixWrapper.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CPastixWrapper_8hpp.html",tooltip="An interface to the INRIA solver PaStiX (http://pastix.gforge.inria.fr/files/README-txt...."];
  Node61 -> Node21 [id="edge124_Node000061_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node16 [id="edge125_Node000060_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node21 [id="edge126_Node000060_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node60 -> Node28 [id="edge127_Node000060_Node000028",color="steelblue1",style="solid",tooltip=" "];
}
