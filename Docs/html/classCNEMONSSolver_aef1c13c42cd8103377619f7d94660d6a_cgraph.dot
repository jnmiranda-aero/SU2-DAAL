digraph "CNEMONSSolver::Preprocessing"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CNEMONSSolver::Preprocessing",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Restart residual and compute gradients."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CNEMOEulerSolver::Common\lPreprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerSolver.html#a27f21d6dbfb7f6c600f759caf7625087",tooltip="Preprocessing actions common to the Euler and NS solvers."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CBaseMPIWrapper::Allreduce",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a381d4b3738c09d92ee1ae9f89715b541",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CBaseMPIWrapper::CopyData",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBaseMPIWrapper.html#a3c28692a4cab67ad0f81d18273db3d23",tooltip=" "];
  Node2 -> Node7 [id="edge4_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node2 -> Node8 [id="edge5_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CConfig::GetComm_Level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa495414133c826e5f6651d4ce82d0ef6",tooltip="Get the level of MPI communications to be performed."];
  Node2 -> Node9 [id="edge6_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CConfig::GetKind_Centered_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ac98947febf35f20117815114d9371593",tooltip="Get the kind of center convective numerical scheme for the flow equations."];
  Node2 -> Node10 [id="edge7_Node000002_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CConfig::GetKind_ConvNum\lScheme_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ac664a20b0a09ab14844dc6326290f0a0",tooltip="Get the kind of convective numerical scheme for the flow equations (centered or upwind)."];
  Node2 -> Node11 [id="edge8_Node000002_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CConfig::GetKind_TimeInt\lScheme",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ad16f71356f146b530fb1fbb45444525c",tooltip="Get the kind of time integration method."];
  Node2 -> Node12 [id="edge9_Node000002_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CConfig::GetKind_Upwind_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a077d982f11185a84929f8fec40b79938",tooltip="Get the kind of upwind convective numerical scheme for the flow equations."];
  Node2 -> Node13 [id="edge10_Node000002_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CFVMFlowSolverBase\l\< CNEMOEulerVariable,\l ENUM_REGIME::COMPRESSIBLE\l \>::ompMasterAssignBarrier",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#a1b0175f84e884c015bf48e2e6e7c78bd",tooltip="Utility to set the value of a member variables safely, and so that the new values are seen by all thr..."];
  Node2 -> Node14 [id="edge11_Node000002_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CNEMOEulerSolver::SetCentered\l_Dissipation_Sensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerSolver.html#a49c4b75eafacb880053564f5c9564276",tooltip="Compute a pressure sensor switch."];
  Node2 -> Node15 [id="edge12_Node000002_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CNEMOEulerSolver::SetMax\l_Eigenvalue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerSolver.html#aa07c0832428ab3bb9aef437d98f1fd26",tooltip="Set the maximum value of the eigenvalue."];
  Node15 -> Node16 [id="edge13_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CNEMOEulerVariable\l::GetSoundSpeed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerVariable.html#ace88c30d7e9a0e48b713e073d1b92a8c",tooltip="Get the speed of the sound."];
  Node15 -> Node17 [id="edge14_Node000015_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CFVMFlowSolverBase\l\< CNEMOEulerVariable,\l ENUM_REGIME::COMPRESSIBLE\l \>::SetMax_Eigenvalue_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#adc3a96a8ca25902058864c18b533192d",tooltip="Compute the max eigenvalue, gemeric implementation."];
  Node2 -> Node18 [id="edge15_Node000002_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CConfig::SetNonphysical\l_Points",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a434fe0922532828b7e40ded865c5ce51",tooltip="Set the current number of non-physical nodes in the solution."];
  Node2 -> Node19 [id="edge16_Node000002_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CNEMOEulerSolver::SetPressure\lDiffusionSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerSolver.html#ae3b9dab24a842ae04b745c5303ec52aa",tooltip="Compute the Pressure sensor for NEMO schemes."];
  Node19 -> Node20 [id="edge17_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CSolver::CompleteComms",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSolver.html#a6891c839827efbebdcbf9a349f4da92c",tooltip="Routine to complete the set of non-blocking communications launched by InitiateComms() and unpacking ..."];
  Node20 -> Node41 [id="edge18_Node000020_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="CVariable::SetSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVariable.html#a79ebe4ea3cc8eccd8b004256c5492a9e",tooltip="Set pressure sensor."];
  Node19 -> Node49 [id="edge19_Node000019_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="CNEMOEulerVariable\l::GetPIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerVariable.html#a24cfa7d8f30e0c179e94c2bd147ecb42",tooltip="Retrieves the value of the pressure in the primitive variable vector."];
  Node19 -> Node50 [id="edge20_Node000019_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="CPoint::GetPoints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#a28c574d1577404bc70199351c1c9c358",tooltip="Get the entire point adjacency information in compressed format (CSR)."];
  Node19 -> Node51 [id="edge21_Node000019_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="CFlowVariable::GetPrimitive",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFlowVariable.html#a852271c741f1e7cdb1d391941266d344",tooltip="Get a primitive variable."];
  Node19 -> Node52 [id="edge22_Node000019_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="CSolver::InitiateComms",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSolver.html#a7c5c26e7f006b4bb7e93582d839cf09d",tooltip="Routine to load a solver quantity into the data structures for MPI point-to-point communication and t..."];
  Node19 -> Node41 [id="edge23_Node000019_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node69 [id="edge24_Node000002_Node000069",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="CNEMOEulerSolver::SetPrimitive\l_Variables",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerSolver.html#aa3498ebe1779c01daf8380d6a7d0aa7d",tooltip="Computes primitive variables."];
  Node69 -> Node70 [id="edge25_Node000069_Node000070",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="CSysVector::SetBlock_Zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#a9990ad4ea225c98a1af50e00fecbc56f",tooltip="Set the values to zero for one block."];
  Node69 -> Node71 [id="edge26_Node000069_Node000071",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="CNEMOEulerVariable\l::SetPrimVar",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCNEMOEulerVariable.html#aaf86b1f3586f5b0b8015ddf1311d7ce4",tooltip="Set all the primitive variables for compressible flows."];
  Node2 -> Node92 [id="edge27_Node000002_Node000092",color="steelblue1",style="solid",tooltip=" "];
  Node92 [id="Node000092",label="CNEMOEulerSolver::SetUndivided\l_Laplacian",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerSolver.html#a2a62d72d39fe27988a7ee2d1b78ebdf8",tooltip="Set the value of undivided laplacian."];
  Node2 -> Node93 [id="edge28_Node000002_Node000093",color="steelblue1",style="solid",tooltip=" "];
  Node93 [id="Node000093",label="CSysMatrix::SetValZero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#a8f974ad2e089dccfc99ea21a4ef5a819",tooltip="Sets to zero all the entries of the sparse matrix."];
  Node93 -> Node94 [id="edge29_Node000093_Node000094",color="steelblue1",style="solid",tooltip=" "];
  Node94 [id="Node000094",label="omp_get_num_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a15e588e219ac407d67b02755aab67506",tooltip="Number of threads in current team."];
  Node93 -> Node95 [id="edge30_Node000093_Node000095",color="steelblue1",style="solid",tooltip=" "];
  Node95 [id="Node000095",label="omp_get_thread_num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#aad63dd7e34961dbbd2e8774e7f6bc2d0",tooltip="Index of current thread, akin to MPI rank."];
  Node93 -> Node96 [id="edge31_Node000093_Node000096",color="steelblue1",style="solid",tooltip=" "];
  Node96 [id="Node000096",label="roundUpDiv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a1c00281f52b615b111a4990b2d2a5157",tooltip="Integer division rounding up."];
  Node2 -> Node97 [id="edge32_Node000002_Node000097",color="steelblue1",style="solid",tooltip=" "];
  Node97 [id="Node000097",label="CSysVector::SetValZero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#aa179ddab500faadee96bebecff9e201d",tooltip="Sets to zero all the entries of the vector."];
  Node1 -> Node98 [id="edge33_Node000001_Node000098",color="steelblue1",style="solid",tooltip=" "];
  Node98 [id="Node000098",label="CFVMFlowSolverBase\l\< CNEMOEulerVariable,\l ENUM_REGIME::COMPRESSIBLE\l \>::ComputeVorticityAndStrainMag",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#af84f9a0d4de3df7d82cef37eae94f739",tooltip="Evaluate the vorticity and strain rate magnitude."];
  Node1 -> Node99 [id="edge34_Node000001_Node000099",color="steelblue1",style="solid",tooltip=" "];
  Node99 [id="Node000099",label="CConfig::GetInnerIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a079a90396222697f01e0c365285c915d",tooltip="Get the current FSI iteration number."];
  Node1 -> Node10 [id="edge35_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node100 [id="edge36_Node000001_Node000100",color="steelblue1",style="solid",tooltip=" "];
  Node100 [id="Node000100",label="CConfig::GetKind_Gradient\l_Method",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a83d5144467a2c2fa78a7f9cc19026421",tooltip="Get the kind of method for computation of spatial gradients used for viscous and source terms."];
  Node1 -> Node101 [id="edge37_Node000001_Node000101",color="steelblue1",style="solid",tooltip=" "];
  Node101 [id="Node000101",label="CConfig::GetKind_Gradient\l_Method_Recon",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#af59700a2ce4edce862248ba52bdca025",tooltip="Get the kind of method for computation of spatial gradients used for upwind reconstruction."];
  Node1 -> Node102 [id="edge38_Node000001_Node000102",color="steelblue1",style="solid",tooltip=" "];
  Node102 [id="Node000102",label="CConfig::GetKind_SlopeLimit_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a31504bfdad401a8879a9e0a121320f96",tooltip="Get the method for limiting the spatial gradients."];
  Node1 -> Node103 [id="edge39_Node000001_Node000103",color="steelblue1",style="solid",tooltip=" "];
  Node103 [id="Node000103",label="CConfig::GetMUSCL_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a97ba000591a72e4d8f0fc71bc75bd38a",tooltip="Get if the upwind scheme used MUSCL or not."];
  Node1 -> Node104 [id="edge40_Node000001_Node000104",color="steelblue1",style="solid",tooltip=" "];
  Node104 [id="Node000104",label="CConfig::GetReconstruction\lGradientRequired",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a350466e9cc76639fb07c59ac43288bb8",tooltip="Get flag for whether a second gradient calculation is required for upwind reconstruction alone."];
  Node1 -> Node105 [id="edge41_Node000001_Node000105",color="steelblue1",style="solid",tooltip=" "];
  Node105 [id="Node000105",label="CConfig::GetWall_Functions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a48d5c5100cf58c03203cfb231cff75e6",tooltip="Get information about whether to use wall functions."];
  Node1 -> Node106 [id="edge42_Node000001_Node000106",color="steelblue1",style="solid",tooltip=" "];
  Node106 [id="Node000106",label="CNEMONSSolver::SetPrimitive\l_Gradient_GG",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMONSSolver.html#aed93127447e3f92ba0c25a33adef7065",tooltip="Compute the gradient of the primitive variables using Green-Gauss method, and stores the result in th..."];
  Node106 -> Node107 [id="edge43_Node000106_Node000107",color="steelblue1",style="solid",tooltip=" "];
  Node107 [id="Node000107",label="computeGradientsGreenGauss",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$group__FvmAlgos.html#gabc5144134fe922fe1bbd5db893ef2c29",tooltip="Instantiations for 2D and 3D."];
  Node106 -> Node109 [id="edge44_Node000106_Node000109",color="steelblue1",style="solid",tooltip=" "];
  Node109 [id="Node000109",label="CFlowVariable::GetGradient\l_Primitive",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFlowVariable.html#a23eab98fe30de5f7cfff158eb929c24c",tooltip="Get the value of the primitive variables gradient."];
  Node106 -> Node110 [id="edge45_Node000106_Node000110",color="steelblue1",style="solid",tooltip=" "];
  Node110 [id="Node000110",label="CFlowVariable::GetGradient\l_Reconstruction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFlowVariable.html#a912dab0f8f674fa26fe1f153f3232d5b",tooltip="Get the array of the reconstruction variables gradient at a node."];
  Node106 -> Node51 [id="edge46_Node000106_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node106 -> Node111 [id="edge47_Node000106_Node000111",color="steelblue1",style="solid",tooltip=" "];
  Node111 [id="Node000111",label="CNEMOEulerVariable\l::GetPrimitive_Aux",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerVariable.html#a1d96e3afc50fd0b91c302389af3479fc",tooltip="Get the primitive variables for all points."];
  Node106 -> Node112 [id="edge48_Node000106_Node000112",color="steelblue1",style="solid",tooltip=" "];
  Node112 [id="Node000112",label="CNEMOEulerVariable\l::GetRhoIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerVariable.html#a9abc604e06f90161a2658d99582d8a3b",tooltip="Retrieves the value of the total density in the primitive variable vector."];
  Node106 -> Node113 [id="edge49_Node000106_Node000113",color="steelblue1",style="solid",tooltip=" "];
  Node113 [id="Node000113",label="CNEMOEulerVariable\l::GetRhosIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerVariable.html#a18cf86a19d9ee761bd0be1f90bcd2e33",tooltip="Retrieves the value of the species density in the primitive variable vector."];
  Node106 -> Node114 [id="edge50_Node000106_Node000114",color="steelblue1",style="solid",tooltip=" "];
  Node114 [id="Node000114",label="CNEMOEulerVariable\l::SetPrimitive_Aux",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMOEulerVariable.html#a26b7c5515bcabc6cc2e633a8e15c8c7f",tooltip="Set the value of the primitive auxiliary variables - with mass fractions."];
  Node1 -> Node115 [id="edge51_Node000001_Node000115",color="steelblue1",style="solid",tooltip=" "];
  Node115 [id="Node000115",label="CFVMFlowSolverBase\l\< CNEMOEulerVariable,\l ENUM_REGIME::COMPRESSIBLE\l \>::SetPrimitive_Gradient_LS",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#aa00cb2f438eff709117ab4ffe61c3542",tooltip="Compute the gradient of the primitive variables using a Least-Squares method, and stores the result i..."];
  Node1 -> Node116 [id="edge52_Node000001_Node000116",color="steelblue1",style="solid",tooltip=" "];
  Node116 [id="Node000116",label="CFVMFlowSolverBase\l\< CNEMOEulerVariable,\l ENUM_REGIME::COMPRESSIBLE\l \>::SetPrimitive_Limiter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#a6d22d04abb4c12c252db08cfb576e089",tooltip="Compute the limiter of the primitive variables."];
}
