digraph "CVolumetricMovement::SetFEAMethodContributions_Elem"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CVolumetricMovement\l::SetFEAMethodContributions_Elem",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Compute the stiffness matrix for grid deformation using spring analogy."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CVolumetricMovement\l::AddFEA_StiffMatrix",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#ac6ce7aa6302e773340d0c0d5bc871356",tooltip="Add the stiffness matrix for a 2-D triangular element to the global stiffness matrix for the entire m..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CSysMatrix::AddBlock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#a03a189a2120be05e21fbd9b120549427",tooltip="Add a scaled block (in flat format) to the sparse matrix (see SetBlock)."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CGeometry::GetnDim",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ace7f7fe876f629f5bd5f92d4805a1a4b",tooltip="Get number of coordinates."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CVolumetricMovement\l::ComputeDeforming_Element\l_Volume",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a7acdc25230eeae12974e8b4ffa054497",tooltip="Check for negative volumes (all elements) after performing grid deformation."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CBaseMPIWrapper::Allreduce",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a381d4b3738c09d92ee1ae9f89715b541",tooltip=" "];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CBaseMPIWrapper::CopyData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a3c28692a4cab67ad0f81d18273db3d23",tooltip=" "];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#af7297d861dca86b45cf561b6ab642e8f",tooltip=" "];
  Node5 -> Node10 [id="edge9_Node000005_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node5 -> Node11 [id="edge10_Node000005_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CPoint::GetCoord",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#ab16c29dd03911529cd73bf467c313179",tooltip="Get the coordinates dor the control volume."];
  Node5 -> Node12 [id="edge11_Node000005_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CVolumetricMovement\l::GetHexa_Volume",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a9f64dfd8852769dde44251d1891f79f7",tooltip="Compute the shape functions for hexahedron."];
  Node5 -> Node13 [id="edge12_Node000005_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CGeometry::GetnElem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a3cac58e3b4dd3f8350bd308acb7e3bc1",tooltip="Get number of elements."];
  Node5 -> Node14 [id="edge13_Node000005_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CPrimalGrid::GetNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#a6353b89f5a8a3948cd475da6152bf077",tooltip="Get the nodes shared by the primal grid element."];
  Node5 -> Node15 [id="edge14_Node000005_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CVolumetricMovement\l::GetPrism_Volume",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a9562d2a0f25665a91ca15aa977a30676",tooltip="Compute the shape functions for hexahedron."];
  Node5 -> Node16 [id="edge15_Node000005_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CVolumetricMovement\l::GetPyram_Volume",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a9ec6a2fa1a0720585e3ccacf7b5f7df3",tooltip="Compute the shape functions for hexahedron."];
  Node5 -> Node17 [id="edge16_Node000005_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CVolumetricMovement\l::GetQuadrilateral_Area",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a28a79d0b6e2568d100dd5b8074730c02",tooltip="Compute the shape functions for hexahedron."];
  Node5 -> Node18 [id="edge17_Node000005_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CVolumetricMovement\l::GetTetra_Volume",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#ac211b313f49bcb59f82a6ae9b2c158b1",tooltip="Compute the shape functions for hexahedron."];
  Node5 -> Node19 [id="edge18_Node000005_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CVolumetricMovement\l::GetTriangle_Area",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#ad530e178938f5ed5d029470d138fc8be",tooltip="Compute the shape functions for hexahedron."];
  Node5 -> Node20 [id="edge19_Node000005_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CPrimalGrid::GetVolume",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#a21122a187207f6cbd552d98c60e848c4",tooltip="Get the center of gravity of an element (including edges)."];
  Node5 -> Node21 [id="edge20_Node000005_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CPrimalGrid::GetVTK_Type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#ad506ad8f97dd70d71c1ee6f407df4cf5",tooltip="Get VTK type."];
  Node5 -> Node22 [id="edge21_Node000005_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CPrimalGrid::SetVolume",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPrimalGrid.html#a14dbb458d64bbc96aa69507d849054fe",tooltip="Set the center of gravity of an element (including edges)."];
  Node1 -> Node23 [id="edge22_Node000001_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CVolumetricMovement\l::ComputeSolid_Wall\l_Distance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#aff376299cdec4e1f8c0765b64cf04763",tooltip="Compute the minimum distance to the nearest solid surface."];
  Node23 -> Node6 [id="edge23_Node000023_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node24 [id="edge24_Node000023_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CADTPointsOnlyClass\l::DetermineNearestNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCADTPointsOnlyClass.html#a6c59523d6f08fcdfcd1b36d9909dace6",tooltip="Function, which determines the nearest node in the ADT for the given coordinate."];
  Node24 -> Node25 [id="edge25_Node000024_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="omp_get_thread_num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#aad63dd7e34961dbbd2e8774e7f6bc2d0",tooltip="Index of current thread, akin to MPI rank."];
  Node23 -> Node10 [id="edge26_Node000023_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node11 [id="edge27_Node000023_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node26 [id="edge28_Node000023_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="CConfig::GetnMarker_All",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a459dee039e618d21a5d78db61c221240",tooltip="Get the total number of boundary markers of the local process including send/receive domains."];
  Node23 -> Node27 [id="edge29_Node000023_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="CVertex::GetNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVertex.html#ad568da06e7191358d3a09a1bee71cdb5",tooltip="Get the node of the vertex."];
  Node23 -> Node28 [id="edge30_Node000023_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="CGeometry::GetnPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a275fb07cd99ab79d7a04b4862280169d",tooltip="Get number of points."];
  Node23 -> Node29 [id="edge31_Node000023_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CGeometry::GetnVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a00b7f7e71ff42bd38f39147366dd093a",tooltip="Get number of vertices."];
  Node23 -> Node30 [id="edge32_Node000023_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CConfig::GetSolid_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1e07d3641838843be05ed58424d39f4f",tooltip="Determines whether a marker with index iMarker is a solid boundary."];
  Node30 -> Node31 [id="edge33_Node000030_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CConfig::GetViscous_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a890cf694cae683bb44a36c1fa1160e65",tooltip="Determines whether a marker with index iMarker is a viscous no-slip boundary."];
  Node23 -> Node32 [id="edge34_Node000023_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CADTBaseClass::IsEmpty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCADTBaseClass.html#acf2c06bc3b8b87b85aaf62571092df07",tooltip="Function, which returns whether or not the ADT is empty."];
  Node23 -> Node33 [id="edge35_Node000023_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="CPoint::SetWall_Distance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#acfd5de2b62bf970457f546ba24c03ed4",tooltip="Set the value of the distance to the nearest wall."];
  Node23 -> Node34 [id="edge36_Node000023_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="sqrt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__SIMD.html#ga54a1925ab40fb4249ea255072520de35",tooltip=" "];
  Node1 -> Node11 [id="edge37_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node35 [id="edge38_Node000001_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="CConfig::GetDeform\l_Limit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#adb9de8e548ff3a7620b74549b4186497",tooltip="Get limit for the volumetric deformation."];
  Node1 -> Node36 [id="edge39_Node000001_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="CConfig::GetDeform\l_Output",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#addf46fdb73c59de82d7a559c3588582a",tooltip="Get information about writing grid deformation residuals to the console."];
  Node1 -> Node37 [id="edge40_Node000001_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="CConfig::GetDeform\l_Stiffness_Type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab62038a9661de64bfe3cf8c19eeb773a",tooltip="Get the type of stiffness to impose for FEA mesh deformation."];
  Node1 -> Node13 [id="edge41_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge42_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge43_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge44_Node000001_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node38 [id="edge45_Node000001_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="CPoint::GetWall_Distance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#aed2e3cbb4c15d03c7cee5602e8c06985",tooltip="Get the value of the distance to the nearest wall."];
  Node1 -> Node39 [id="edge46_Node000001_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="CVolumetricMovement\l::SetFEA_StiffMatrix2D",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a701f9e550b1d2e2a781f5b4aed1fb0c2",tooltip="Build the stiffness matrix for a 3-D hexahedron element. The result will be placed in StiffMatrix_Ele..."];
  Node39 -> Node40 [id="edge47_Node000039_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="CConfig::GetDeform\l_Coeff",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a2a8dcf2e0b924dd239795ca0310a29fd",tooltip="Get factor to multiply smallest volume for deform tolerance."];
  Node39 -> Node37 [id="edge48_Node000039_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node4 [id="edge49_Node000039_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node41 [id="edge50_Node000039_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="CVolumetricMovement\l::ShapeFunc_Quadrilateral",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a2ab712900490044b2596647e0c1226e3",tooltip="Shape functions and derivative of the shape functions."];
  Node39 -> Node42 [id="edge51_Node000039_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="CVolumetricMovement\l::ShapeFunc_Triangle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a7530e2a792d31a36547c4e956fa7bf28",tooltip="Shape functions and derivative of the shape functions."];
  Node1 -> Node43 [id="edge52_Node000001_Node000043",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="CVolumetricMovement\l::SetFEA_StiffMatrix3D",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a9988a1d647d3c0d4fa7c37f4a6985a4f",tooltip="Build the stiffness matrix for a 3-D hexahedron element. The result will be placed in StiffMatrix_Ele..."];
  Node43 -> Node40 [id="edge53_Node000043_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node43 -> Node37 [id="edge54_Node000043_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node43 -> Node4 [id="edge55_Node000043_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node43 -> Node44 [id="edge56_Node000043_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="CVolumetricMovement\l::ShapeFunc_Hexa",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a124ed1d2c27cde5c2f7e773a5041deb9",tooltip="Shape functions and derivative of the shape functions."];
  Node43 -> Node45 [id="edge57_Node000043_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="CVolumetricMovement\l::ShapeFunc_Prism",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a9c956febf1bd3cb4d0954afd83f9b16d",tooltip="Shape functions and derivative of the shape functions."];
  Node43 -> Node46 [id="edge58_Node000043_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="CVolumetricMovement\l::ShapeFunc_Pyram",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#ac942e1fa02b2906da94535ba22a1b7ec",tooltip="Shape functions and derivative of the shape functions."];
  Node43 -> Node47 [id="edge59_Node000043_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="CVolumetricMovement\l::ShapeFunc_Tetra",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a2a4870ca67ac78a1f78ce213ab9bc305",tooltip="Shape functions and derivative of the shape functions."];
}
