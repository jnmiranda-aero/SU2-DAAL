digraph "CScalarSolver::CommonPreprocessing"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CScalarSolver::CommonPreprocessing",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Gradient and Limiter computation."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CConfig::GetInnerIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a079a90396222697f01e0c365285c915d",tooltip="Get the current FSI iteration number."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CConfig::GetKind_Gradient\l_Method",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a83d5144467a2c2fa78a7f9cc19026421",tooltip="Get the kind of method for computation of spatial gradients used for viscous and source terms."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetKind_Gradient\l_Method_Recon",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#af59700a2ce4edce862248ba52bdca025",tooltip="Get the kind of method for computation of spatial gradients used for upwind reconstruction."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetKind_SlopeLimit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa19c5f5780613a62cae13b9b6bab0239",tooltip="Get the method for limiting the spatial gradients."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CConfig::GetKind_TimeInt\lScheme",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ad16f71356f146b530fb1fbb45444525c",tooltip="Get the kind of time integration method."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CConfig::GetLimiterIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a2d4ce64f8b8f417d7e67651598fbb530",tooltip="Freeze the value of the limiter after a number of iterations."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CConfig::GetMUSCL",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a7e6e683aabaedf5d0cb90ea63cf619a2",tooltip="Get if the upwind scheme used MUSCL or not."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CConfig::GetReconstruction\lGradientRequired",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a350466e9cc76639fb07c59ac43288bb8",tooltip="Get flag for whether a second gradient calculation is required for upwind reconstruction alone."];
}
