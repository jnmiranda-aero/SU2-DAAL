digraph "CMeshSolver::CMeshSolver"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CMeshSolver::CMeshSolver",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Constructor of the class."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CPoint::GetCoord",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#ab16c29dd03911529cd73bf467c313179",tooltip="Get the coordinates dor the control volume."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CConfig::GetDeform\l_Stiffness_Type",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab62038a9661de64bfe3cf8c19eeb773a",tooltip="Get the type of stiffness to impose for FEA mesh deformation."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetMarker\l_All_Deform_Mesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#af2b7f4beda04f2a41c9b922987a5df26",tooltip="Get whether marker val_marker is a DEFORM_MESH marker."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetMarker\l_All_KindBC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ae003cd8f406eaaa91849a774c9a20730",tooltip="Get the kind of boundary for each marker."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CConfig::GetMarker\l_All_Moving",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa92e30407f9aaad234c7a557019cd3c5",tooltip="Get the motion information for a marker val_marker."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CConfig::GetMultizone\l_Problem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#abafdda03255a7f71a9701ded02f6d231",tooltip="Get whether the simulation we are running is a multizone simulation."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CConfig::GetMultizone\l_Residual",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a146929508ca21f46fd0adcbc578b17f7",tooltip="Check if the mesh read supports multiple zones."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CGeometry::GetnDim",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ace7f7fe876f629f5bd5f92d4805a1a4b",tooltip="Get number of coordinates."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CGeometry::GetnElem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a3cac58e3b4dd3f8350bd308acb7e3bc1",tooltip="Get number of elements."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CConfig::GetnMarker_All",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a459dee039e618d21a5d78db61c221240",tooltip="Get the total number of boundary markers of the local process including send/receive domains."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CGeometry::GetnPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a275fb07cd99ab79d7a04b4862280169d",tooltip="Get number of points."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CGeometry::GetnPointDomain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ac84179060bbac1fe5e856ea3da850b6e",tooltip="Get number of real points (that belong to the domain)."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CConfig::GetTime_Domain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a85d2e3cf43b77c63642c40c235b853f3",tooltip="Check if the multizone problem is solved for time domain."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CPoint::GetVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#aa23a2b42b38e6d611038eeafdb7051d0",tooltip="Get the vertex that compose the control volume for a marker."];
  Node1 -> Node16 [id="edge15_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CFEASolver::HybridParallel\lInitialization",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEASolver.html#abcef9eb21dd43cbf8598bdfea0f9fef8",tooltip="Actions required to initialize the supporting variables for hybrid parallel execution."];
  Node16 -> Node17 [id="edge16_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="computeStaticChunkSize",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$omp__structure_8hpp.html#a6a308c63005823370a2ffd6a82f3868f",tooltip="Compute a chunk size based on totalWork and number of threads such that all threads get the same numb..."];
  Node16 -> Node19 [id="edge17_Node000016_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node16 -> Node20 [id="edge18_Node000016_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CGeometry::GetElementColor\lGroupSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a90214a4a5c07eb87f9b7175549b8615f",tooltip="Get the group size used in element coloring."];
  Node16 -> Node21 [id="edge19_Node000016_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CGeometry::GetElementColoring",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a0958106e0ba545db5ff7fdcf7a8583ba",tooltip="Get the element coloring."];
  Node21 -> Node29 [id="edge20_Node000021_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="omp_get_max_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a2f7befecc7b1a4eaade8d81fa6524225",tooltip="Maximum number of threads available."];
  Node21 -> Node30 [id="edge21_Node000021_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CGeometry::SetNaturalElement\lColoring",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a150d5535645653c34a0da93e7b959090",tooltip="Force the natural (sequential) element coloring."];
  Node30 -> Node29 [id="edge22_Node000030_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node29 [id="edge23_Node000016_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node31 [id="edge24_Node000016_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="omp_init_lock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a3813cb266202aaf2950db02d93a2b00b",tooltip=" "];
  Node16 -> Node32 [id="edge25_Node000016_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CBaseMPIWrapper::Reduce",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBaseMPIWrapper.html#adfe0cc3203ae26745e12fb885af0629b",tooltip=" "];
  Node16 -> Node30 [id="edge26_Node000016_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node36 [id="edge27_Node000001_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="CSysMatrix::Initialize",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSysMatrix.html#ae17220ac30c2abcc7fdd3c5dc8f04571",tooltip="Initializes the sparse matrix."];
  Node36 -> Node17 [id="edge28_Node000036_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node36 -> Node25 [id="edge29_Node000036_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="container_details::\lAccessorImpl::data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcontainer__details_1_1AccessorImpl.html#a25b798e6041a085aa19399d0047b6a91",tooltip=" "];
  Node36 -> Node34 [id="edge30_Node000036_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node36 -> Node37 [id="edge31_Node000036_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="CConfig::GetDiscrete\l_Adjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab3928c4e6debcf50dcd0d38985f6980c",tooltip="Get the indicator whether we are solving an discrete adjoint problem."];
  Node36 -> Node38 [id="edge32_Node000036_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="CGeometry::GetEdgeToSparse\lPatternMap",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a23b0c8683a48437d049bdfd8ca05a216",tooltip="Get the edge to sparse pattern map."];
  Node36 -> Node45 [id="edge33_Node000036_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="CConfig::GetKind_Deform\l_Linear_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a8b36810235437e0319ccab9d7e0e5db0",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node36 -> Node46 [id="edge34_Node000036_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="CConfig::GetKind_DiscAdj\l_Linear_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a968a1fa9afc1e0df8bd1b5c9f6359ea8",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node36 -> Node47 [id="edge35_Node000036_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="CConfig::GetKind_Grad\l_Linear_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aaca6df27a6a89d5795c1ea514f67dfe8",tooltip="Get the kind of preconditioner for the gradient smoothing."];
  Node36 -> Node48 [id="edge36_Node000036_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="CConfig::GetKind_Linear\l_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa3e3027bc3231172777ee296694d5e63",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node36 -> Node49 [id="edge37_Node000036_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="CConfig::GetKind_SU2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a8a176b0a0c34db4d6dcc9e55e240e37b",tooltip="Get the kind of SU2 software component."];
  Node36 -> Node50 [id="edge38_Node000036_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="CConfig::GetLinear\l_Solver_ILU_n",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a5bfe7f8f9c3ab60aa2f7b33027dc8690",tooltip="Get the ILU fill-in level for the linear solver."];
  Node36 -> Node51 [id="edge39_Node000036_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="CConfig::GetLinear\l_Solver_Prec_Threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa5becd94866dc4463a2600bac129ce7a",tooltip="Get the number of threads per rank to use for ILU and LU_SGS preconditioners."];
  Node36 -> Node52 [id="edge40_Node000036_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="CGeometry::GetnEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#aba89cceede61b33426b2783385431f5b",tooltip="Get number of edges."];
  Node36 -> Node53 [id="edge41_Node000036_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="CCompressedSparsePattern\l::getNumNonZeros",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCCompressedSparsePattern.html#abbca9e2c2e9f3d3f568772f9edf0c0aa",tooltip=" "];
  Node36 -> Node54 [id="edge42_Node000036_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="CConfig::GetSmoothGradient",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab95541bd4f7a07fa46e26ea0638a656e",tooltip="Check if the gradient smoothing is active."];
  Node36 -> Node55 [id="edge43_Node000036_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="CGeometry::GetSparsePattern",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#ae9384368c5032d69b68a389fef8ded4b",tooltip="Get the sparse pattern of \"type\" with given level of fill."];
  Node36 -> Node59 [id="edge44_Node000036_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="CConfig::GetStructuralProblem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa89d8d244474c95cd3137adcbfafb1da",tooltip="Return true if a structural solver is in use."];
  Node36 -> Node60 [id="edge45_Node000036_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="CGeometry::GetTransposeSparse\lPatternMap",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a93838f0e718dd1c69b1a39e30083ad88",tooltip="Get the transpose of the (main, i.e 0 fill) sparse pattern (e.g. CSR becomes CSC)."];
  Node60 -> Node55 [id="edge46_Node000060_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node36 -> Node29 [id="edge47_Node000036_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node36 -> Node62 [id="edge48_Node000036_Node000062",color="steelblue1",style="solid",tooltip=" "];
  Node62 [id="Node000062",label="omp_get_thread_num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#aad63dd7e34961dbbd2e8774e7f6bc2d0",tooltip="Index of current thread, akin to MPI rank."];
  Node1 -> Node29 [id="edge49_Node000001_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node58 [id="edge50_Node000001_Node000058",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="C2DContainer::resize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC2DContainer.html#a39929b060c72565b4ab19c3a391bb8e6",tooltip="Request a change of size."];
  Node1 -> Node64 [id="edge51_Node000001_Node000064",color="steelblue1",style="solid",tooltip=" "];
  Node64 [id="Node000064",label="CVariable::Set_isVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVariable.html#a21e8d2e42c9a6d885066ee9dad5bd11d",tooltip="A virtual member."];
  Node1 -> Node65 [id="edge52_Node000001_Node000065",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="CFEASolver::Set_VertexElimination\lSchedule",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFEASolver.html#aa4832285a942f3b7f1fe21bbbfa53090",tooltip="Mitigation for an issue with Dirichlet boundary conditions and MPI, some ranks do not get enough of t..."];
  Node1 -> Node71 [id="edge53_Node000001_Node000071",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="CSolver::SetBaseClassPointer\lToNodes",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSolver.html#ad982896202dae6e41bfd3568f597cf46",tooltip="Call this method to set \"base_nodes\" after the \"nodes\" variable of the derived solver is instantiated..."];
  Node1 -> Node73 [id="edge54_Node000001_Node000073",color="steelblue1",style="solid",tooltip=" "];
  Node73 [id="Node000073",label="CVariable::SetMesh\l_Coord",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVariable.html#a35c5432a3dc93bb819600976fe1b1339",tooltip="A virtual member. Set the value of the undeformed coordinates."];
  Node1 -> Node74 [id="edge55_Node000001_Node000074",color="steelblue1",style="solid",tooltip=" "];
  Node74 [id="Node000074",label="CMeshSolver::SetMinMaxVolume",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCMeshSolver.html#adf042699d3abf46135568ef991b7dd44",tooltip="Compute the min and max volume of the elements in the domain."];
  Node74 -> Node19 [id="edge56_Node000074_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node74 -> Node62 [id="edge57_Node000074_Node000062",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node86 [id="edge58_Node000001_Node000086",color="steelblue1",style="solid",tooltip=" "];
  Node86 [id="Node000086",label="CMeshSolver::SetWallDistance",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCMeshSolver.html#a36e40967d3d79bd46eb90d85aefc3364",tooltip="Compute the min and max volume of the elements in the domain."];
  Node86 -> Node19 [id="edge59_Node000086_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node86 -> Node11 [id="edge60_Node000086_Node000011",color="steelblue1",style="solid",tooltip=" "];
}
