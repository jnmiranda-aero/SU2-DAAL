digraph "CRadP1Solver::CRadP1Solver"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CRadP1Solver::CRadP1Solver",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CConfig::GetDirectDiff",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1756760d4a98f886411a703d71bda3f2",tooltip="Get the direct differentation method."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CConfig::GetHeatSource",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a09d5030aae094e01b068224b49d63b98",tooltip="Get information about the volumetric heat source."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetInc_Temperature_Init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab42b9aeaf6b44dc414bb7ad751c40576",tooltip="Get the value of the initial temperature for incompressible flows."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetKind_P1_Init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a9fa6d6178acf1b1a575fd7e6f7438c54",tooltip="Get the Kind of P1 initialization method applied."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CConfig::GetKind_TimeInt\lScheme_Radiation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#af27d6f00a4eac4b19ff8c5fafea23150",tooltip="Get the kind of integration scheme (explicit or implicit) for the radiation equations."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CConfig::GetMultizone\l_Problem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#abafdda03255a7f71a9701ded02f6d231",tooltip="Get whether the simulation we are running is a multizone simulation."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CGeometry::GetnDim",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ace7f7fe876f629f5bd5f92d4805a1a4b",tooltip="Get number of coordinates."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CGeometry::GetnPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a275fb07cd99ab79d7a04b4862280169d",tooltip="Get number of points."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CGeometry::GetnPointDomain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ac84179060bbac1fe5e856ea3da850b6e",tooltip="Get number of real points (that belong to the domain)."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CConfig::GetTemperature\l_FreeStreamND",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#afa49e1ce7793a31cc572d957caffaef9",tooltip="Get the value of the non-dimensionalized freestream temperature."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CSysMatrix::Initialize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysMatrix.html#ae17220ac30c2abcc7fdd3c5dc8f04571",tooltip="Initializes the sparse matrix."];
  Node12 -> Node13 [id="edge12_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="computeStaticChunkSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a6a308c63005823370a2ffd6a82f3868f",tooltip="Compute a chunk size based on totalWork and number of threads such that all threads get the same numb..."];
  Node13 -> Node14 [id="edge13_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="roundUpDiv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a1c00281f52b615b111a4990b2d2a5157",tooltip="Integer division rounding up."];
  Node12 -> Node15 [id="edge14_Node000012_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="container_details::\lAccessorImpl::data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcontainer__details_1_1AccessorImpl.html#a25b798e6041a085aa19399d0047b6a91",tooltip=" "];
  Node12 -> Node16 [id="edge15_Node000012_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node16 -> Node17 [id="edge16_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#af7297d861dca86b45cf561b6ab642e8f",tooltip=" "];
  Node12 -> Node18 [id="edge17_Node000012_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CConfig::GetDiscrete\l_Adjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab3928c4e6debcf50dcd0d38985f6980c",tooltip="Get the indicator whether we are solving an discrete adjoint problem."];
  Node12 -> Node19 [id="edge18_Node000012_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CGeometry::GetEdgeToSparse\lPatternMap",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a23b0c8683a48437d049bdfd8ca05a216",tooltip="Get the edge to sparse pattern map."];
  Node19 -> Node20 [id="edge19_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="buildCSRPattern",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__Graph.html#ga368285d1c1ddac7a7798f7ffe7581aa2",tooltip="Build a sparse pattern from geometry information, of type FVM or FEM, for a given fill-level...."];
  Node19 -> Node21 [id="edge20_Node000019_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CCompressedSparsePattern\l::empty",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCCompressedSparsePattern.html#a1e38e3a6aba12be3be4804b1c132721d",tooltip=" "];
  Node12 -> Node28 [id="edge21_Node000012_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="CConfig::GetKind_Deform\l_Linear_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a8b36810235437e0319ccab9d7e0e5db0",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node12 -> Node29 [id="edge22_Node000012_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CConfig::GetKind_DiscAdj\l_Linear_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a968a1fa9afc1e0df8bd1b5c9f6359ea8",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node12 -> Node30 [id="edge23_Node000012_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CConfig::GetKind_Grad\l_Linear_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aaca6df27a6a89d5795c1ea514f67dfe8",tooltip="Get the kind of preconditioner for the gradient smoothing."];
  Node12 -> Node31 [id="edge24_Node000012_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CConfig::GetKind_Linear\l_Solver_Prec",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa3e3027bc3231172777ee296694d5e63",tooltip="Get the kind of preconditioner for the implicit solver."];
  Node12 -> Node32 [id="edge25_Node000012_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CConfig::GetKind_SU2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a8a176b0a0c34db4d6dcc9e55e240e37b",tooltip="Get the kind of SU2 software component."];
  Node12 -> Node33 [id="edge26_Node000012_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="CConfig::GetLinear\l_Solver_ILU_n",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a5bfe7f8f9c3ab60aa2f7b33027dc8690",tooltip="Get the ILU fill-in level for the linear solver."];
  Node12 -> Node34 [id="edge27_Node000012_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="CConfig::GetLinear\l_Solver_Prec_Threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa5becd94866dc4463a2600bac129ce7a",tooltip="Get the number of threads per rank to use for ILU and LU_SGS preconditioners."];
  Node12 -> Node35 [id="edge28_Node000012_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="CGeometry::GetnEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#aba89cceede61b33426b2783385431f5b",tooltip="Get number of edges."];
  Node12 -> Node36 [id="edge29_Node000012_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="CCompressedSparsePattern\l::getNumNonZeros",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCCompressedSparsePattern.html#abbca9e2c2e9f3d3f568772f9edf0c0aa",tooltip=" "];
  Node12 -> Node37 [id="edge30_Node000012_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="CConfig::GetSmoothGradient",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab95541bd4f7a07fa46e26ea0638a656e",tooltip="Check if the gradient smoothing is active."];
  Node12 -> Node38 [id="edge31_Node000012_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="CGeometry::GetSparsePattern",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#ae9384368c5032d69b68a389fef8ded4b",tooltip="Get the sparse pattern of \"type\" with given level of fill."];
  Node38 -> Node20 [id="edge32_Node000038_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node21 [id="edge33_Node000038_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node43 [id="edge34_Node000012_Node000043",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="CConfig::GetStructuralProblem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa89d8d244474c95cd3137adcbfafb1da",tooltip="Return true if a structural solver is in use."];
  Node12 -> Node44 [id="edge35_Node000012_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="CGeometry::GetTransposeSparse\lPatternMap",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCGeometry.html#a93838f0e718dd1c69b1a39e30083ad88",tooltip="Get the transpose of the (main, i.e 0 fill) sparse pattern (e.g. CSR becomes CSC)."];
  Node44 -> Node38 [id="edge36_Node000044_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node41 [id="edge37_Node000012_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="omp_get_max_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a2f7befecc7b1a4eaade8d81fa6524225",tooltip="Maximum number of threads available."];
  Node12 -> Node46 [id="edge38_Node000012_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="omp_get_thread_num",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#aad63dd7e34961dbbd2e8774e7f6bc2d0",tooltip="Index of current thread, akin to MPI rank."];
  Node12 -> Node47 [id="edge39_Node000012_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="CCompressedSparsePattern\l::outerPtr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCCompressedSparsePattern.html#afad476085646cd0bd3354ab94ec74439",tooltip=" "];
  Node47 -> Node15 [id="edge40_Node000047_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node21 [id="edge41_Node000047_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node14 [id="edge42_Node000012_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node48 [id="edge43_Node000001_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="pow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__SIMD.html#ga768cbdeba8e4567257959378fba27f17",tooltip=" "];
  Node1 -> Node42 [id="edge44_Node000001_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="C2DContainer::resize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC2DContainer.html#a39929b060c72565b4ab19c3a391bb8e6",tooltip="Request a change of size."];
  Node1 -> Node49 [id="edge45_Node000001_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="CSolver::SetBaseClassPointer\lToNodes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#ad982896202dae6e41bfd3568f597cf46",tooltip="Call this method to set \"base_nodes\" after the \"nodes\" variable of the derived solver is instantiated..."];
  Node49 -> Node50 [id="edge46_Node000049_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="CSolver::GetBaseClassPointer\lToNodes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#ab2e0e1bb48db9207d25bc2679b55439f",tooltip="Pure virtual function, all derived solvers MUST implement a method returning their \"nodes\"."];
  Node1 -> Node51 [id="edge47_Node000001_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="SU2_TYPE::SetDerivative",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceSU2__TYPE.html#ab0b85db43e1495ffbb0f2c823f24935e",tooltip="Set the derivative value of the datatype (needs to be implemented for each new type)."];
  Node1 -> Node52 [id="edge48_Node000001_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="CRadP1Solver::SetTemperature_Inf",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCRadP1Solver.html#abd3d739d1a1914377296392a8736b6fd",tooltip="Set the freestream temperature."];
  Node1 -> Node53 [id="edge49_Node000001_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="CRadSolver::SetVolumetric\lHeatSource",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCRadSolver.html#aa3a4be300964d302d7c39a90f746e638",tooltip="Set the volumetric heat source."];
  Node53 -> Node54 [id="edge50_Node000053_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="CPoint::GetCoord",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#ab16c29dd03911529cd73bf467c313179",tooltip="Get the coordinates dor the control volume."];
  Node53 -> Node55 [id="edge51_Node000053_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="CConfig::GetHeatSource_Axes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a0bdd68ffac81ccd702a2f2d7ff7bd6f8",tooltip="Get the radius of the ellipsoid that introduces a volumetric heat source."];
  Node53 -> Node56 [id="edge52_Node000053_Node000056",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="CConfig::GetHeatSource\l_Center",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a23240e7743148f8f772d2a6f2ccf3bf6",tooltip="Get the position of the center of the volumetric heat source."];
  Node53 -> Node57 [id="edge53_Node000053_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="CConfig::GetHeatSource\l_Rot_Z",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a41465da2367e3b06f50412243978eb19",tooltip="Get the rotation angle of the volumetric heat source in axis Z."];
  Node53 -> Node48 [id="edge54_Node000053_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node58 [id="edge55_Node000053_Node000058",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="CRadVariable::ResetVol\l_HeatSource",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCRadVariable.html#a3204d7216f80143f454744fba50ebe5f",tooltip="Reset as false a volumetric heat source for all points."];
  Node53 -> Node59 [id="edge56_Node000053_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="CRadVariable::SetVol\l_HeatSource",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCRadVariable.html#af17e3b0097d7589575d181b2f1501a19",tooltip="Set as true a volumetric heat source for point iPoint."];
}
