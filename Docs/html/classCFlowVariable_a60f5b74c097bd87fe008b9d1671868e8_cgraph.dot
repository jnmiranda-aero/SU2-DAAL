digraph "CFlowVariable::CFlowVariable"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CFlowVariable::CFlowVariable",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Constructor of the class."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CConfig::GetContinuous\l_Adjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1eb754aa86fb8154bc9eefea616b7cf9",tooltip="Determines if problem is adjoint."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CConfig::GetKind_ConvNum\lScheme_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ac664a20b0a09ab14844dc6326290f0a0",tooltip="Get the kind of convective numerical scheme for the flow equations (centered or upwind)."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetKind_SlopeLimit_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a31504bfdad401a8879a9e0a121320f96",tooltip="Get the method for limiting the spatial gradients."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetLeastSquares\lRequired",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a331e1d20385c17b59007f27f7c41ceab",tooltip="Get flag for whether a least-squares gradient method is being applied."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CConfig::GetMG_CorrecSmooth",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a14fdc00477b0b4a4268785c9c5374be1",tooltip="Get the number of implicit Jacobi smoothings of the correction in a multigrid strategy."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CConfig::GetMultizone\l_Problem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#abafdda03255a7f71a9701ded02f6d231",tooltip="Get whether the simulation we are running is a multizone simulation."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CConfig::GetMUSCL_Flow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a97ba000591a72e4d8f0fc71bc75bd38a",tooltip="Get if the upwind scheme used MUSCL or not."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CConfig::GetnMGLevels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a15a61a6f9a1d415c3509018f4916c5c1",tooltip="Get the number of multigrid levels."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CConfig::GetReconstruction\lGradientRequired",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a350466e9cc76639fb07c59ac43288bb8",tooltip="Get flag for whether a second gradient calculation is required for upwind reconstruction alone."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CConfig::GetTime_Marching",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ac47e04d76ce865893a94dcedd3c9b6a5",tooltip="Provides information about the time integration, and change the write in the output files information..."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CConfig::GetViscous",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ad59acb5f80aaddccaa0f2f5bef3e3e78",tooltip="Determines if problem is viscous."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="C2DContainer::resize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC2DContainer.html#a39929b060c72565b4ab19c3a391bb8e6",tooltip="Request a change of size."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="C3DContainerDecorator\l::resize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC3DContainerDecorator.html#a8c74bf28bf8d6882e14635fecb0d5e82",tooltip=" "];
  Node14 -> Node15 [id="edge14_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="C3DContainerDecorator\l::cols",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC3DContainerDecorator.html#a27e2d1c9d2121ddcf201b7a6e29b3004",tooltip=" "];
  Node14 -> Node16 [id="edge15_Node000014_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="C3DContainerDecorator\l::length",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC3DContainerDecorator.html#a50d183db869393fe41fe144eff3e18f6",tooltip=" "];
  Node14 -> Node17 [id="edge16_Node000014_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="C3DContainerDecorator\l::rows",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC3DContainerDecorator.html#a517ccb480bb1d1e919f5dc562d4574c6",tooltip=" "];
  Node1 -> Node18 [id="edge17_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CVariable::Set_BGSSolution_k",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVariable.html#aa47456564bac33106a460be201d4c843",tooltip="Set the value of the solution in the previous BGS subiteration."];
  Node18 -> Node19 [id="edge18_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="container_details::\lAccessorImpl::data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcontainer__details_1_1AccessorImpl.html#a25b798e6041a085aa19399d0047b6a91",tooltip=" "];
  Node18 -> Node20 [id="edge19_Node000018_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="parallelCopy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a3af8b37ed645164f4c3441fa75e5fa76",tooltip="Copy data from one array-like object to another in parallel."];
  Node18 -> Node21 [id="edge20_Node000018_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="C2DContainer::size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classC2DContainer.html#a8278113dbcf54123f9852e7e44583759",tooltip=" "];
}
