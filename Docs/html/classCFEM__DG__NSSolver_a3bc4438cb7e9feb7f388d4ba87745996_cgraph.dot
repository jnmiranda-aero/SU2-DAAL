digraph "CFEM_DG_NSSolver::BC_Euler_Wall"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CFEM_DG_NSSolver::BC\l_Euler_Wall",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Impose via the residual the Euler wall boundary condition."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CFEM_DG_EulerSolver\l::BoundaryStates_Euler_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a5d32e85923daf35ff0126d5f716ff9ec",tooltip="Function, which computes the boundary states in the integration points of the boundary face by applyi..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CFEMStandardElementBase\l::GetNIntegration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardElementBase.html#aa5ad06a05a1d7b66bccca65521168a3b",tooltip="Function, which makes available the number of integration points for this standard element."];
  Node1 -> Node3 [id="edge3_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge4_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetSizeMatMulPadding",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a82d3faf3154d13bf694af4d818ef91c7",tooltip="Function to make available the matrix size in vectorization in order to optimize the gemm performance..."];
  Node1 -> Node5 [id="edge5_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CFEM_DG_EulerSolver\l::LeftStatesIntegrationPoints\lBoundaryFace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a79debb4e2ee70feac94e9a420705dbf9",tooltip="Function, which computes the left state of a boundary face."];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CBlasStructure::gemm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBlasStructure.html#ad282634317e0a32bce7896e2ddc40043",tooltip="Function, which carries out a dense matrix product. It is a limited version of the BLAS gemm function..."];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CConfig::GEMM_Tick",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a2843524e5245c2c6128acdd20e746f4a",tooltip="Start the timer for profiling subroutines."];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CBaseMPIWrapper::Wtime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#adcf32aa628d4b515e8835bc5c56fbf08",tooltip=" "];
  Node8 -> Node9 [id="edge9_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="omp_get_wtime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a649bd48ab038a72108f11f5a85316266",tooltip="Return the wall time."];
  Node6 -> Node10 [id="edge10_Node000006_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CConfig::GEMM_Tock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a695fe18134532a43b328845dd0cce3bb",tooltip="Stop the timer for the GEMM profiling and store results."];
  Node10 -> Node8 [id="edge11_Node000010_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node11 [id="edge12_Node000005_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CFEMStandardBoundaryFace\l::GetBasisFaceIntegration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardBoundaryFace.html#a283dc8babad462022e4621afe0251929",tooltip="Function, which makes available the face basis functions in the integration points."];
  Node5 -> Node12 [id="edge13_Node000005_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CFEMStandardBoundaryFace\l::GetNDOFsFace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEMStandardBoundaryFace.html#a26266f4d68d95c22bbb949fe6d8f5db6",tooltip="Function, which makes available the number of DOFs of the face."];
  Node5 -> Node3 [id="edge14_Node000005_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge15_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CFEM_DG_EulerSolver\l::MetaDataChunkOfElem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#ad358fa06c0e5b2762ad3258eb2c677e2",tooltip="Template function, which determines some meta data for the chunk of elements/faces that must be treat..."];
}
