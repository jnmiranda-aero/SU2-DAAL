digraph "CVariable::Set_Solution_time_n1"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="CVariable::Set_Solution\l_time_n1",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Set the variable solution at time n-1."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CSolver::CompleteComms",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#a6891c839827efbebdcbf9a349f4da92c",tooltip="Routine to complete the set of non-blocking communications launched by InitiateComms() and unpacking ..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CAdjEulerSolver::CAdjEuler\lSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjEulerSolver.html#a0a739888df9436d4707665d152a7af1a",tooltip=" "];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CAdjNSSolver::CAdjNSSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjNSSolver.html#a323f1dc7c0b9fe00d1911eeeea365d46",tooltip=" "];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CAdjTurbSolver::CAdjTurb\lSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjTurbSolver.html#a621bdae0b081f25a67425cc037cd90a2",tooltip=" "];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CHeatSolver::CHeatSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCHeatSolver.html#a89c9ece2b98a950e53f4ee9482968186",tooltip="Constructor of the class."];
  Node2 -> Node7 [id="edge6_Node000002_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CDriverBase::Communicate\lMeshDisplacements",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__PySU2.html#ga28e8e41ab6223500b17b656779574d39",tooltip="Communicate the boundary mesh displacements."];
  Node2 -> Node8 [id="edge7_Node000002_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CFVMFlowSolverBase\l::CompleteImplicitIteration_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#a3eb0fbabf1ce42ccc0fe626473800e09",tooltip="Generic implementation to complete an implicit iteration, i.e. update the solution."];
  Node2 -> Node9 [id="edge8_Node000002_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="detail::computeGradients\lGreenGauss",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__FvmAlgos.html#ga031dfb21c1777c986ae93d716ec4568b",tooltip="Compute the gradient of a field using the Green-Gauss theorem."];
  Node2 -> Node10 [id="edge9_Node000002_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="detail::computeGradients\lLeastSquares",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__FvmAlgos.html#ga186a32bf8b211a50432fe55a6a608c21",tooltip="Compute the gradient of a field using inverse-distance-weighted or unweighted Least-Squares approxima..."];
  Node2 -> Node11 [id="edge10_Node000002_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="computeLimiters_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__FvmAlgos.html#ga4639562695f9dc19f098e6d00fcacde1",tooltip="Generic limiter computation for methods based on one limiter value per point (as opposed to one per e..."];
  Node2 -> Node12 [id="edge11_Node000002_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CSpeciesSolver::CSpecies\lSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSpeciesSolver.html#a3a7863355bb316fe760afeb1db4ca66c",tooltip="Constructor of the class."];
  Node2 -> Node13 [id="edge12_Node000002_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CTransLMSolver::CTransLMSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTransLMSolver.html#a20abc5682fb22268537da1eac0abf24d",tooltip=" "];
  Node2 -> Node14 [id="edge13_Node000002_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CTurbSASolver::CTurbSASolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTurbSASolver.html#a06a8b09d1563dd48f364ff6e97c25cd8",tooltip="Constructor."];
  Node2 -> Node15 [id="edge14_Node000002_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CTurbSSTSolver::CTurbSSTSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTurbSSTSolver.html#a84beba65418c7c2ca4f4843b989b360a",tooltip="Constructor."];
  Node2 -> Node16 [id="edge15_Node000002_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CMeshSolver::DeformMesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMeshSolver.html#a573e4ddd63b680f5705f402ec317820b",tooltip="Grid deformation using the linear elasticity equations."];
  Node2 -> Node17 [id="edge16_Node000002_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CFVMFlowSolverBase\l::Explicit_Iteration_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#ac30c9255150f29da2915a85264a1676c",tooltip="Generic implementation of explicit iterations with a preconditioner."];
  Node2 -> Node18 [id="edge17_Node000002_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CAdjEulerSolver::Explicit\lEuler_Iteration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjEulerSolver.html#ac6851acd72ffdbf5299680d5d92e065e",tooltip="Update the solution using a explicit Euler scheme."];
  Node2 -> Node19 [id="edge18_Node000002_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CAdjEulerSolver::Explicit\lRK_Iteration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjEulerSolver.html#a853b9218167a682db73ca73c0fccc2cc",tooltip="Update the solution using a Runge-Kutta strategy."];
  Node2 -> Node20 [id="edge19_Node000002_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CAdjEulerSolver::Implicit\lEuler_Iteration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjEulerSolver.html#ab35fe7a0b2f840506e91d49961e07485",tooltip="Update the solution using an implicit solver."];
  Node2 -> Node21 [id="edge20_Node000002_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CAdjTurbSolver::Implicit\lEuler_Iteration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjTurbSolver.html#a119fd6cc599337fd229174474d69f0fb",tooltip="Update the solution using an implicit solver."];
  Node2 -> Node22 [id="edge21_Node000002_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CRadP1Solver::ImplicitEuler\l_Iteration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCRadP1Solver.html#a23716727a079c099d449da9befa86696",tooltip="Update the solution using an implicit solver."];
  Node2 -> Node23 [id="edge22_Node000002_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CAdjEulerSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjEulerSolver.html#a4bc9fada01b433e9194d4c0d67adbbbd",tooltip="Load a solution from a restart file."];
  Node2 -> Node24 [id="edge23_Node000002_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CSpeciesSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSpeciesSolver.html#a40ecea72824a266fcda6347d08a4fcea",tooltip="Load a solution from a restart file."];
  Node2 -> Node25 [id="edge24_Node000002_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="CTransLMSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTransLMSolver.html#ab6989abf9b51cfb0b243b1bf98b48a16",tooltip="Load a solution from a restart file."];
  Node2 -> Node26 [id="edge25_Node000002_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="CBaselineSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaselineSolver.html#aa5fad3af8c5b48950679d5c5a3a91ec4",tooltip="Load a solution from a restart file."];
  Node2 -> Node27 [id="edge26_Node000002_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="CFEASolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEASolver.html#ac693299e88dfc4daaf1b2f410ec8351d",tooltip="Load a solution from a restart file."];
  Node2 -> Node28 [id="edge27_Node000002_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="CHeatSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCHeatSolver.html#a0cc2cf63a1cd34b15be77cf3233beaae",tooltip="Load a solution from a restart file."];
  Node2 -> Node29 [id="edge28_Node000002_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CMeshSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMeshSolver.html#a7049d436ca386344acd2424eceb39ef4",tooltip="Load a solution from a restart file."];
  Node2 -> Node30 [id="edge29_Node000002_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CRadSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCRadSolver.html#a9f64999fe5bfcb69fb4349d00d6d8ef5",tooltip="Load a solution from a restart file."];
  Node2 -> Node31 [id="edge30_Node000002_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CTurbSolver::LoadRestart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTurbSolver.html#a7b62bcdb84f3345f560a6110905d7fb3",tooltip="Load a solution from a restart file."];
  Node2 -> Node32 [id="edge31_Node000002_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CFVMFlowSolverBase\l::LoadRestart_impl",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCFVMFlowSolverBase.html#a7cf80881bcda9a08b9c8cf78e7a3bc8d",tooltip="General implementation to load a flow solution from a restart file."];
  Node2 -> Node34 [id="edge32_Node000002_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="CMeshSolver::RestartOldGeometry",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMeshSolver.html#accd7241ab78f3ccd19e918ccda4fb6e3",tooltip="Load the geometries at the previous time states n and nM1."];
  Node34 -> Node29 [id="edge33_Node000034_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node35 [id="edge34_Node000002_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="CAdjEulerSolver::SetCentered\l_Dissipation_Sensor",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCAdjEulerSolver.html#af1b72ed76900f821d2f51942cb4252db",tooltip="Compute the sensor for higher order dissipation control in rotating problems."];
  Node2 -> Node38 [id="edge35_Node000002_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="CFVMFlowSolverBase\l::SetCentered_Dissipation\l_Sensor_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#afb9ed896e3882658d23042a5ee15c9d2",tooltip="Compute the dissipation sensor for centered schemes."];
  Node2 -> Node39 [id="edge36_Node000002_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="CSpeciesFlameletSolver\l::SetInitialCondition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSpeciesFlameletSolver.html#ae9d618734213fca7565d4290a4a36f68",tooltip="Set the initial condition for the scalar transport problem."];
  Node2 -> Node40 [id="edge37_Node000002_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="CAdjEulerSolver::SetInitial\lCondition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjEulerSolver.html#aeefdb4354432a35e1fc5c7db5a5f8043",tooltip="Set the initial condition for the Euler Equations."];
  Node2 -> Node41 [id="edge38_Node000002_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="CHeatSolver::SetInitialCondition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCHeatSolver.html#a1faf13aa03d2eed01366294a83622cab",tooltip="Set the initial condition for the FEM structural problem."];
  Node2 -> Node42 [id="edge39_Node000002_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="CFVMFlowSolverBase\l::SetMax_Eigenvalue_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#adc3a96a8ca25902058864c18b533192d",tooltip="Compute the max eigenvalue, gemeric implementation."];
  Node2 -> Node43 [id="edge40_Node000002_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="CNEMOEulerSolver::SetPressure\lDiffusionSensor",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCNEMOEulerSolver.html#ae3b9dab24a842ae04b745c5303ec52aa",tooltip="Compute the Pressure sensor for NEMO schemes."];
  Node2 -> Node47 [id="edge41_Node000002_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="CEulerSolver::SetUndivided\l_Laplacian",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCEulerSolver.html#a82314e58faf4d98a5f3733f43d64de92",tooltip="Compute the undivided laplacian for the solution."];
  Node2 -> Node51 [id="edge42_Node000002_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="CSolver::SetUndivided\l_Laplacian",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCSolver.html#ae9fa6bf0e3ef0dff07dd85e0a87eef4d",tooltip="Compute the undivided laplacian for the solution variables."];
  Node2 -> Node55 [id="edge43_Node000002_Node000055",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="CEulerSolver::SetUpwind\l_Ducros_Sensor",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCEulerSolver.html#aad67b818e2f5c133118d2a4cca7845f3",tooltip="Compute Ducros Sensor for Roe Dissipation."];
  Node1 -> Node56 [id="edge44_Node000001_Node000056",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="CDiscAdjSolver::ExtractAdjoint\l_Solution",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDiscAdjSolver.html#a197e13969a8007038486acaabc5902c8",tooltip="Sets the adjoint values of the input variables of the flow (+turb.) iteration after tape has been eva..."];
  Node1 -> Node57 [id="edge45_Node000001_Node000057",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="CDiscAdjFluidIteration\l::Preprocess",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDiscAdjFluidIteration.html#a9289dd9216cff8cca78b6c8224db4ff2",tooltip="Preprocessing to prepare for an iteration of the physics."];
  Node1 -> Node34 [id="edge46_Node000001_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node58 [id="edge47_Node000001_Node000058",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="CMeshSolver::SetDualTime_Mesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMeshSolver.html#a2421c0f27e98bf3d9d83bf8ed5ad68e2",tooltip="Move the mesh in time."];
  Node1 -> Node59 [id="edge48_Node000001_Node000059",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="CIntegration::SetDualTime\l_Solver",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCIntegration.html#af5925ab429e81961af5f79740055e48e",tooltip="Save the solution at different time steps, and reset certain fields for the next timestep."];
  Node59 -> Node60 [id="edge49_Node000059_Node000060",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="CAdjFluidIteration\l::Update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjFluidIteration.html#aaa4380e135f019835555c79cb4cbece9",tooltip="Updates the containers for the adjoint fluid system."];
  Node1 -> Node40 [id="edge50_Node000001_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node41 [id="edge51_Node000001_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node64 [id="edge52_Node000001_Node000064",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node64 [id="Node000064",label="CSinglezoneDriver::\lSetInitialMesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSinglezoneDriver.html#aec7315f833718d3f1ac6c2fb2b2a661b",tooltip="Perform a mesh deformation as initial condition."];
  Node1 -> Node65 [id="edge53_Node000001_Node000065",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="CFVMFlowSolverBase\l\< CEulerVariable, ENUM\l_REGIME::COMPRESSIBLE\l \>::SetPrimitive_Gradient_GG",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#ae26d178e6483b0ba6bad01318530fff9",tooltip="Compute the gradient of the primitive variables using Green-Gauss method, and stores the result in th..."];
}
