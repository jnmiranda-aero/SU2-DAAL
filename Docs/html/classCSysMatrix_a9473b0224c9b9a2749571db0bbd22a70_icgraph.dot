digraph "CSysMatrix::DeleteValsRowi"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="CSysMatrix::DeleteValsRowi",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Deletes the values of the row i of the sparse matrix."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CHeatSolver::BC_Conjugate\lHeat_Interface",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCHeatSolver.html#a557bceb05d8bf8cb7ea1fb03d4690e06",tooltip="Impose the (received) conjugate heat variables."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CIncNSSolver::BC_Conjugate\lHeat_Interface",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCIncNSSolver.html#a20df3bf692b483420474f500c981584f",tooltip="Impose the (received) conjugate heat variables."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CFVMFlowSolverBase\l::BC_Custom",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#a51801a9f54e9b4184f58a7becda5bd04",tooltip="Impose a custom or verification boundary condition."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CAdjNSSolver::BC_HeatFlux_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjNSSolver.html#aac064a699355df483ca48c40e7c50675",tooltip="Impose via the residual or brute force the Navier-Stokes adjoint boundary condition (heat flux)."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CAdjTurbSolver::BC\l_HeatFlux_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjTurbSolver.html#a1a53831ac325af943189f6355dcdc77a",tooltip="Impose the Navier-Stokes turbulent adjoint boundary condition."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CTurbSASolver::BC_HeatFlux_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTurbSASolver.html#af459752616f30724d593fd5701fafa00",tooltip="Impose the Navier-Stokes wall boundary condition."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CTurbSASolver::BC_Isothermal_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTurbSASolver.html#a4637e7b91db510ddcacfafd01817aafa",tooltip="Impose the Navier-Stokes wall boundary condition."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CTurbSSTSolver::BC\l_HeatFlux_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTurbSSTSolver.html#ab12b85db2fa0f335bd94732bd450a3c7",tooltip="Impose the Navier-Stokes wall boundary condition."];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CTurbSSTSolver::BC\l_Isothermal_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTurbSSTSolver.html#aacdfb401c6637c3e4e99b335b5859384",tooltip="Impose the Navier-Stokes wall boundary condition."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CNEMONSSolver::BC_HeatFlux\lCatalytic_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMONSSolver.html#a1d9ff4495625b00bfbf46b3ad87c4167",tooltip="Impose a constant heat-flux condition at the wall."];
  Node11 -> Node12 [id="edge11_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CNEMONSSolver::BC_HeatFlux_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMONSSolver.html#aa52e178cc5f052026e73735d6e9b847f",tooltip="Impose a constant heat-flux condition at the wall."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CNEMONSSolver::BC_HeatFlux\lNonCatalytic_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMONSSolver.html#acd1bedbd2a7588cfa7a86831d4c9dfc9",tooltip="Impose a constant heat-flux condition at the wall."];
  Node13 -> Node12 [id="edge13_Node000013_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge14_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CSpeciesSolver::BC\l_Inlet",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSpeciesSolver.html#aca27a19a7953503e2ff2ec8e06c838ee",tooltip="Impose the inlet boundary condition."];
  Node14 -> Node15 [id="edge15_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CSpeciesFlameletSolver\l::BC_Inlet",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSpeciesFlameletSolver.html#a5224ee97bd1664cd1768bdc1d9fd375c",tooltip="Impose the inlet boundary condition."];
  Node1 -> Node16 [id="edge16_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CAdjNSSolver::BC_Isothermal_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjNSSolver.html#a159875229feba5b14c433990e5a89d60",tooltip="Impose via the residual or brute force the Navier-Stokes adjoint boundary condition (heat flux)."];
  Node1 -> Node17 [id="edge17_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CAdjTurbSolver::BC\l_Isothermal_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjTurbSolver.html#a90a20eaa12710555aede53fa56bca0df",tooltip="Impose an isothermal wall boundary condition (no-slip)."];
  Node1 -> Node18 [id="edge18_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CNEMONSSolver::BC_Isothermal\lNonCatalytic_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMONSSolver.html#a1c4746b9e1e0c7232f1bd06535c22b14",tooltip="Impose the Navier-Stokes boundary condition (strong)."];
  Node18 -> Node19 [id="edge19_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CNEMONSSolver::BC_Isothermal_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMONSSolver.html#a8c6c80e6e8f2aed2ff80c78a8e5aec9e",tooltip="Generic implementation of the isothermal wall."];
  Node18 -> Node20 [id="edge20_Node000018_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CNEMONSSolver::BC_Isothermal\lCatalytic_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNEMONSSolver.html#ae3d2c5f1c94cb3d01b7f351ce3105f31",tooltip="Impose the Navier-Stokes boundary condition (strong)."];
  Node20 -> Node19 [id="edge21_Node000020_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge22_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CSpeciesSolver::BC\l_Outlet",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSpeciesSolver.html#a548512ab2846aa9efea881ad958db6c0",tooltip="Impose the outlet boundary condition."];
  Node1 -> Node22 [id="edge23_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CSolver::CompletePeriodic\lComms",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#a6b9c3e0290bce84f14ad3fde8ffa8658",tooltip="Routine to complete the set of non-blocking periodic communications launched by InitiatePeriodicComms..."];
  Node22 -> Node23 [id="edge24_Node000022_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CFVMFlowSolverBase\l::BC_Periodic",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#a24ebe4d462bbef07ec992c8c4d3e3aa3",tooltip="Impose a periodic boundary condition by summing contributions from the complete control volume."];
  Node22 -> Node24 [id="edge25_Node000022_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CHeatSolver::CHeatSolver",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCHeatSolver.html#a89c9ece2b98a950e53f4ee9482968186",tooltip="Constructor of the class."];
  Node22 -> Node25 [id="edge26_Node000022_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="CFVMFlowSolverBase\l::CompleteImplicitIteration_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#a3eb0fbabf1ce42ccc0fe626473800e09",tooltip="Generic implementation to complete an implicit iteration, i.e. update the solution."];
  Node22 -> Node26 [id="edge27_Node000022_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="detail::computeGradients\lGreenGauss",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__FvmAlgos.html#ga031dfb21c1777c986ae93d716ec4568b",tooltip="Compute the gradient of a field using the Green-Gauss theorem."];
  Node22 -> Node27 [id="edge28_Node000022_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="detail::computeGradients\lLeastSquares",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__FvmAlgos.html#ga186a32bf8b211a50432fe55a6a608c21",tooltip="Compute the gradient of a field using inverse-distance-weighted or unweighted Least-Squares approxima..."];
  Node22 -> Node28 [id="edge29_Node000022_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="computeLimiters_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__FvmAlgos.html#ga4639562695f9dc19f098e6d00fcacde1",tooltip="Generic limiter computation for methods based on one limiter value per point (as opposed to one per e..."];
  Node22 -> Node29 [id="edge30_Node000022_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CFVMFlowSolverBase\l\< CEulerVariable, ENUM\l_REGIME::COMPRESSIBLE\l \>::HybridParallelInitialization",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#add3f32c09f3bb0032ed4cc4144ec8b10",tooltip="Initialize thread parallel variables."];
  Node22 -> Node30 [id="edge31_Node000022_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CFVMFlowSolverBase\l::SetCentered_Dissipation\l_Sensor_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#afb9ed896e3882658d23042a5ee15c9d2",tooltip="Compute the dissipation sensor for centered schemes."];
  Node22 -> Node31 [id="edge32_Node000022_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CFVMFlowSolverBase\l::SetMax_Eigenvalue_impl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFVMFlowSolverBase.html#adc3a96a8ca25902058864c18b533192d",tooltip="Compute the max eigenvalue, gemeric implementation."];
  Node22 -> Node32 [id="edge33_Node000022_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CEulerSolver::SetUndivided\l_Laplacian",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCEulerSolver.html#a82314e58faf4d98a5f3733f43d64de92",tooltip="Compute the undivided laplacian for the solution."];
  Node32 -> Node33 [id="edge34_Node000032_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="CEulerSolver::CommonPreprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCEulerSolver.html#a0d6f93feba8d6aad18edf3594213042b",tooltip="Preprocessing actions common to the Euler and NS solvers."];
  Node33 -> Node34 [id="edge35_Node000033_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="CEulerSolver::Preprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCEulerSolver.html#ab08b6aa95648e7ab973f9f247fe54b31",tooltip="Compute primitive variables and their gradients."];
  Node33 -> Node35 [id="edge36_Node000033_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="CNSSolver::Preprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCNSSolver.html#af83e7cb773797239cdc98fc4d202d32f",tooltip="Restart residual and compute gradients."];
  Node22 -> Node36 [id="edge37_Node000022_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="CSolver::SetUndivided\l_Laplacian",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#ae9fa6bf0e3ef0dff07dd85e0a87eef4d",tooltip="Compute the undivided laplacian for the solution variables."];
  Node36 -> Node37 [id="edge38_Node000036_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="CIncEulerSolver::CommonPreprocessing",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCIncEulerSolver.html#ac50d02e914c4337e73d2c4878b12c59d",tooltip="Preprocessing actions common to the Euler and NS solvers."];
  Node37 -> Node38 [id="edge39_Node000037_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="CIncEulerSolver::Preprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCIncEulerSolver.html#aac33066eba6bdbe02693afb992e307d8",tooltip="Compute primitive variables and their gradients."];
  Node36 -> Node40 [id="edge40_Node000036_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="CAdjEulerSolver::Preprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjEulerSolver.html#a64baf8c7af6006bdc4ad0919f7c2507a",tooltip="Initialize the residual vectors."];
  Node36 -> Node41 [id="edge41_Node000036_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="CAdjNSSolver::Preprocessing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCAdjNSSolver.html#a0669f6fb8ef7cd7800d151d4aff7d3f6",tooltip="Restart residual and compute gradients."];
  Node1 -> Node42 [id="edge42_Node000001_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="CTurbSolver::Impose\l_Fixed_Values",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCTurbSolver.html#a35849b2e45ccdde346861286955981cf",tooltip="Impose fixed values to turbulence quantities."];
  Node1 -> Node43 [id="edge43_Node000001_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="CVolumetricMovement\l::SetBoundaryDisplacements",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a3555067b3e76a3d6fed5d78a21a776ea",tooltip="Check the boundary vertex that are going to be moved."];
  Node43 -> Node44 [id="edge44_Node000043_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="CVolumetricMovement\l::SetVolume_Deformation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a96c9dadafe051a2479ef4ec4b51adb04",tooltip="Grid deformation using the spring analogy method."];
  Node44 -> Node45 [id="edge45_Node000044_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="CGradientSmoothingSolver\l::ApplyGradientSmoothingDV",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGradientSmoothingSolver.html#a443fb04934697664cd7defae114e6ef4",tooltip="All steps required for smoothing the whole system on DV level in an iterative way."];
  Node44 -> Node46 [id="edge46_Node000044_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="CDeformationDriver\l::DeformLegacy",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCDeformationDriver.html#a3a78157ae57334880516fa9b84b81c0a",tooltip="Mesh deformation based on legacy implementation."];
  Node44 -> Node50 [id="edge47_Node000044_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="CDiscAdjDeformationDriver\l::DerivativeTreatment_MeshSensitivity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCDiscAdjDeformationDriver.html#af5515939a522d7ce41d1ba12be83c55b",tooltip="Treatment of derivatives with the Sobolev smoothing solver."];
  Node50 -> Node51 [id="edge48_Node000050_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="CDiscAdjDeformationDriver::Run",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCDiscAdjDeformationDriver.html#adb51f9096356607d6f48c05891dec0cb",tooltip="Launch the driver computation."];
  Node44 -> Node53 [id="edge49_Node000044_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="CDriver::PreprocessDynamicMesh",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCDriver.html#a1c1a52f57d73376cd2e95e730274a6ae",tooltip="GridMovement_Preprocessing."];
  Node44 -> Node51 [id="edge50_Node000044_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node55 [id="edge51_Node000044_Node000055",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="CIteration::SetGrid\l_Movement",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classCIteration.html#a7b36785762f6b0c214569b185b858b6c",tooltip="Updates the positions and grid velocities for dynamic meshes between physical time steps."];
  Node55 -> Node53 [id="edge52_Node000055_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node78 [id="edge53_Node000001_Node000078",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node78 [id="Node000078",label="CVolumetricMovement\l::SetDomainDisplacements",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVolumetricMovement.html#a34e2da985ad10e2db2d7b3753f0569c3",tooltip="Check the domain points vertex that are going to be moved."];
  Node78 -> Node44 [id="edge54_Node000078_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
