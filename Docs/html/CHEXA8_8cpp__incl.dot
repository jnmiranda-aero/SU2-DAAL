digraph "Common/src/geometry/elements/CHEXA8.cpp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Common/src/geometry\l/elements/CHEXA8.cpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Definition of 8-node hexa element with 8 Gauss points."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="../../../include/geometry\l/elements/CElement.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CElement_8hpp.html",tooltip="Main header of the Finite Element structure declaring the abstract interface and the available finite..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CGaussVariable.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CGaussVariable_8hpp.html",tooltip="Light-weight class to store Gaussian point information."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="../../containers/C2DContainer.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$C2DContainer_8hpp.html",tooltip="A templated vector/matrix object."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="../toolboxes/allocation\l_toolbox.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$allocation__toolbox_8hpp.html",tooltip="Helper function and classes for memory allocation. Focus on portability across platforms."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="stdlib.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node5 -> Node7 [id="edge6_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="cstring",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node5 -> Node8 [id="edge7_Node000005_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="cassert",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node9 [id="edge8_Node000004_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="../basic_types/datatype\l_structure.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$datatype__structure_8hpp.html",tooltip="Headers for generalized datatypes, defines an interface for AD types."];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="iostream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node11 [id="edge10_Node000009_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="complex",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node12 [id="edge11_Node000009_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="cstdio",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node13 [id="edge12_Node000009_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="../code_config.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$code__config_8hpp.html",tooltip="Header file for collecting common macros, definitions and type configurations."];
  Node13 -> Node14 [id="edge13_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="type_traits",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node15 [id="edge14_Node000009_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="ad_structure.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ad__structure_8hpp.html",tooltip="Main routines for the algorithmic differentiation (AD) structure."];
  Node15 -> Node13 [id="edge15_Node000015_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node16 [id="edge16_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="../parallelization\l/omp_structure.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html",tooltip="OpenMP interface header, provides compatibility functions if the code is built without OpenMP support..."];
  Node16 -> Node17 [id="edge17_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="cstddef",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node16 -> Node13 [id="edge18_Node000016_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node18 [id="edge19_Node000016_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="ctime",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node19 [id="edge20_Node000004_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="../parallelization\l/vectorization.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$vectorization_8hpp.html",tooltip="Implementation of a portable SIMD type."];
  Node19 -> Node20 [id="edge21_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="../linear_algebra/vector\l_expressions.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$vector__expressions_8hpp.html",tooltip="Expression templates for vector types with coefficient-wise operations."];
  Node20 -> Node9 [id="edge22_Node000020_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node14 [id="edge23_Node000020_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node21 [id="edge24_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="algorithm",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node20 -> Node8 [id="edge25_Node000020_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node22 [id="edge26_Node000020_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="cstdlib",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node20 -> Node23 [id="edge27_Node000020_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="cmath",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node20 -> Node24 [id="edge28_Node000020_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="cstdint",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node19 -> Node16 [id="edge29_Node000019_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node25 [id="edge30_Node000019_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="initializer_list",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node19 -> Node21 [id="edge31_Node000019_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node23 [id="edge32_Node000019_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node26 [id="edge33_Node000019_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="x86intrin.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node19 -> Node27 [id="edge34_Node000019_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="special_vectorization.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$special__vectorization_8hpp.html",tooltip="Code generator header to create specializations of simd::Array."];
  Node4 -> Node28 [id="edge35_Node000004_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="utility",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node14 [id="edge36_Node000004_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node29 [id="edge37_Node000002_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CElementProperty.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CElementProperty_8hpp.html",tooltip="Light classes to define finite element properties."];
  Node2 -> Node30 [id="edge38_Node000002_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="vector",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
}
