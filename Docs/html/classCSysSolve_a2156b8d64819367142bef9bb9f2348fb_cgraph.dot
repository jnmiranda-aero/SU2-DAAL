digraph "CSysSolve::Smoother_LinSolver"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CSysSolve::Smoother\l_LinSolver",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Generic smoother (modified Richardson iteration with preconditioner)"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#af7297d861dca86b45cf561b6ab642e8f",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CConfig::GetComm_Level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa495414133c826e5f6651d4ce82d0ef6",tooltip="Get the level of MPI communications to be performed."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetLinear\l_Solver_Smoother_Relaxation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aab49874886c4573676a309bf31d9cb2e",tooltip="Get the relaxation factor for iterative linear smoothers."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CSysVector::GetNBlk",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#a36e34edad9ea54a9d0a153fc5035980c",tooltip="return the number of blocks (typically number of nodes locally)"];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CSysVector::GetNBlkDomain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#a291257913c3bd91e40f8ab2c154e2d92",tooltip="return the number of blocks (typically number of nodes locally)"];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CSysVector::GetNVar",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#ac0b4bcd823f7905143430a7bbdcad6f2",tooltip="return the number of variables at each block (typically number per node)"];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CBaseMPIWrapper::GetRank",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a63e1f265b788b4e56cb7ebdeba29b78e",tooltip=" "];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="SU2_TYPE::GetValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceSU2__TYPE.html#adf52a59d6f4e578f7915ec9abbf7cb22",tooltip="Get the (primitive) value of the datatype (needs to be specialized for active types)."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CSysVector::norm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#a55d36be09dfc5bed32246727f25cb7f5",tooltip="L2 norm of the vector."];
  Node11 -> Node12 [id="edge11_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="sqrt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__SIMD.html#ga54a1925ab40fb4249ea255072520de35",tooltip=" "];
  Node11 -> Node13 [id="edge12_Node000011_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CSysVector::squaredNorm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#a5a7712aa50a8edc522e54bff5481493c",tooltip="Squared L2 norm of the vector (via dot with self)."];
  Node13 -> Node14 [id="edge13_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CSysVector::dot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSysVector.html#a96c613a08177a0f6105a635a92b138b0",tooltip="Dot product between \"this\" and an expression."];
  Node14 -> Node15 [id="edge14_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CBaseMPIWrapper::Allreduce",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a381d4b3738c09d92ee1ae9f89715b541",tooltip=" "];
  Node15 -> Node16 [id="edge15_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CBaseMPIWrapper::CopyData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a3c28692a4cab67ad0f81d18273db3d23",tooltip=" "];
  Node16 -> Node2 [id="edge16_Node000016_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node17 [id="edge17_Node000014_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="atomicAdd",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8hpp.html#a9465b8cb1d384f41bbb5f3c04ec815de",tooltip="Atomically update a (shared) lhs value with a (local) rhs value."];
  Node14 -> Node18 [id="edge18_Node000014_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="VecExpr::CVecExpr::\lderived",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classVecExpr_1_1CVecExpr.html#a6054e646d0793f8d3a2075a7392b93fd",tooltip="Cast the expression to Derived, usually to allow evaluation via operator[]."];
  Node14 -> Node19 [id="edge19_Node000014_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
}
