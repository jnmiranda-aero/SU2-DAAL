digraph "COutput::LoadData"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="COutput::LoadData",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Load the data from the solvers into the data sorters and sort it for the linear partitioning."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="COutput::AllocateDataSorters",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCOutput.html#a576a9991a81b18368a1f8ad09b8c65cf",tooltip="Allocates the data sorters if necessary."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="COutput::LoadDataIntoSorter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCOutput.html#ac54efb9d794c522e1bef6cb4ed0d5b9f",tooltip="Load up the values of the requested volume fields into ::Local_Data array."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CPoint::GetDomain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCPoint.html#aa58a27b602e47ddcad22ae74a5c6bc81",tooltip="For parallel computation, its indicates if a point must be computed or not."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CConfig::GetnMarker_All",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a459dee039e618d21a5d78db61c221240",tooltip="Get the total number of boundary markers of the local process including send/receive domains."];
  Node3 -> Node6 [id="edge5_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CVertex::GetNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVertex.html#ad568da06e7191358d3a09a1bee71cdb5",tooltip="Get the node of the vertex."];
  Node3 -> Node7 [id="edge6_Node000003_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CGeometry::GetnPointDomain",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#ac84179060bbac1fe5e856ea3da850b6e",tooltip="Get number of real points (that belong to the domain)."];
  Node3 -> Node8 [id="edge7_Node000003_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CGeometry::GetnVertex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCGeometry.html#a00b7f7e71ff42bd38f39147366dd093a",tooltip="Get number of vertices."];
  Node3 -> Node9 [id="edge8_Node000003_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CMeshFEM::GetNVolElemOwned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCMeshFEM.html#a98cac5880bf32dd7a81e90cfe3e83faa",tooltip="Function, which makes available the number of owned volume elements in the local FEM mesh."];
  Node3 -> Node10 [id="edge9_Node000003_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CConfig::GetSolid_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a1e07d3641838843be05ed58424d39f4f",tooltip="Determines whether a marker with index iMarker is a solid boundary."];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CConfig::GetViscous_Wall",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a890cf694cae683bb44a36c1fa1160e65",tooltip="Determines whether a marker with index iMarker is a viscous no-slip boundary."];
  Node3 -> Node12 [id="edge11_Node000003_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="COutput::LoadSurfaceData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCOutput.html#a01f7c43d229c94a9e8e954a538e5e66e",tooltip="Set the values of the volume output fields for a surface point."];
  Node3 -> Node13 [id="edge12_Node000003_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="COutput::LoadVolumeData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCOutput.html#ad9fcb944022e0d7131d89987458a02ce",tooltip="Set the values of the volume output fields for a point."];
  Node3 -> Node14 [id="edge13_Node000003_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="COutput::LoadVolumeDataFEM",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCOutput.html#a379815a77f3a10e96834a95ff74d57f1",tooltip="Set the values of the volume output fields for a point."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CParallelDataSorter\l::SortOutputData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCParallelDataSorter.html#a44dd56ef2671d15e21eacf3fda758a83",tooltip="Sort the output data for each grid node into a linear partitioning across all processors."];
  Node15 -> Node16 [id="edge15_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CBaseMPIWrapper::Allreduce",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a381d4b3738c09d92ee1ae9f89715b541",tooltip=" "];
  Node16 -> Node17 [id="edge16_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CBaseMPIWrapper::CopyData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a3c28692a4cab67ad0f81d18273db3d23",tooltip=" "];
  Node17 -> Node18 [id="edge17_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node18 -> Node19 [id="edge18_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#af7297d861dca86b45cf561b6ab642e8f",tooltip=" "];
  Node15 -> Node20 [id="edge19_Node000015_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
}
