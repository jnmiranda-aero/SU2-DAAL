digraph "CFEM_DG_EulerSolver::ClassicalRK4_Iteration"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CFEM_DG_EulerSolver\l::ClassicalRK4_Iteration",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Update the solution using the classical fourth-order Runge-Kutta scheme."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CFEM_DG_EulerSolver\l::ComputeVerificationError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a141f2b877000daec03e9aeb68ce6aebf",tooltip="Compute the global error measures (L2, Linf) for verification cases."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CVerificationSolution\l::AddError_Max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#a7bb9d35559c3a895ad82886181814931",tooltip="Increment the global maximum error for verification cases."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CVerificationSolution\l::AddError_RMS",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#a275d10faa1fca4b4b61c9688f1d50b93",tooltip="Increments the global RMS error for verification cases."];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CVerificationSolution\l::ExactSolutionKnown",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#ab2c5b1c7a9bef0eb9689d4b8e3b1236d",tooltip="Whether or not the exact solution is known for this verification solution."];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CConfig::GetDiscrete\l_Adjoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ab3928c4e6debcf50dcd0d38985f6980c",tooltip="Get the indicator whether we are solving an discrete adjoint problem."];
  Node2 -> Node7 [id="edge6_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CVerificationSolution\l::GetError_Max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#a5fd9a5bb471932e03b72933691af916a",tooltip="Get the global maximum error for verification cases."];
  Node2 -> Node8 [id="edge7_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CVerificationSolution\l::GetError_RMS",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#a30a14b2a6e848b0fa92b5fbd8ec3a476",tooltip="Get the global RMS error for verification cases."];
  Node2 -> Node9 [id="edge8_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CVerificationSolution\l::GetLocalError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#a894a4b9e9e4e9c2977739693cd01bd62",tooltip="Get the local error defined as the local solution minus the verification solution."];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CVerificationSolution\l::GetSolution",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#a192fbe5cbcd3b6df65271ad0547bc181",tooltip="Get the exact solution at the current position and time."];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node11 -> Node12 [id="edge11_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#af7297d861dca86b45cf561b6ab642e8f",tooltip=" "];
  Node2 -> Node13 [id="edge12_Node000002_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CConfig::GetPhysicalTime",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#a4f4842f072c0484236e776956ff41cbb",tooltip="Get the current physical time."];
  Node2 -> Node14 [id="edge13_Node000002_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CConfig::GetScreen\l_Wrt_Freq",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ad43daa81fef55ee2c14498294308bad5",tooltip="GetScreen_Wrt_Freq_Inner."];
  Node2 -> Node15 [id="edge14_Node000002_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CConfig::GetTime_Marching",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#ac47e04d76ce865893a94dcedd3c9b6a5",tooltip="Provides information about the time integration, and change the write in the output files information..."];
  Node2 -> Node16 [id="edge15_Node000002_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CConfig::GetTimeIter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aec6051895c2e4f593a5c245104548b78",tooltip="Get the current time iteration number."];
  Node2 -> Node17 [id="edge16_Node000002_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CVerificationSolution\l::SetError_Max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#a8484d5418569b1c807fd8a8f16570b39",tooltip="Set the global maximum error for verification cases."];
  Node2 -> Node18 [id="edge17_Node000002_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CVerificationSolution\l::SetError_RMS",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#afcba935bd5dfc0e5c8bd252b27db85ab",tooltip="Set the global RMS error for verification cases."];
  Node2 -> Node19 [id="edge18_Node000002_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CVerificationSolution\l::SetVerificationError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCVerificationSolution.html#a467e0ccdb07f223326549273ddeb9fa9",tooltip="Calculate the global error metrics for verification cases."];
  Node19 -> Node3 [id="edge19_Node000019_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node20 [id="edge20_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CBaseMPIWrapper::Allgather",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a137ef06ade0c4f94d2a61f9b8817b6a7",tooltip=" "];
  Node20 -> Node21 [id="edge21_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CBaseMPIWrapper::CopyData",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a3c28692a4cab67ad0f81d18273db3d23",tooltip=" "];
  Node21 -> Node11 [id="edge22_Node000021_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node22 [id="edge23_Node000019_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CBaseMPIWrapper::Allreduce",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a381d4b3738c09d92ee1ae9f89715b541",tooltip=" "];
  Node22 -> Node21 [id="edge24_Node000022_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node23 [id="edge25_Node000019_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node19 -> Node24 [id="edge26_Node000019_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CConfig::GetComm_Level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCConfig.html#aa495414133c826e5f6651d4ce82d0ef6",tooltip="Get the level of MPI communications to be performed."];
  Node19 -> Node25 [id="edge27_Node000019_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="CBaseMPIWrapper::GetSize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a3a60032ab9d3e6197ca2796cfb37c4e2",tooltip=" "];
  Node19 -> Node18 [id="edge28_Node000019_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node26 [id="edge29_Node000019_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="sqrt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__SIMD.html#ga54a1925ab40fb4249ea255072520de35",tooltip=" "];
  Node1 -> Node27 [id="edge30_Node000001_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="CFEM_DG_EulerSolver\l::SetResidual_RMS_FEM",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCFEM__DG__EulerSolver.html#a34550ee1621eeabc419e7ddb64c0b52e",tooltip="Update the solution using the classical fourth-order Runge-Kutta scheme."];
  Node27 -> Node28 [id="edge31_Node000027_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="CSolver::AddRes_Max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#af5f5107e5a9ce6b9b97a4a96aef30245",tooltip="Adds the maximal residual, this is useful for the convergence history."];
  Node27 -> Node20 [id="edge32_Node000027_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node22 [id="edge33_Node000027_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node11 [id="edge34_Node000027_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node23 [id="edge35_Node000027_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node24 [id="edge36_Node000027_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node29 [id="edge37_Node000027_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CSolver::GetRes_RMS",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#a2e07e4867f2db7ac98c8332c9476c361",tooltip="Get the maximal residual, this is useful for the convergence history."];
  Node27 -> Node30 [id="edge38_Node000027_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CSolver::SetResToZero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classCSolver.html#a7ede16ff7b3e95bcbaa3eabd99fdf648",tooltip="Set the RMS and MAX residual to zero."];
  Node27 -> Node26 [id="edge39_Node000027_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node30 [id="edge40_Node000001_Node000030",color="steelblue1",style="solid",tooltip=" "];
}
