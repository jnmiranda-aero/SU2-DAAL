digraph "Common/include/code_config.hpp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Common/include/code\l_config.hpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Header file for collecting common macros, definitions and type configurations."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Common/include/basic\l_types/ad_structure.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ad__structure_8hpp.html",tooltip="Main routines for the algorithmic differentiation (AD) structure."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Common/include/basic\l_types/datatype_structure.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$datatype__structure_8hpp.html",tooltip="Headers for generalized datatypes, defines an interface for AD types."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Common/include/adt\l/CADTBaseClass.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CADTBaseClass_8hpp.html",tooltip="Base class for storing an ADT in an arbitrary number of dimensions."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Common/include/adt\l/CADTElemClass.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CADTElemClass_8hpp.html",tooltip="Class for storing an ADT of (linear) elements in an arbitrary number of dimensions."];
  Node3 -> Node230 [id="edge5_Node000003_Node000230",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node230 [id="Node000230",label="Common/include/adt\l/CADTComparePointClass.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CADTComparePointClass_8hpp.html",tooltip="subroutines for comparing two points in an alternating digital tree (ADT)."];
  Node3 -> Node231 [id="edge6_Node000003_Node000231",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node231 [id="Node000231",label="Common/include/adt\l/CADTNodeClass.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CADTNodeClass_8hpp.html",tooltip="Class for storing the information needed in a node of an ADT."];
  Node231 -> Node4 [id="edge7_Node000231_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node232 [id="edge8_Node000003_Node000232",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node232 [id="Node000232",label="Common/include/adt\l/CBBoxTargetClass.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CBBoxTargetClass_8hpp.html",tooltip="Class for storing the information of a possible bounding box candidate during a minimum distance sear..."];
  Node232 -> Node5 [id="edge9_Node000232_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node233 [id="edge10_Node000003_Node000233",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node233 [id="Node000233",label="Common/include/containers\l/C2DContainer.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$C2DContainer_8hpp.html",tooltip="A templated vector/matrix object."];
  Node233 -> Node459 [id="edge11_Node000233_Node000459",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node459 [id="Node000459",label="Common/include/interface\l_interpolation/CInterpolator.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CInterpolator_8hpp.html",tooltip="Base class for multiphysics interpolation."];
  Node459 -> Node15 [id="edge12_Node000459_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="SU2_CFD/src/drivers\l/CDriver.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CDriver_8cpp.html",tooltip="The main subroutines for driving single or multi-zone problems."];
  Node233 -> Node491 [id="edge13_Node000233_Node000491",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node491 [id="Node000491",label="Common/include/toolboxes\l/graph_toolbox.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$graph__toolbox_8hpp.html",tooltip="Functions and classes to build/represent sparse graphs or sparse patterns."];
  Node3 -> Node493 [id="edge14_Node000003_Node000493",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node493 [id="Node000493",label="Common/include/fem\l/geometry_structure\l_fem_part.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$geometry__structure__fem__part_8hpp.html",tooltip="Helper classes for the Fluid FEM solver."];
  Node3 -> Node494 [id="edge15_Node000003_Node000494",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node494 [id="Node000494",label="Common/include/grid\l_movement/CFreeFormBlending.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CFreeFormBlending_8hpp.html",tooltip="Headers of the CFreeFormBlending class. It is the parent class for the FFD blending function."];
  Node3 -> Node459 [id="edge16_Node000003_Node000459",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node500 [id="edge17_Node000003_Node000500",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node500 [id="Node000500",label="Common/include/linear\l_algebra/CSysSolve_b.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CSysSolve__b_8hpp.html",tooltip="Routines for the linear solver used in the reverse sweep of AD."];
  Node500 -> Node184 [id="edge18_Node000500_Node000184",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node184 [id="Node000184",label="Common/src/linear_algebra\l/CSysSolve.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CSysSolve_8cpp.html",tooltip="Main classes required for solving linear systems of equations."];
  Node3 -> Node501 [id="edge19_Node000003_Node000501",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node501 [id="Node000501",label="Common/include/linear\l_algebra/vector_expressions.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$vector__expressions_8hpp.html",tooltip="Expression templates for vector types with coefficient-wise operations."];
  Node501 -> Node502 [id="edge20_Node000501_Node000502",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node502 [id="Node000502",label="Common/include/linear\l_algebra/CSysVector.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CSysVector_8hpp.html",tooltip="Declararion and inlines of the vector class used in the solution of large, distributed,..."];
  Node501 -> Node504 [id="edge21_Node000501_Node000504",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node504 [id="Node000504",label="Common/include/parallelization\l/vectorization.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$vectorization_8hpp.html",tooltip="Implementation of a portable SIMD type."];
  Node504 -> Node233 [id="edge22_Node000504_Node000233",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node504 -> Node502 [id="edge23_Node000504_Node000502",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node506 [id="edge24_Node000003_Node000506",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node506 [id="Node000506",label="Common/include/parallelization\l/mpi_structure.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$mpi__structure_8hpp.html",tooltip="Headers of the mpi interface for generalized datatypes. The subroutines and functions are in the mpi_..."];
  Node506 -> Node502 [id="edge25_Node000506_Node000502",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node506 -> Node489 [id="edge26_Node000506_Node000489",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node489 [id="Node000489",label="Common/include/toolboxes\l/CQuasiNewtonInvLeastSquares.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CQuasiNewtonInvLeastSquares_8hpp.html",tooltip="Implements a method to accelerate and stabilize the convergence of fixed point iterations,..."];
  Node506 -> Node193 [id="edge27_Node000506_Node000193",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node193 [id="Node000193",label="Common/src/linear_algebra\l/CPastixWrapper.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CPastixWrapper_8cpp.html",tooltip="An interface to the INRIA solver PaStiX (http://pastix.gforge.inria.fr/files/README-txt...."];
  Node506 -> Node11 [id="edge28_Node000506_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="SU2_CFD/include/SU2\l_CFD.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$SU2__CFD_8hpp.html",tooltip="Headers of the main subroutines of the code SU2_CFD. The subroutines and functions are in the SU2_CFD..."];
  Node3 -> Node582 [id="edge29_Node000003_Node000582",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node582 [id="Node000582",label="Common/include/toolboxes\l/printing_toolbox.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$printing__toolbox_8hpp.html",tooltip="Header file for the printing toolbox."];
  Node582 -> Node8 [id="edge30_Node000582_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Common/src/CConfig.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CConfig_8cpp.html",tooltip="Main file for managing the config file."];
  Node3 -> Node584 [id="edge31_Node000003_Node000584",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node584 [id="Node000584",label="Common/src/basic_types\l/ad_structure.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ad__structure_8cpp.html",tooltip="Main subroutines for the algorithmic differentiation (AD) structure."];
  Node3 -> Node585 [id="edge32_Node000003_Node000585",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node585 [id="Node000585",label="SU2_CFD/include/fluid\l/CConductivityModel.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CConductivityModel_8hpp.html",tooltip="Defines an interface class for thermal conductivity models."];
  Node585 -> Node311 [id="edge33_Node000585_Node000311",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node311 [id="Node000311",label="SU2_CFD/include/fluid\l/CFluidModel.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CFluidModel_8hpp.html",tooltip="Defines the main fluid model class for thermophysical properties."];
  Node3 -> Node592 [id="edge34_Node000003_Node000592",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node592 [id="Node000592",label="SU2_CFD/include/fluid\l/CDiffusivityModel.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CDiffusivityModel_8hpp.html",tooltip="Interface class for defining mass diffusivity models."];
  Node592 -> Node311 [id="edge35_Node000592_Node000311",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node311 [id="edge36_Node000003_Node000311",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node596 [id="edge37_Node000003_Node000596",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node596 [id="Node000596",label="SU2_CFD/include/fluid\l/CViscosityModel.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CViscosityModel_8hpp.html",tooltip="Interface class for defining laminar viscosity models."];
  Node596 -> Node311 [id="edge38_Node000596_Node000311",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node8 [id="edge39_Node000002_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge40_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node600 [id="edge41_Node000001_Node000600",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 [id="Node000600",label="Common/include/parallelization\l/omp_structure.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$omp__structure_8hpp.html",tooltip="OpenMP interface header, provides compatibility functions if the code is built without OpenMP support..."];
  Node600 -> Node4 [id="edge42_Node000600_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node5 [id="edge43_Node000600_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node2 [id="edge44_Node000600_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node502 [id="edge45_Node000600_Node000502",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node506 [id="edge46_Node000600_Node000506",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node601 [id="edge47_Node000600_Node000601",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node601 [id="Node000601",label="Common/include/parallelization\l/omp_structure.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$omp__structure_8cpp.html",tooltip="Source file counterpart for omp_structure.hpp."];
  Node600 -> Node504 [id="edge48_Node000600_Node000504",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node489 [id="edge49_Node000600_Node000489",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node491 [id="edge50_Node000600_Node000491",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node186 [id="edge51_Node000600_Node000186",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node186 [id="Node000186",label="Common/src/geometry\l/CGeometry.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CGeometry_8cpp.html",tooltip="Implementation of the base geometry class."];
  Node600 -> Node466 [id="edge52_Node000600_Node000466",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node466 [id="Node000466",label="Common/src/geometry\l/dual_grid/CEdge.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CEdge_8cpp.html",tooltip="Implementation of the edge class."];
  Node600 -> Node308 [id="edge53_Node000600_Node000308",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node308 [id="Node000308",label="Common/src/geometry\l/dual_grid/CPoint.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CPoint_8cpp.html",tooltip="Main classes for defining the points of the dual grid."];
  Node600 -> Node193 [id="edge54_Node000600_Node000193",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node184 [id="edge55_Node000600_Node000184",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node11 [id="edge56_Node000600_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node602 [id="edge57_Node000600_Node000602",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node602 [id="Node000602",label="SU2_CFD/include/gradients\l/computeGradientsGreenGauss.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$computeGradientsGreenGauss_8hpp.html",tooltip="Generic implementation of Green-Gauss gradient computation."];
  Node600 -> Node603 [id="edge58_Node000600_Node000603",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node603 [id="Node000603",label="SU2_CFD/include/gradients\l/computeGradientsLeastSquares.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$computeGradientsLeastSquares_8hpp.html",tooltip="Generic implementation of Least-Squares gradient computation."];
  Node600 -> Node43 [id="edge59_Node000600_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="SU2_CFD/include/integration\l/CNewtonIntegration.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CNewtonIntegration_8hpp.html",tooltip="Newton-Krylov integration."];
  Node600 -> Node91 [id="edge60_Node000600_Node000091",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node91 [id="Node000091",label="SU2_CFD/include/solvers\l/CFEASolverBase.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CFEASolverBase_8hpp.html",tooltip=" "];
  Node600 -> Node103 [id="edge61_Node000600_Node000103",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node103 [id="Node000103",label="SU2_CFD/include/solvers\l/CFVMFlowSolverBase.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CFVMFlowSolverBase_8hpp.html",tooltip="Base class template for all FVM flow solvers."];
  Node600 -> Node121 [id="edge62_Node000600_Node000121",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node121 [id="Node000121",label="SU2_CFD/include/solvers\l/CScalarSolver.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CScalarSolver_8hpp.html",tooltip="Headers of the CScalarSolver class."];
  Node121 -> Node124 [id="edge63_Node000121_Node000124",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node124 [id="Node000124",label="SU2_CFD/include/solvers\l/CScalarSolver.inl",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CScalarSolver_8inl.html",tooltip="Main subroutines of CScalarSolver class."];
  Node121 -> Node127 [id="edge64_Node000121_Node000127",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node127 [id="Node000127",label="SU2_CFD/include/solvers\l/CSpeciesSolver.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CSpeciesSolver_8hpp.html",tooltip="Headers of the CSpeciesSolver class."];
  Node121 -> Node130 [id="edge65_Node000121_Node000130",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node130 [id="Node000130",label="SU2_CFD/include/solvers\l/CTurbSolver.hpp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$CTurbSolver_8hpp.html",tooltip="Headers of the CTurbSolver class."];
  Node600 -> Node124 [id="edge66_Node000600_Node000124",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node127 [id="edge67_Node000600_Node000127",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node130 [id="edge68_Node000600_Node000130",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node15 [id="edge69_Node000600_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node600 -> Node71 [id="edge70_Node000600_Node000071",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="SU2_CFD/src/integration\l/CIntegration.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CIntegration_8cpp.html",tooltip="Implementation of the base class for space and time integration."];
  Node600 -> Node42 [id="edge71_Node000600_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="SU2_CFD/src/integration\l/CMultiGridIntegration.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CMultiGridIntegration_8cpp.html",tooltip="Implementation of the multigrid integration class."];
  Node600 -> Node46 [id="edge72_Node000600_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="SU2_CFD/src/integration\l/CSingleGridIntegration.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CSingleGridIntegration_8cpp.html",tooltip="Single (fine) grid integration class implementation."];
  Node600 -> Node223 [id="edge73_Node000600_Node000223",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node223 [id="Node000223",label="SU2_CFD/src/limiters\l/CLimiterDetails.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CLimiterDetails_8cpp.html",tooltip="A class template that allows defining limiters via specialization of particular details."];
  Node600 -> Node377 [id="edge74_Node000600_Node000377",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node377 [id="Node000377",label="SU2_CFD/src/numerics\l/elasticity/CFEAElasticity.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CFEAElasticity_8cpp.html",tooltip="Base class for all elasticity problems."];
  Node600 -> Node90 [id="edge75_Node000600_Node000090",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node90 [id="Node000090",label="SU2_CFD/src/solvers\l/CDiscAdjSolver.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$CDiscAdjSolver_8cpp.html",tooltip="Main subroutines for solving the discrete adjoint problem."];
}
